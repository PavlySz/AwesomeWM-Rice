Experiment 'pythonaacf' is active
Experiment 'pythonTensorboardExperiment' is active
Experiment 'PythonPyTorchProfiler' is active
LSP Notebooks experiment is disabled -- not in treatment group
> conda info --json
Python interpreter path: ~/anaconda3/envs/bright/bin/python
> ~/.conda/bin/conda info --json
> ~/anaconda3/bin/conda info --json
> /bin/python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/interpreterInfo.py
> /sbin/python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/interpreterInfo.py
> /usr/bin/python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/interpreterInfo.py
> /usr/sbin/python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/interpreterInfo.py
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/printEnvVariables.py
> ~/anaconda3/bin/python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/interpreterInfo.py
> ~/anaconda3/envs/bright/bin/python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/interpreterInfo.py
> ~/anaconda3/envs/tf2/bin/python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/interpreterInfo.py
Starting Pylance language server.
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/read_config.py
cwd: .
##########Linting Output - pylint##########

[]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/helpers.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/helpers/read_config.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/helpers.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "helpers",
        "obj": "",
        "line": 5,
        "column": 0,
        "endLine": 5,
        "endColumn": 57,
        "path": "app/etl/helpers.py",
        "symbol": "import-error",
        "message": "Unable to import 'app.helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[]
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "ps_etl",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 57,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'app.helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "helpers",
        "obj": "",
        "line": 5,
        "column": 0,
        "endLine": 5,
        "endColumn": 57,
        "path": "app/etl/helpers.py",
        "symbol": "import-error",
        "message": "Unable to import 'app.helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "ps_etl",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 57,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'app.helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "ps_etl",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 17,
        "endColumn": 72,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'app.helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "ps_etl",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 57,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'app.helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "ps_etl",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 17,
        "endColumn": 72,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'app.helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "ps_etl",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 57,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'app.helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "ps_etl",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 17,
        "endColumn": 72,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'app.helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "ps_etl",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 57,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'app.helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/__init__.py
cwd: .
##########Linting Output - pylint##########

[]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/__init__.py
cwd: .
##########Linting Output - pylint##########

[]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/helpers/__init__.py
cwd: .
##########Linting Output - pylint##########

[]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/qa/__init__.py
cwd: .
##########Linting Output - pylint##########

[]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 17,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########


[ERROR 2022-6-18 9:8:4.603]: Linter 'pylint' failed to parse the output '. SyntaxError: Unexpected end of JSON input
    at JSON.parse (<anonymous>)
    at s.parseMessages (/home/bot/.vscode/extensions/ms-python.python-2022.10.1/out/client/extension.js:2:508570)
    at s.run (/home/bot/.vscode/extensions/ms-python.python-2022.10.1/out/client/extension.js:2:489825)
    at processTicksAndRejections (node:internal/process/task_queues:96:5)
    at s.runLinter (/home/bot/.vscode/extensions/ms-python.python-2022.10.1/out/client/extension.js:2:508085)
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 17,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########


[ERROR 2022-6-18 9:8:15.527]: Linter 'pylint' failed to parse the output '. SyntaxError: Unexpected end of JSON input
    at JSON.parse (<anonymous>)
    at s.parseMessages (/home/bot/.vscode/extensions/ms-python.python-2022.10.1/out/client/extension.js:2:508570)
    at s.run (/home/bot/.vscode/extensions/ms-python.python-2022.10.1/out/client/extension.js:2:489825)
    at s.runLinter (/home/bot/.vscode/extensions/ms-python.python-2022.10.1/out/client/extension.js:2:508085)
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########


[ERROR 2022-6-18 9:8:15.736]: Linter 'pylint' failed to parse the output '. SyntaxError: Unexpected end of JSON input
    at JSON.parse (<anonymous>)
    at s.parseMessages (/home/bot/.vscode/extensions/ms-python.python-2022.10.1/out/client/extension.js:2:508570)
    at s.run (/home/bot/.vscode/extensions/ms-python.python-2022.10.1/out/client/extension.js:2:489825)
    at s.runLinter (/home/bot/.vscode/extensions/ms-python.python-2022.10.1/out/client/extension.js:2:508085)
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########


[ERROR 2022-6-18 9:8:15.927]: Linter 'pylint' failed to parse the output '. SyntaxError: Unexpected end of JSON input
    at JSON.parse (<anonymous>)
    at s.parseMessages (/home/bot/.vscode/extensions/ms-python.python-2022.10.1/out/client/extension.js:2:508570)
    at s.run (/home/bot/.vscode/extensions/ms-python.python-2022.10.1/out/client/extension.js:2:489825)
    at s.runLinter (/home/bot/.vscode/extensions/ms-python.python-2022.10.1/out/client/extension.js:2:508085)
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 17,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 17,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 17,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 17,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 17,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 17,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/helpers/helpers.py
cwd: .
##########Linting Output - pylint##########

[]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/helpers/helpers.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.helpers.helpers",
        "obj": "",
        "line": 5,
        "column": 0,
        "endLine": 5,
        "endColumn": 53,
        "path": "app/helpers/helpers.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 17,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 17,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 6,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 6,
        "column": 10,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 7,
        "column": 30,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 7,
        "column": 30,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/helpers/helpers.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.helpers.helpers",
        "obj": "",
        "line": 5,
        "column": 0,
        "endLine": 5,
        "endColumn": 53,
        "path": "app/helpers/helpers.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/helpers/helpers.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.helpers.helpers",
        "obj": "",
        "line": 5,
        "column": 0,
        "endLine": 5,
        "endColumn": 53,
        "path": "app/helpers/helpers.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/helpers/helpers.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/helpers/helpers.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.helpers.helpers",
        "obj": "",
        "line": 5,
        "column": 0,
        "endLine": 5,
        "endColumn": 53,
        "path": "app/helpers/helpers.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.helpers.helpers",
        "obj": "",
        "line": 5,
        "column": 0,
        "endLine": 5,
        "endColumn": 53,
        "path": "app/helpers/helpers.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########


[ERROR 2022-6-18 9:13:31.5]: Linter 'pylint' failed to parse the output '. SyntaxError: Unexpected end of JSON input
    at JSON.parse (<anonymous>)
    at s.parseMessages (/home/bot/.vscode/extensions/ms-python.python-2022.10.1/out/client/extension.js:2:508570)
    at s.run (/home/bot/.vscode/extensions/ms-python.python-2022.10.1/out/client/extension.js:2:489825)
    at s.runLinter (/home/bot/.vscode/extensions/ms-python.python-2022.10.1/out/client/extension.js:2:508085)
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/qa/__init__.py
cwd: .
##########Linting Output - pylint##########

[]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/qa/qa.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 52,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "app/qa/qa.py",
        "symbol": "line-too-long",
        "message": "Line too long (141/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 109,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "app/qa/qa.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "warning",
        "module": "app.qa.qa",
        "obj": "",
        "line": 2,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/qa/qa.py",
        "symbol": "fixme",
        "message": "TODO format this shit",
        "message-id": "W0511"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 35,
        "column": 0,
        "endLine": 35,
        "endColumn": 11,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"rs_endpoint\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 37,
        "column": 0,
        "endLine": 37,
        "endColumn": 7,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"rs_host\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 38,
        "column": 0,
        "endLine": 38,
        "endColumn": 11,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"rs_database\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 39,
        "column": 0,
        "endLine": 39,
        "endColumn": 7,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"rs_user\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 40,
        "column": 0,
        "endLine": 40,
        "endColumn": 11,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"rs_password\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 59,
        "column": 0,
        "endLine": 59,
        "endColumn": 13,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"read_template\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 74,
        "column": 0,
        "endLine": 74,
        "endColumn": 7,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"ua_test\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 96,
        "column": 0,
        "endLine": 115,
        "endColumn": 66,
        "path": "app/qa/qa.py",
        "symbol": "consider-using-dict-items",
        "message": "Consider iterating with .items()",
        "message-id": "C0206"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 96,
        "column": 9,
        "endLine": 96,
        "endColumn": 27,
        "path": "app/qa/qa.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 120,
        "column": 0,
        "endLine": 120,
        "endColumn": 11,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"totalerrcnt\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 121,
        "column": 0,
        "endLine": 121,
        "endColumn": 11,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"totalchkcnt\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 122,
        "column": 9,
        "endLine": 122,
        "endColumn": 27,
        "path": "app/qa/qa.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 124,
        "column": 4,
        "endLine": 124,
        "endColumn": 10,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"errcnt\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 125,
        "column": 4,
        "endLine": 125,
        "endColumn": 10,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"chkcnt\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 129,
        "column": 8,
        "endLine": 166,
        "endColumn": 45,
        "path": "app/qa/qa.py",
        "symbol": "consider-using-enumerate",
        "message": "Consider using enumerate instead of iterating with range and len",
        "message-id": "C0200"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 131,
        "column": 12,
        "endLine": 131,
        "endColumn": 18,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"chkcnt\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 132,
        "column": 12,
        "endLine": 132,
        "endColumn": 23,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"totalchkcnt\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 160,
        "column": 16,
        "endLine": 160,
        "endColumn": 21,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"field\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 165,
        "column": 16,
        "endLine": 165,
        "endColumn": 22,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"errcnt\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 166,
        "column": 16,
        "endLine": 166,
        "endColumn": 27,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"totalerrcnt\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "pause_instance",
        "line": 177,
        "column": 0,
        "endLine": 177,
        "endColumn": 18,
        "path": "app/qa/qa.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/qa/qa.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 51,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "app/qa/qa.py",
        "symbol": "line-too-long",
        "message": "Line too long (141/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 108,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "app/qa/qa.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 34,
        "column": 0,
        "endLine": 34,
        "endColumn": 11,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"rs_endpoint\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 36,
        "column": 0,
        "endLine": 36,
        "endColumn": 7,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"rs_host\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 37,
        "column": 0,
        "endLine": 37,
        "endColumn": 11,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"rs_database\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 38,
        "column": 0,
        "endLine": 38,
        "endColumn": 7,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"rs_user\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 39,
        "column": 0,
        "endLine": 39,
        "endColumn": 11,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"rs_password\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 58,
        "column": 0,
        "endLine": 58,
        "endColumn": 13,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"read_template\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 73,
        "column": 0,
        "endLine": 73,
        "endColumn": 7,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"ua_test\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 95,
        "column": 0,
        "endLine": 114,
        "endColumn": 66,
        "path": "app/qa/qa.py",
        "symbol": "consider-using-dict-items",
        "message": "Consider iterating with .items()",
        "message-id": "C0206"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 95,
        "column": 9,
        "endLine": 95,
        "endColumn": 27,
        "path": "app/qa/qa.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 119,
        "column": 0,
        "endLine": 119,
        "endColumn": 11,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"totalerrcnt\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 120,
        "column": 0,
        "endLine": 120,
        "endColumn": 11,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"totalchkcnt\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 121,
        "column": 9,
        "endLine": 121,
        "endColumn": 27,
        "path": "app/qa/qa.py",
        "symbol": "consider-iterating-dictionary",
        "message": "Consider iterating the dictionary directly instead of calling .keys()",
        "message-id": "C0201"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 123,
        "column": 4,
        "endLine": 123,
        "endColumn": 10,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"errcnt\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 124,
        "column": 4,
        "endLine": 124,
        "endColumn": 10,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"chkcnt\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 128,
        "column": 8,
        "endLine": 165,
        "endColumn": 45,
        "path": "app/qa/qa.py",
        "symbol": "consider-using-enumerate",
        "message": "Consider using enumerate instead of iterating with range and len",
        "message-id": "C0200"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 130,
        "column": 12,
        "endLine": 130,
        "endColumn": 18,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"chkcnt\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 131,
        "column": 12,
        "endLine": 131,
        "endColumn": 23,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"totalchkcnt\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 159,
        "column": 16,
        "endLine": 159,
        "endColumn": 21,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"field\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 164,
        "column": 16,
        "endLine": 164,
        "endColumn": 22,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"errcnt\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "",
        "line": 165,
        "column": 16,
        "endLine": 165,
        "endColumn": 27,
        "path": "app/qa/qa.py",
        "symbol": "invalid-name",
        "message": "Constant name \"totalerrcnt\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "app.qa.qa",
        "obj": "pause_instance",
        "line": 176,
        "column": 0,
        "endLine": 176,
        "endColumn": 18,
        "path": "app/qa/qa.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ~/.vscode/extensions/ms-python.vscode-pylance-2022.7.30/dist/typeshed-fallback/stdlib/time.pyi
cwd: ~/.vscode/extensions/ms-python.vscode-pylance-2022.7.30/dist/typeshed-fallback/stdlib
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "time",
        "obj": "",
        "line": 42,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "time.pyi",
        "symbol": "line-too-long",
        "message": "Line too long (129/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "",
        "line": 61,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "time.pyi",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "",
        "line": 90,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "time.pyi",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "time.pyi",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "error",
        "module": "time",
        "obj": "",
        "line": 2,
        "column": 0,
        "endLine": 2,
        "endColumn": 31,
        "path": "time.pyi",
        "symbol": "no-name-in-module",
        "message": "No name 'structseq' in module '_typeshed'",
        "message-id": "E0611"
    },
    {
        "type": "refactor",
        "module": "time",
        "obj": "",
        "line": 16,
        "column": 7,
        "endLine": 16,
        "endColumn": 87,
        "path": "time.pyi",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with \"in\" to \"sys.platform not in ('linux', 'win32', 'darwin')\"",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "time",
        "obj": "",
        "line": 26,
        "column": 7,
        "endLine": 26,
        "endColumn": 59,
        "path": "time.pyi",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with \"in\" to \"sys.platform not in ('linux', 'darwin')\"",
        "message-id": "R1714"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time",
        "line": 40,
        "column": 0,
        "endLine": 40,
        "endColumn": 17,
        "path": "time.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time",
        "line": 40,
        "column": 0,
        "endLine": 40,
        "endColumn": 17,
        "path": "time.pyi",
        "symbol": "invalid-name",
        "message": "Class name \"struct_time\" doesn't conform to PascalCase naming style ('[^\\\\W\\\\da-z][^\\\\W_]+$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_year",
        "line": 44,
        "column": 4,
        "endLine": 44,
        "endColumn": 15,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_year",
        "line": 44,
        "column": 30,
        "endLine": 44,
        "endColumn": 33,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_mon",
        "line": 46,
        "column": 4,
        "endLine": 46,
        "endColumn": 14,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_mon",
        "line": 46,
        "column": 29,
        "endLine": 46,
        "endColumn": 32,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_mday",
        "line": 48,
        "column": 4,
        "endLine": 48,
        "endColumn": 15,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_mday",
        "line": 48,
        "column": 30,
        "endLine": 48,
        "endColumn": 33,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_hour",
        "line": 50,
        "column": 4,
        "endLine": 50,
        "endColumn": 15,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_hour",
        "line": 50,
        "column": 30,
        "endLine": 50,
        "endColumn": 33,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_min",
        "line": 52,
        "column": 4,
        "endLine": 52,
        "endColumn": 14,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_min",
        "line": 52,
        "column": 29,
        "endLine": 52,
        "endColumn": 32,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_sec",
        "line": 54,
        "column": 4,
        "endLine": 54,
        "endColumn": 14,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_sec",
        "line": 54,
        "column": 29,
        "endLine": 54,
        "endColumn": 32,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_wday",
        "line": 56,
        "column": 4,
        "endLine": 56,
        "endColumn": 15,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_wday",
        "line": 56,
        "column": 30,
        "endLine": 56,
        "endColumn": 33,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_yday",
        "line": 58,
        "column": 4,
        "endLine": 58,
        "endColumn": 15,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_yday",
        "line": 58,
        "column": 30,
        "endLine": 58,
        "endColumn": 33,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_isdst",
        "line": 60,
        "column": 4,
        "endLine": 60,
        "endColumn": 16,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_isdst",
        "line": 60,
        "column": 31,
        "endLine": 60,
        "endColumn": 34,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_zone",
        "line": 63,
        "column": 4,
        "endLine": 63,
        "endColumn": 15,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_zone",
        "line": 63,
        "column": 30,
        "endLine": 63,
        "endColumn": 33,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_gmtoff",
        "line": 65,
        "column": 4,
        "endLine": 65,
        "endColumn": 17,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_gmtoff",
        "line": 65,
        "column": 32,
        "endLine": 65,
        "endColumn": 35,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "asctime",
        "line": 67,
        "column": 0,
        "endLine": 67,
        "endColumn": 11,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "asctime",
        "line": 67,
        "column": 12,
        "endLine": 67,
        "endColumn": 39,
        "path": "time.pyi",
        "symbol": "invalid-name",
        "message": "Argument name \"t\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "asctime",
        "line": 67,
        "column": 55,
        "endLine": 67,
        "endColumn": 58,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "asctime",
        "line": 67,
        "column": 12,
        "endLine": 67,
        "endColumn": 39,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 't'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "clock",
        "line": 70,
        "column": 4,
        "endLine": 70,
        "endColumn": 13,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "clock",
        "line": 70,
        "column": 26,
        "endLine": 70,
        "endColumn": 29,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "ctime",
        "line": 72,
        "column": 0,
        "endLine": 72,
        "endColumn": 9,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "ctime",
        "line": 72,
        "column": 44,
        "endLine": 72,
        "endColumn": 47,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "ctime",
        "line": 72,
        "column": 10,
        "endLine": 72,
        "endColumn": 28,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'secs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "gmtime",
        "line": 73,
        "column": 0,
        "endLine": 73,
        "endColumn": 10,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "gmtime",
        "line": 73,
        "column": 53,
        "endLine": 73,
        "endColumn": 56,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "gmtime",
        "line": 73,
        "column": 11,
        "endLine": 73,
        "endColumn": 29,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'secs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "localtime",
        "line": 74,
        "column": 0,
        "endLine": 74,
        "endColumn": 13,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "localtime",
        "line": 74,
        "column": 56,
        "endLine": 74,
        "endColumn": 59,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "localtime",
        "line": 74,
        "column": 14,
        "endLine": 74,
        "endColumn": 32,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'secs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "mktime",
        "line": 75,
        "column": 0,
        "endLine": 75,
        "endColumn": 10,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "mktime",
        "line": 75,
        "column": 11,
        "endLine": 75,
        "endColumn": 38,
        "path": "time.pyi",
        "symbol": "invalid-name",
        "message": "Argument name \"t\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "mktime",
        "line": 75,
        "column": 50,
        "endLine": 75,
        "endColumn": 53,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "mktime",
        "line": 75,
        "column": 11,
        "endLine": 75,
        "endColumn": 38,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 't'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "sleep",
        "line": 76,
        "column": 0,
        "endLine": 76,
        "endColumn": 9,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "sleep",
        "line": 76,
        "column": 32,
        "endLine": 76,
        "endColumn": 35,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "sleep",
        "line": 76,
        "column": 10,
        "endLine": 76,
        "endColumn": 21,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'secs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "strftime",
        "line": 77,
        "column": 0,
        "endLine": 77,
        "endColumn": 12,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "strftime",
        "line": 77,
        "column": 26,
        "endLine": 77,
        "endColumn": 53,
        "path": "time.pyi",
        "symbol": "invalid-name",
        "message": "Argument name \"t\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "strftime",
        "line": 77,
        "column": 13,
        "endLine": 77,
        "endColumn": 24,
        "path": "time.pyi",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'format'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "strftime",
        "line": 77,
        "column": 69,
        "endLine": 77,
        "endColumn": 72,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "strftime",
        "line": 77,
        "column": 13,
        "endLine": 77,
        "endColumn": 24,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'format'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "strftime",
        "line": 77,
        "column": 26,
        "endLine": 77,
        "endColumn": 53,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 't'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "strptime",
        "line": 78,
        "column": 0,
        "endLine": 78,
        "endColumn": 12,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "strptime",
        "line": 78,
        "column": 26,
        "endLine": 78,
        "endColumn": 37,
        "path": "time.pyi",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'format'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "strptime",
        "line": 78,
        "column": 61,
        "endLine": 78,
        "endColumn": 64,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "strptime",
        "line": 78,
        "column": 13,
        "endLine": 78,
        "endColumn": 24,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'string'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "strptime",
        "line": 78,
        "column": 26,
        "endLine": 78,
        "endColumn": 37,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'format'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "time",
        "line": 79,
        "column": 0,
        "endLine": 79,
        "endColumn": 8,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "time",
        "line": 79,
        "column": 21,
        "endLine": 79,
        "endColumn": 24,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "tzset",
        "line": 82,
        "column": 4,
        "endLine": 82,
        "endColumn": 13,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "tzset",
        "line": 82,
        "column": 25,
        "endLine": 82,
        "endColumn": 28,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "refactor",
        "module": "time",
        "obj": "_ClockInfo",
        "line": 84,
        "column": 0,
        "endLine": 84,
        "endColumn": 16,
        "path": "time.pyi",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "get_clock_info",
        "line": 90,
        "column": 0,
        "endLine": 90,
        "endColumn": 18,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "get_clock_info",
        "line": 90,
        "column": 117,
        "endLine": 90,
        "endColumn": 120,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "get_clock_info",
        "line": 90,
        "column": 19,
        "endLine": 90,
        "endColumn": 100,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'name'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "monotonic",
        "line": 91,
        "column": 0,
        "endLine": 91,
        "endColumn": 13,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "monotonic",
        "line": 91,
        "column": 26,
        "endLine": 91,
        "endColumn": 29,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "perf_counter",
        "line": 92,
        "column": 0,
        "endLine": 92,
        "endColumn": 16,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "perf_counter",
        "line": 92,
        "column": 29,
        "endLine": 92,
        "endColumn": 32,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "process_time",
        "line": 93,
        "column": 0,
        "endLine": 93,
        "endColumn": 16,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "process_time",
        "line": 93,
        "column": 29,
        "endLine": 93,
        "endColumn": 32,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "clock_getres",
        "line": 96,
        "column": 4,
        "endLine": 96,
        "endColumn": 20,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "clock_getres",
        "line": 96,
        "column": 44,
        "endLine": 96,
        "endColumn": 47,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "clock_getres",
        "line": 96,
        "column": 21,
        "endLine": 96,
        "endColumn": 32,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'clk_id'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "clock_gettime",
        "line": 97,
        "column": 4,
        "endLine": 97,
        "endColumn": 21,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "clock_gettime",
        "line": 97,
        "column": 45,
        "endLine": 97,
        "endColumn": 48,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "clock_gettime",
        "line": 97,
        "column": 22,
        "endLine": 97,
        "endColumn": 33,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'clk_id'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "clock_settime",
        "line": 98,
        "column": 4,
        "endLine": 98,
        "endColumn": 21,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "clock_settime",
        "line": 98,
        "column": 35,
        "endLine": 98,
        "endColumn": 46,
        "path": "time.pyi",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'time' from outer scope (line 79)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "clock_settime",
        "line": 98,
        "column": 57,
        "endLine": 98,
        "endColumn": 60,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "clock_settime",
        "line": 98,
        "column": 22,
        "endLine": 98,
        "endColumn": 33,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'clk_id'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "clock_settime",
        "line": 98,
        "column": 35,
        "endLine": 98,
        "endColumn": 46,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'time'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "clock_gettime_ns",
        "line": 102,
        "column": 8,
        "endLine": 102,
        "endColumn": 28,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "clock_gettime_ns",
        "line": 102,
        "column": 52,
        "endLine": 102,
        "endColumn": 55,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "clock_gettime_ns",
        "line": 102,
        "column": 29,
        "endLine": 102,
        "endColumn": 42,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'clock_id'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "clock_settime_ns",
        "line": 103,
        "column": 8,
        "endLine": 103,
        "endColumn": 28,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "clock_settime_ns",
        "line": 103,
        "column": 44,
        "endLine": 103,
        "endColumn": 53,
        "path": "time.pyi",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'time' from outer scope (line 79)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "clock_settime_ns",
        "line": 103,
        "column": 63,
        "endLine": 103,
        "endColumn": 66,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "clock_settime_ns",
        "line": 103,
        "column": 29,
        "endLine": 103,
        "endColumn": 42,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'clock_id'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "clock_settime_ns",
        "line": 103,
        "column": 44,
        "endLine": 103,
        "endColumn": 53,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'time'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "pthread_getcpuclockid",
        "line": 106,
        "column": 8,
        "endLine": 106,
        "endColumn": 33,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "pthread_getcpuclockid",
        "line": 106,
        "column": 58,
        "endLine": 106,
        "endColumn": 61,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "pthread_getcpuclockid",
        "line": 106,
        "column": 34,
        "endLine": 106,
        "endColumn": 48,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'thread_id'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "monotonic_ns",
        "line": 108,
        "column": 4,
        "endLine": 108,
        "endColumn": 20,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "monotonic_ns",
        "line": 108,
        "column": 31,
        "endLine": 108,
        "endColumn": 34,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "perf_counter_ns",
        "line": 109,
        "column": 4,
        "endLine": 109,
        "endColumn": 23,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "perf_counter_ns",
        "line": 109,
        "column": 34,
        "endLine": 109,
        "endColumn": 37,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "process_time_ns",
        "line": 110,
        "column": 4,
        "endLine": 110,
        "endColumn": 23,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "process_time_ns",
        "line": 110,
        "column": 34,
        "endLine": 110,
        "endColumn": 37,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "time_ns",
        "line": 111,
        "column": 4,
        "endLine": 111,
        "endColumn": 15,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "time_ns",
        "line": 111,
        "column": 26,
        "endLine": 111,
        "endColumn": 29,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "thread_time",
        "line": 112,
        "column": 4,
        "endLine": 112,
        "endColumn": 19,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "thread_time",
        "line": 112,
        "column": 32,
        "endLine": 112,
        "endColumn": 35,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "thread_time_ns",
        "line": 113,
        "column": 4,
        "endLine": 113,
        "endColumn": 22,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "thread_time_ns",
        "line": 113,
        "column": 33,
        "endLine": 113,
        "endColumn": 36,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "",
        "line": 3,
        "column": 0,
        "endLine": 3,
        "endColumn": 32,
        "path": "time.pyi",
        "symbol": "wrong-import-order",
        "message": "standard import \"from typing import Any, Protocol\" should be placed before \"from _typeshed import structseq\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "",
        "line": 4,
        "column": 0,
        "endLine": 4,
        "endColumn": 62,
        "path": "time.pyi",
        "symbol": "wrong-import-order",
        "message": "third party import \"from typing_extensions import Final, Literal, TypeAlias, final\" should be placed before \"from _typeshed import structseq\"",
        "message-id": "C0411"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 101,
        "column": 56,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "unterminated string literal (detected at line 101) (<unknown>, line 101)",
        "message-id": "E0001"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 101,
        "column": 57,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "unterminated string literal (detected at line 101) (<unknown>, line 101)",
        "message-id": "E0001"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 101,
        "column": 48,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "unterminated string literal (detected at line 101) (<unknown>, line 101)",
        "message-id": "E0001"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 84,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 94,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 94,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 94,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 94,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 94,
        "column": 49,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 94,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out ",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 94,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when r",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 94,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 94,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 94,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 95,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 94,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 94,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 95,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 94,
        "column": 68,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 96,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 94,
        "column": 68,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 96,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 96,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 96,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 99,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "expected an indented block after 'try' statement on line 98 (<unknown>, line 99)",
        "message-id": "E0001"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 105,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "expected 'except' or 'finally' block (<unknown>, line 105)",
        "message-id": "E0001"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 106,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "expected 'except' or 'finally' block (<unknown>, line 106)",
        "message-id": "E0001"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 105,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "expected 'except' or 'finally' block (<unknown>, line 105)",
        "message-id": "E0001"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 106,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "expected 'except' or 'finally' block (<unknown>, line 106)",
        "message-id": "E0001"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 105,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "expected 'except' or 'finally' block (<unknown>, line 105)",
        "message-id": "E0001"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 105,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "expected 'except' or 'finally' block (<unknown>, line 105)",
        "message-id": "E0001"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 106,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "expected 'except' or 'finally' block (<unknown>, line 106)",
        "message-id": "E0001"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 105,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "expected 'except' or 'finally' block (<unknown>, line 105)",
        "message-id": "E0001"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 105,
        "column": 8,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "expected ':' (<unknown>, line 105)",
        "message-id": "E0001"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 105,
        "column": 17,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "expected ':' (<unknown>, line 105)",
        "message-id": "E0001"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 106,
        "column": 22,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "expected ':' (<unknown>, line 106)",
        "message-id": "E0001"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 108,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "expected an indented block after 'except' statement on line 106 (<unknown>, line 108)",
        "message-id": "E0001"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 107,
        "column": 4,
        "endLine": 107,
        "endColumn": 7,
        "path": "app/etl/ps_etl.py",
        "symbol": "pointless-statement",
        "message": "Statement seems to have no effect",
        "message-id": "W0104"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 107,
        "column": 4,
        "endLine": 107,
        "endColumn": 7,
        "path": "app/etl/ps_etl.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'pri'",
        "message-id": "E0602"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 107,
        "column": 4,
        "endLine": 107,
        "endColumn": 9,
        "path": "app/etl/ps_etl.py",
        "symbol": "pointless-statement",
        "message": "Statement seems to have no effect",
        "message-id": "W0104"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 108,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 108,
        "column": 4,
        "endLine": 108,
        "endColumn": 16,
        "path": "app/etl/ps_etl.py",
        "symbol": "pointless-statement",
        "message": "Statement seems to have no effect",
        "message-id": "W0104"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 108,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 108,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 108,
        "column": 18,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "unterminated string literal (detected at line 108) (<unknown>, line 108)",
        "message-id": "E0001"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 122,
        "column": 4,
        "endLine": 122,
        "endColumn": 10,
        "path": "app/etl/ps_etl.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'cursor'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 145,
        "column": 8,
        "endLine": 145,
        "endColumn": 14,
        "path": "app/etl/ps_etl.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'cursor'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 154,
        "column": 8,
        "endLine": 154,
        "endColumn": 14,
        "path": "app/etl/ps_etl.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'cursor'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 164,
        "column": 8,
        "endLine": 164,
        "endColumn": 14,
        "path": "app/etl/ps_etl.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'cursor'",
        "message-id": "E0602"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 191,
        "column": 8,
        "endLine": 191,
        "endColumn": 14,
        "path": "app/etl/ps_etl.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'cursor'",
        "message-id": "E0602"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 108,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "expected 'except' or 'finally' block (<unknown>, line 108)",
        "message-id": "E0001"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 106,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 106,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/helpers/helpers.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.helpers.helpers",
        "obj": "",
        "line": 4,
        "column": 0,
        "endLine": 4,
        "endColumn": 50,
        "path": "app/helpers/helpers.py",
        "symbol": "no-name-in-module",
        "message": "No name 'Inter' in module 'botocore.exceptions'",
        "message-id": "E0611"
    },
    {
        "type": "error",
        "module": "app.helpers.helpers",
        "obj": "",
        "line": 5,
        "column": 0,
        "endLine": 5,
        "endColumn": 53,
        "path": "app/helpers/helpers.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    },
    {
        "type": "warning",
        "module": "app.helpers.helpers",
        "obj": "",
        "line": 4,
        "column": 0,
        "endLine": 4,
        "endColumn": 50,
        "path": "app/helpers/helpers.py",
        "symbol": "unused-import",
        "message": "Unused Inter imported from botocore.exceptions",
        "message-id": "W0611"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/helpers/helpers.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.helpers.helpers",
        "obj": "",
        "line": 5,
        "column": 0,
        "endLine": 5,
        "endColumn": 53,
        "path": "app/helpers/helpers.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########


[ERROR 2022-6-18 9:50:49.255]: Linter 'pylint' failed to parse the output '. SyntaxError: Unexpected end of JSON input
    at JSON.parse (<anonymous>)
    at s.parseMessages (/home/bot/.vscode/extensions/ms-python.python-2022.10.1/out/client/extension.js:2:508570)
    at s.run (/home/bot/.vscode/extensions/ms-python.python-2022.10.1/out/client/extension.js:2:489825)
    at processTicksAndRejections (node:internal/process/task_queues:96:5)
    at s.runLinter (/home/bot/.vscode/extensions/ms-python.python-2022.10.1/out/client/extension.js:2:508085)
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 112,
        "column": 51,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "unterminated string literal (detected at line 112) (<unknown>, line 112)",
        "message-id": "E0001"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 112,
        "column": 45,
        "endLine": 112,
        "endColumn": 49,
        "path": "app/etl/ps_etl.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'brit'",
        "message-id": "E0602"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 112,
        "column": 45,
        "endLine": 112,
        "endColumn": 47,
        "path": "app/etl/ps_etl.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'br'",
        "message-id": "E0602"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 112,
        "column": 45,
        "endLine": 112,
        "endColumn": 46,
        "path": "app/etl/ps_etl.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'b'",
        "message-id": "E0602"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 112,
        "column": 45,
        "endLine": 112,
        "endColumn": 46,
        "path": "app/etl/ps_etl.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'b'",
        "message-id": "E0602"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 111,
        "column": 8,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "expected ':' (<unknown>, line 111)",
        "message-id": "E0001"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 111,
        "column": 47,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "expected ':' (<unknown>, line 111)",
        "message-id": "E0001"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 35,
        "path": "app/etl/ps_etl.py",
        "symbol": "unused-import",
        "message": "Unused InterfaceError imported from psycopg2",
        "message-id": "W0611"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 35,
        "path": "app/etl/ps_etl.py",
        "symbol": "unused-import",
        "message": "Unused InterfaceError imported from psycopg2",
        "message-id": "W0611"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ~/.vscode/extensions/ms-python.vscode-pylance-2022.7.30/dist/typeshed-fallback/stubs/psycopg2/psycopg2/_psycopg.pyi
cwd: ~/.vscode/extensions/ms-python.vscode-pylance-2022.7.30/dist/typeshed-fallback/stubs/psycopg2/psycopg2
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "",
        "line": 110,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "",
        "line": 175,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "line-too-long",
        "message": "Line too long (130/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "",
        "line": 177,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "line-too-long",
        "message": "Line too long (143/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "",
        "line": 418,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "line-too-long",
        "message": "Line too long (124/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "",
        "line": 430,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "line-too-long",
        "message": "Line too long (130/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Warning",
        "line": 346,
        "column": 0,
        "endLine": 346,
        "endColumn": 13,
        "path": "_psycopg.pyi",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'Warning'",
        "message-id": "W0622"
    },
    {
        "type": "error",
        "module": "_psycopg",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": 1,
        "endColumn": 26,
        "path": "_psycopg.pyi",
        "symbol": "import-error",
        "message": "Unable to import '_typeshed'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor",
        "line": 71,
        "column": 0,
        "endLine": 71,
        "endColumn": 12,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor",
        "line": 71,
        "column": 0,
        "endLine": 71,
        "endColumn": 12,
        "path": "_psycopg.pyi",
        "symbol": "invalid-name",
        "message": "Class name \"cursor\" doesn't conform to PascalCase naming style ('[^\\\\W\\\\da-z][^\\\\W_]+$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "_psycopg",
        "obj": "cursor.__init__",
        "line": 91,
        "column": 29,
        "endLine": 91,
        "endColumn": 39,
        "path": "_psycopg.pyi",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'connection'",
        "message-id": "E0602"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.__init__",
        "line": 91,
        "column": 82,
        "endLine": 91,
        "endColumn": 85,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.__init__",
        "line": 91,
        "column": 23,
        "endLine": 91,
        "endColumn": 39,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'conn'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.__init__",
        "line": 91,
        "column": 41,
        "endLine": 91,
        "endColumn": 65,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'name'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.callproc",
        "line": 92,
        "column": 4,
        "endLine": 92,
        "endColumn": 16,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.callproc",
        "line": 92,
        "column": 50,
        "endLine": 92,
        "endColumn": 53,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.callproc",
        "line": 92,
        "column": 23,
        "endLine": 92,
        "endColumn": 31,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'procname'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.callproc",
        "line": 92,
        "column": 33,
        "endLine": 92,
        "endColumn": 43,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'parameters'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.cast",
        "line": 93,
        "column": 4,
        "endLine": 93,
        "endColumn": 12,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.cast",
        "line": 93,
        "column": 24,
        "endLine": 93,
        "endColumn": 25,
        "path": "_psycopg.pyi",
        "symbol": "invalid-name",
        "message": "Argument name \"s\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.cast",
        "line": 93,
        "column": 28,
        "endLine": 93,
        "endColumn": 31,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.cast",
        "line": 93,
        "column": 19,
        "endLine": 93,
        "endColumn": 22,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'oid'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.cast",
        "line": 93,
        "column": 24,
        "endLine": 93,
        "endColumn": 25,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 's'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.close",
        "line": 94,
        "column": 4,
        "endLine": 94,
        "endColumn": 13,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.close",
        "line": 94,
        "column": 21,
        "endLine": 94,
        "endColumn": 24,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.copy_expert",
        "line": 95,
        "column": 4,
        "endLine": 95,
        "endColumn": 19,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.copy_expert",
        "line": 95,
        "column": 74,
        "endLine": 95,
        "endColumn": 77,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.copy_expert",
        "line": 95,
        "column": 26,
        "endLine": 95,
        "endColumn": 55,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'sql'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.copy_expert",
        "line": 95,
        "column": 57,
        "endLine": 95,
        "endColumn": 61,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'file'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.copy_expert",
        "line": 95,
        "column": 63,
        "endLine": 95,
        "endColumn": 67,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'size'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.copy_from",
        "line": 96,
        "column": 4,
        "endLine": 96,
        "endColumn": 17,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "_psycopg",
        "obj": "cursor.copy_from",
        "line": 96,
        "column": 4,
        "endLine": 96,
        "endColumn": 17,
        "path": "_psycopg.pyi",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.copy_from",
        "line": 96,
        "column": 80,
        "endLine": 96,
        "endColumn": 83,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.copy_from",
        "line": 96,
        "column": 24,
        "endLine": 96,
        "endColumn": 28,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'file'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.copy_from",
        "line": 96,
        "column": 30,
        "endLine": 96,
        "endColumn": 35,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'table'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.copy_from",
        "line": 96,
        "column": 37,
        "endLine": 96,
        "endColumn": 40,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'sep'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.copy_from",
        "line": 96,
        "column": 46,
        "endLine": 96,
        "endColumn": 50,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'null'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.copy_from",
        "line": 96,
        "column": 56,
        "endLine": 96,
        "endColumn": 60,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'size'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.copy_from",
        "line": 96,
        "column": 66,
        "endLine": 96,
        "endColumn": 73,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'columns'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.copy_to",
        "line": 97,
        "column": 4,
        "endLine": 97,
        "endColumn": 15,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "_psycopg",
        "obj": "cursor.copy_to",
        "line": 97,
        "column": 4,
        "endLine": 97,
        "endColumn": 15,
        "path": "_psycopg.pyi",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.copy_to",
        "line": 97,
        "column": 68,
        "endLine": 97,
        "endColumn": 71,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.copy_to",
        "line": 97,
        "column": 22,
        "endLine": 97,
        "endColumn": 26,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'file'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.copy_to",
        "line": 97,
        "column": 28,
        "endLine": 97,
        "endColumn": 33,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'table'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.copy_to",
        "line": 97,
        "column": 35,
        "endLine": 97,
        "endColumn": 38,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'sep'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.copy_to",
        "line": 97,
        "column": 44,
        "endLine": 97,
        "endColumn": 48,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'null'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.copy_to",
        "line": 97,
        "column": 54,
        "endLine": 97,
        "endColumn": 61,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'columns'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.execute",
        "line": 98,
        "column": 4,
        "endLine": 98,
        "endColumn": 15,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.execute",
        "line": 98,
        "column": 55,
        "endLine": 98,
        "endColumn": 66,
        "path": "_psycopg.pyi",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'vars'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.execute",
        "line": 98,
        "column": 83,
        "endLine": 98,
        "endColumn": 86,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.execute",
        "line": 98,
        "column": 22,
        "endLine": 98,
        "endColumn": 53,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'query'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.execute",
        "line": 98,
        "column": 55,
        "endLine": 98,
        "endColumn": 66,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'vars'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.executemany",
        "line": 99,
        "column": 4,
        "endLine": 99,
        "endColumn": 19,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.executemany",
        "line": 99,
        "column": 96,
        "endLine": 99,
        "endColumn": 99,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.executemany",
        "line": 99,
        "column": 26,
        "endLine": 99,
        "endColumn": 57,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'query'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.executemany",
        "line": 99,
        "column": 59,
        "endLine": 99,
        "endColumn": 85,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'vars_list'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.fetchall",
        "line": 100,
        "column": 4,
        "endLine": 100,
        "endColumn": 16,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.fetchall",
        "line": 100,
        "column": 49,
        "endLine": 100,
        "endColumn": 52,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.fetchmany",
        "line": 101,
        "column": 4,
        "endLine": 101,
        "endColumn": 17,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.fetchmany",
        "line": 101,
        "column": 60,
        "endLine": 101,
        "endColumn": 63,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.fetchmany",
        "line": 101,
        "column": 24,
        "endLine": 101,
        "endColumn": 28,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'size'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.fetchone",
        "line": 102,
        "column": 4,
        "endLine": 102,
        "endColumn": 16,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.fetchone",
        "line": 102,
        "column": 50,
        "endLine": 102,
        "endColumn": 53,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.mogrify",
        "line": 103,
        "column": 4,
        "endLine": 103,
        "endColumn": 15,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.mogrify",
        "line": 103,
        "column": 40,
        "endLine": 103,
        "endColumn": 43,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.mogrify",
        "line": 103,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.mogrify",
        "line": 103,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.nextset",
        "line": 104,
        "column": 4,
        "endLine": 104,
        "endColumn": 15,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.nextset",
        "line": 104,
        "column": 23,
        "endLine": 104,
        "endColumn": 26,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.scroll",
        "line": 105,
        "column": 4,
        "endLine": 105,
        "endColumn": 14,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.scroll",
        "line": 105,
        "column": 39,
        "endLine": 105,
        "endColumn": 42,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.scroll",
        "line": 105,
        "column": 21,
        "endLine": 105,
        "endColumn": 26,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'value'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.scroll",
        "line": 105,
        "column": 28,
        "endLine": 105,
        "endColumn": 32,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'mode'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.setinputsizes",
        "line": 106,
        "column": 4,
        "endLine": 106,
        "endColumn": 21,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.setinputsizes",
        "line": 106,
        "column": 36,
        "endLine": 106,
        "endColumn": 39,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.setinputsizes",
        "line": 106,
        "column": 28,
        "endLine": 106,
        "endColumn": 33,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'sizes'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.setoutputsize",
        "line": 107,
        "column": 4,
        "endLine": 107,
        "endColumn": 21,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.setoutputsize",
        "line": 107,
        "column": 47,
        "endLine": 107,
        "endColumn": 50,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.setoutputsize",
        "line": 107,
        "column": 28,
        "endLine": 107,
        "endColumn": 32,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'size'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.setoutputsize",
        "line": 107,
        "column": 34,
        "endLine": 107,
        "endColumn": 40,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'column'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.__enter__",
        "line": 108,
        "column": 39,
        "endLine": 108,
        "endColumn": 42,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "cursor.__exit__",
        "line": 110,
        "column": 14,
        "endLine": 110,
        "endColumn": 46,
        "path": "_psycopg.pyi",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.__iter__",
        "line": 112,
        "column": 38,
        "endLine": 112,
        "endColumn": 41,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "cursor.__next__",
        "line": 113,
        "column": 43,
        "endLine": 113,
        "endColumn": 46,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "AsIs",
        "line": 117,
        "column": 0,
        "endLine": 117,
        "endColumn": 10,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "AsIs.__init__",
        "line": 119,
        "column": 49,
        "endLine": 119,
        "endColumn": 52,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "AsIs.__init__",
        "line": 119,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "AsIs.__init__",
        "line": 119,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "AsIs.getquoted",
        "line": 120,
        "column": 4,
        "endLine": 120,
        "endColumn": 17,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "AsIs.getquoted",
        "line": 120,
        "column": 42,
        "endLine": 120,
        "endColumn": 45,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "AsIs.getquoted",
        "line": 120,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "AsIs.getquoted",
        "line": 120,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "AsIs.__conform__",
        "line": 121,
        "column": 44,
        "endLine": 121,
        "endColumn": 47,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "AsIs.__conform__",
        "line": 121,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "AsIs.__conform__",
        "line": 121,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Binary",
        "line": 123,
        "column": 0,
        "endLine": 123,
        "endColumn": 12,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Binary.__init__",
        "line": 126,
        "column": 49,
        "endLine": 126,
        "endColumn": 52,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Binary.__init__",
        "line": 126,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Binary.__init__",
        "line": 126,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Binary.getquoted",
        "line": 127,
        "column": 4,
        "endLine": 127,
        "endColumn": 17,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Binary.getquoted",
        "line": 127,
        "column": 42,
        "endLine": 127,
        "endColumn": 45,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Binary.getquoted",
        "line": 127,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Binary.getquoted",
        "line": 127,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Binary.prepare",
        "line": 128,
        "column": 4,
        "endLine": 128,
        "endColumn": 15,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Binary.prepare",
        "line": 128,
        "column": 29,
        "endLine": 128,
        "endColumn": 32,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Binary.prepare",
        "line": 128,
        "column": 22,
        "endLine": 128,
        "endColumn": 26,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'conn'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Binary.__conform__",
        "line": 129,
        "column": 44,
        "endLine": 129,
        "endColumn": 47,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Binary.__conform__",
        "line": 129,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Binary.__conform__",
        "line": 129,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Boolean",
        "line": 131,
        "column": 0,
        "endLine": 131,
        "endColumn": 13,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Boolean.__init__",
        "line": 133,
        "column": 49,
        "endLine": 133,
        "endColumn": 52,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Boolean.__init__",
        "line": 133,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Boolean.__init__",
        "line": 133,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Boolean.getquoted",
        "line": 134,
        "column": 4,
        "endLine": 134,
        "endColumn": 17,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Boolean.getquoted",
        "line": 134,
        "column": 42,
        "endLine": 134,
        "endColumn": 45,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Boolean.getquoted",
        "line": 134,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Boolean.getquoted",
        "line": 134,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Boolean.__conform__",
        "line": 135,
        "column": 44,
        "endLine": 135,
        "endColumn": 47,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Boolean.__conform__",
        "line": 135,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Boolean.__conform__",
        "line": 135,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Column",
        "line": 137,
        "column": 0,
        "endLine": 137,
        "endColumn": 12,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Column.__init__",
        "line": 147,
        "column": 49,
        "endLine": 147,
        "endColumn": 52,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Column.__init__",
        "line": 147,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Column.__init__",
        "line": 147,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Column.__eq__",
        "line": 148,
        "column": 31,
        "endLine": 148,
        "endColumn": 34,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Column.__ge__",
        "line": 149,
        "column": 31,
        "endLine": 149,
        "endColumn": 34,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Column.__getitem__",
        "line": 150,
        "column": 36,
        "endLine": 150,
        "endColumn": 39,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Column.__getstate__",
        "line": 151,
        "column": 28,
        "endLine": 151,
        "endColumn": 31,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Column.__gt__",
        "line": 152,
        "column": 31,
        "endLine": 152,
        "endColumn": 34,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Column.__le__",
        "line": 153,
        "column": 31,
        "endLine": 153,
        "endColumn": 34,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Column.__len__",
        "line": 154,
        "column": 23,
        "endLine": 154,
        "endColumn": 26,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Column.__lt__",
        "line": 155,
        "column": 31,
        "endLine": 155,
        "endColumn": 34,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Column.__ne__",
        "line": 156,
        "column": 31,
        "endLine": 156,
        "endColumn": 34,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Column.__setstate__",
        "line": 157,
        "column": 35,
        "endLine": 157,
        "endColumn": 38,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo",
        "line": 159,
        "column": 0,
        "endLine": 159,
        "endColumn": 20,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.backend_pid",
        "line": 179,
        "column": 4,
        "endLine": 179,
        "endColumn": 19,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.backend_pid",
        "line": 179,
        "column": 34,
        "endLine": 179,
        "endColumn": 37,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.dbname",
        "line": 181,
        "column": 4,
        "endLine": 181,
        "endColumn": 14,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.dbname",
        "line": 181,
        "column": 29,
        "endLine": 181,
        "endColumn": 32,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.dsn_parameters",
        "line": 183,
        "column": 4,
        "endLine": 183,
        "endColumn": 22,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.dsn_parameters",
        "line": 183,
        "column": 48,
        "endLine": 183,
        "endColumn": 51,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.error_message",
        "line": 185,
        "column": 4,
        "endLine": 185,
        "endColumn": 21,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.error_message",
        "line": 185,
        "column": 43,
        "endLine": 185,
        "endColumn": 46,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.host",
        "line": 187,
        "column": 4,
        "endLine": 187,
        "endColumn": 12,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.host",
        "line": 187,
        "column": 27,
        "endLine": 187,
        "endColumn": 30,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.needs_password",
        "line": 189,
        "column": 4,
        "endLine": 189,
        "endColumn": 22,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.needs_password",
        "line": 189,
        "column": 38,
        "endLine": 189,
        "endColumn": 41,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.options",
        "line": 191,
        "column": 4,
        "endLine": 191,
        "endColumn": 15,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.options",
        "line": 191,
        "column": 30,
        "endLine": 191,
        "endColumn": 33,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.password",
        "line": 193,
        "column": 4,
        "endLine": 193,
        "endColumn": 16,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.password",
        "line": 193,
        "column": 31,
        "endLine": 193,
        "endColumn": 34,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.port",
        "line": 195,
        "column": 4,
        "endLine": 195,
        "endColumn": 12,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.port",
        "line": 195,
        "column": 27,
        "endLine": 195,
        "endColumn": 30,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.protocol_version",
        "line": 197,
        "column": 4,
        "endLine": 197,
        "endColumn": 24,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.protocol_version",
        "line": 197,
        "column": 39,
        "endLine": 197,
        "endColumn": 42,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.server_version",
        "line": 199,
        "column": 4,
        "endLine": 199,
        "endColumn": 22,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.server_version",
        "line": 199,
        "column": 37,
        "endLine": 199,
        "endColumn": 40,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.socket",
        "line": 201,
        "column": 4,
        "endLine": 201,
        "endColumn": 14,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.socket",
        "line": 201,
        "column": 29,
        "endLine": 201,
        "endColumn": 32,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.ssl_attribute_names",
        "line": 203,
        "column": 4,
        "endLine": 203,
        "endColumn": 27,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.ssl_attribute_names",
        "line": 203,
        "column": 48,
        "endLine": 203,
        "endColumn": 51,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.ssl_in_use",
        "line": 205,
        "column": 4,
        "endLine": 205,
        "endColumn": 18,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.ssl_in_use",
        "line": 205,
        "column": 34,
        "endLine": 205,
        "endColumn": 37,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.status",
        "line": 207,
        "column": 4,
        "endLine": 207,
        "endColumn": 14,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.status",
        "line": 207,
        "column": 29,
        "endLine": 207,
        "endColumn": 32,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.transaction_status",
        "line": 209,
        "column": 4,
        "endLine": 209,
        "endColumn": 26,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.transaction_status",
        "line": 209,
        "column": 41,
        "endLine": 209,
        "endColumn": 44,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.used_password",
        "line": 211,
        "column": 4,
        "endLine": 211,
        "endColumn": 21,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.used_password",
        "line": 211,
        "column": 37,
        "endLine": 211,
        "endColumn": 40,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.user",
        "line": 213,
        "column": 4,
        "endLine": 213,
        "endColumn": 12,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.user",
        "line": 213,
        "column": 27,
        "endLine": 213,
        "endColumn": 30,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.__init__",
        "line": 214,
        "column": 49,
        "endLine": 214,
        "endColumn": 52,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ConnectionInfo.__init__",
        "line": 214,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ConnectionInfo.__init__",
        "line": 214,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.parameter_status",
        "line": 215,
        "column": 4,
        "endLine": 215,
        "endColumn": 24,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.parameter_status",
        "line": 215,
        "column": 57,
        "endLine": 215,
        "endColumn": 60,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ConnectionInfo.parameter_status",
        "line": 215,
        "column": 31,
        "endLine": 215,
        "endColumn": 40,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'name'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.ssl_attribute",
        "line": 216,
        "column": 4,
        "endLine": 216,
        "endColumn": 21,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ConnectionInfo.ssl_attribute",
        "line": 216,
        "column": 54,
        "endLine": 216,
        "endColumn": 57,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ConnectionInfo.ssl_attribute",
        "line": 216,
        "column": 28,
        "endLine": 216,
        "endColumn": 37,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'name'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "DataError",
        "line": 218,
        "column": 0,
        "endLine": 218,
        "endColumn": 15,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "DataError",
        "line": 218,
        "column": 41,
        "endLine": 218,
        "endColumn": 44,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "refactor",
        "module": "_psycopg",
        "obj": "DataError",
        "line": 218,
        "column": 0,
        "endLine": 218,
        "endColumn": 15,
        "path": "_psycopg.pyi",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "DatabaseError",
        "line": 219,
        "column": 0,
        "endLine": 219,
        "endColumn": 19,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "DatabaseError",
        "line": 219,
        "column": 37,
        "endLine": 219,
        "endColumn": 40,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "refactor",
        "module": "_psycopg",
        "obj": "DatabaseError",
        "line": 219,
        "column": 0,
        "endLine": 219,
        "endColumn": 19,
        "path": "_psycopg.pyi",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Decimal",
        "line": 221,
        "column": 0,
        "endLine": 221,
        "endColumn": 13,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Decimal.__init__",
        "line": 223,
        "column": 49,
        "endLine": 223,
        "endColumn": 52,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Decimal.__init__",
        "line": 223,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Decimal.__init__",
        "line": 223,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Decimal.getquoted",
        "line": 224,
        "column": 4,
        "endLine": 224,
        "endColumn": 17,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Decimal.getquoted",
        "line": 224,
        "column": 42,
        "endLine": 224,
        "endColumn": 45,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Decimal.getquoted",
        "line": 224,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Decimal.getquoted",
        "line": 224,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Decimal.__conform__",
        "line": 225,
        "column": 44,
        "endLine": 225,
        "endColumn": 47,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Decimal.__conform__",
        "line": 225,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Decimal.__conform__",
        "line": 225,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Diagnostics",
        "line": 227,
        "column": 0,
        "endLine": 227,
        "endColumn": 17,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "error",
        "module": "_psycopg",
        "obj": "Diagnostics.__init__",
        "line": 246,
        "column": 30,
        "endLine": 246,
        "endColumn": 35,
        "path": "_psycopg.pyi",
        "symbol": "used-before-assignment",
        "message": "Using variable 'Error' before assignment",
        "message-id": "E0601"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Diagnostics.__init__",
        "line": 246,
        "column": 46,
        "endLine": 246,
        "endColumn": 49,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "refactor",
        "module": "_psycopg",
        "obj": "Diagnostics",
        "line": 227,
        "column": 0,
        "endLine": 227,
        "endColumn": 17,
        "path": "_psycopg.pyi",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Error",
        "line": 248,
        "column": 0,
        "endLine": 248,
        "endColumn": 11,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Error.__init__",
        "line": 253,
        "column": 4,
        "endLine": 253,
        "endColumn": 16,
        "path": "_psycopg.pyi",
        "symbol": "super-init-not-called",
        "message": "__init__ method from base class 'Exception' is not called",
        "message-id": "W0231"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Error.__init__",
        "line": 253,
        "column": 49,
        "endLine": 253,
        "endColumn": 52,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Error.__init__",
        "line": 253,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Error.__init__",
        "line": 253,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Error.__reduce__",
        "line": 254,
        "column": 26,
        "endLine": 254,
        "endColumn": 29,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Error.__setstate__",
        "line": 255,
        "column": 35,
        "endLine": 255,
        "endColumn": 38,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Float",
        "line": 257,
        "column": 0,
        "endLine": 257,
        "endColumn": 11,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Float.__init__",
        "line": 259,
        "column": 49,
        "endLine": 259,
        "endColumn": 52,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Float.__init__",
        "line": 259,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Float.__init__",
        "line": 259,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Float.getquoted",
        "line": 260,
        "column": 4,
        "endLine": 260,
        "endColumn": 17,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Float.getquoted",
        "line": 260,
        "column": 42,
        "endLine": 260,
        "endColumn": 45,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Float.getquoted",
        "line": 260,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Float.getquoted",
        "line": 260,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Float.__conform__",
        "line": 261,
        "column": 44,
        "endLine": 261,
        "endColumn": 47,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Float.__conform__",
        "line": 261,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Float.__conform__",
        "line": 261,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ISQLQuote",
        "line": 263,
        "column": 0,
        "endLine": 263,
        "endColumn": 15,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ISQLQuote.__init__",
        "line": 265,
        "column": 49,
        "endLine": 265,
        "endColumn": 52,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ISQLQuote.__init__",
        "line": 265,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ISQLQuote.__init__",
        "line": 265,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ISQLQuote.getbinary",
        "line": 266,
        "column": 4,
        "endLine": 266,
        "endColumn": 17,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ISQLQuote.getbinary",
        "line": 266,
        "column": 42,
        "endLine": 266,
        "endColumn": 45,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ISQLQuote.getbinary",
        "line": 266,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ISQLQuote.getbinary",
        "line": 266,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ISQLQuote.getbuffer",
        "line": 267,
        "column": 4,
        "endLine": 267,
        "endColumn": 17,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ISQLQuote.getbuffer",
        "line": 267,
        "column": 42,
        "endLine": 267,
        "endColumn": 45,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ISQLQuote.getbuffer",
        "line": 267,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ISQLQuote.getbuffer",
        "line": 267,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ISQLQuote.getquoted",
        "line": 268,
        "column": 4,
        "endLine": 268,
        "endColumn": 17,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ISQLQuote.getquoted",
        "line": 268,
        "column": 42,
        "endLine": 268,
        "endColumn": 45,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ISQLQuote.getquoted",
        "line": 268,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ISQLQuote.getquoted",
        "line": 268,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Int",
        "line": 270,
        "column": 0,
        "endLine": 270,
        "endColumn": 9,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Int.__init__",
        "line": 272,
        "column": 49,
        "endLine": 272,
        "endColumn": 52,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Int.__init__",
        "line": 272,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Int.__init__",
        "line": 272,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Int.getquoted",
        "line": 273,
        "column": 4,
        "endLine": 273,
        "endColumn": 17,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Int.getquoted",
        "line": 273,
        "column": 42,
        "endLine": 273,
        "endColumn": 45,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Int.getquoted",
        "line": 273,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Int.getquoted",
        "line": 273,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Int.__conform__",
        "line": 274,
        "column": 44,
        "endLine": 274,
        "endColumn": 47,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Int.__conform__",
        "line": 274,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Int.__conform__",
        "line": 274,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "IntegrityError",
        "line": 276,
        "column": 0,
        "endLine": 276,
        "endColumn": 20,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "IntegrityError",
        "line": 276,
        "column": 46,
        "endLine": 276,
        "endColumn": 49,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "refactor",
        "module": "_psycopg",
        "obj": "IntegrityError",
        "line": 276,
        "column": 0,
        "endLine": 276,
        "endColumn": 20,
        "path": "_psycopg.pyi",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "InterfaceError",
        "line": 277,
        "column": 0,
        "endLine": 277,
        "endColumn": 20,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "InterfaceError",
        "line": 277,
        "column": 38,
        "endLine": 277,
        "endColumn": 41,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "refactor",
        "module": "_psycopg",
        "obj": "InterfaceError",
        "line": 277,
        "column": 0,
        "endLine": 277,
        "endColumn": 20,
        "path": "_psycopg.pyi",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "InternalError",
        "line": 278,
        "column": 0,
        "endLine": 278,
        "endColumn": 19,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "InternalError",
        "line": 278,
        "column": 45,
        "endLine": 278,
        "endColumn": 48,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "refactor",
        "module": "_psycopg",
        "obj": "InternalError",
        "line": 278,
        "column": 0,
        "endLine": 278,
        "endColumn": 19,
        "path": "_psycopg.pyi",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "List",
        "line": 280,
        "column": 0,
        "endLine": 280,
        "endColumn": 10,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "List.__init__",
        "line": 282,
        "column": 49,
        "endLine": 282,
        "endColumn": 52,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "List.__init__",
        "line": 282,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "List.__init__",
        "line": 282,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "List.getquoted",
        "line": 283,
        "column": 4,
        "endLine": 283,
        "endColumn": 17,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "List.getquoted",
        "line": 283,
        "column": 42,
        "endLine": 283,
        "endColumn": 45,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "List.getquoted",
        "line": 283,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "List.getquoted",
        "line": 283,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "List.prepare",
        "line": 284,
        "column": 4,
        "endLine": 284,
        "endColumn": 15,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "List.prepare",
        "line": 284,
        "column": 40,
        "endLine": 284,
        "endColumn": 43,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "List.prepare",
        "line": 284,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "List.prepare",
        "line": 284,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "List.__conform__",
        "line": 285,
        "column": 44,
        "endLine": 285,
        "endColumn": 47,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "List.__conform__",
        "line": 285,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "List.__conform__",
        "line": 285,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "NotSupportedError",
        "line": 287,
        "column": 0,
        "endLine": 287,
        "endColumn": 23,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "NotSupportedError",
        "line": 287,
        "column": 49,
        "endLine": 287,
        "endColumn": 52,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "refactor",
        "module": "_psycopg",
        "obj": "NotSupportedError",
        "line": 287,
        "column": 0,
        "endLine": 287,
        "endColumn": 23,
        "path": "_psycopg.pyi",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Notify",
        "line": 289,
        "column": 0,
        "endLine": 289,
        "endColumn": 12,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Notify.__init__",
        "line": 293,
        "column": 49,
        "endLine": 293,
        "endColumn": 52,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Notify.__init__",
        "line": 293,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Notify.__init__",
        "line": 293,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Notify.__eq__",
        "line": 294,
        "column": 31,
        "endLine": 294,
        "endColumn": 34,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Notify.__ge__",
        "line": 295,
        "column": 31,
        "endLine": 295,
        "endColumn": 34,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Notify.__getitem__",
        "line": 296,
        "column": 36,
        "endLine": 296,
        "endColumn": 39,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Notify.__gt__",
        "line": 297,
        "column": 31,
        "endLine": 297,
        "endColumn": 34,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Notify.__hash__",
        "line": 298,
        "column": 24,
        "endLine": 298,
        "endColumn": 27,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Notify.__le__",
        "line": 299,
        "column": 31,
        "endLine": 299,
        "endColumn": 34,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Notify.__len__",
        "line": 300,
        "column": 23,
        "endLine": 300,
        "endColumn": 26,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Notify.__lt__",
        "line": 301,
        "column": 31,
        "endLine": 301,
        "endColumn": 34,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Notify.__ne__",
        "line": 302,
        "column": 31,
        "endLine": 302,
        "endColumn": 34,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "OperationalError",
        "line": 304,
        "column": 0,
        "endLine": 304,
        "endColumn": 22,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "OperationalError",
        "line": 304,
        "column": 48,
        "endLine": 304,
        "endColumn": 51,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "refactor",
        "module": "_psycopg",
        "obj": "OperationalError",
        "line": 304,
        "column": 0,
        "endLine": 304,
        "endColumn": 22,
        "path": "_psycopg.pyi",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ProgrammingError",
        "line": 305,
        "column": 0,
        "endLine": 305,
        "endColumn": 22,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ProgrammingError",
        "line": 305,
        "column": 48,
        "endLine": 305,
        "endColumn": 51,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "refactor",
        "module": "_psycopg",
        "obj": "ProgrammingError",
        "line": 305,
        "column": 0,
        "endLine": 305,
        "endColumn": 22,
        "path": "_psycopg.pyi",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "QueryCanceledError",
        "line": 306,
        "column": 0,
        "endLine": 306,
        "endColumn": 24,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "QueryCanceledError",
        "line": 306,
        "column": 53,
        "endLine": 306,
        "endColumn": 56,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "refactor",
        "module": "_psycopg",
        "obj": "QueryCanceledError",
        "line": 306,
        "column": 0,
        "endLine": 306,
        "endColumn": 24,
        "path": "_psycopg.pyi",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "QuotedString",
        "line": 308,
        "column": 0,
        "endLine": 308,
        "endColumn": 18,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "QuotedString.__init__",
        "line": 312,
        "column": 49,
        "endLine": 312,
        "endColumn": 52,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "QuotedString.__init__",
        "line": 312,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "QuotedString.__init__",
        "line": 312,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "QuotedString.getquoted",
        "line": 313,
        "column": 4,
        "endLine": 313,
        "endColumn": 17,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "QuotedString.getquoted",
        "line": 313,
        "column": 42,
        "endLine": 313,
        "endColumn": 45,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "QuotedString.getquoted",
        "line": 313,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "QuotedString.getquoted",
        "line": 313,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "QuotedString.prepare",
        "line": 314,
        "column": 4,
        "endLine": 314,
        "endColumn": 15,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "QuotedString.prepare",
        "line": 314,
        "column": 40,
        "endLine": 314,
        "endColumn": 43,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "QuotedString.prepare",
        "line": 314,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "QuotedString.prepare",
        "line": 314,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "QuotedString.__conform__",
        "line": 315,
        "column": 44,
        "endLine": 315,
        "endColumn": 47,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "QuotedString.__conform__",
        "line": 315,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "QuotedString.__conform__",
        "line": 315,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ReplicationConnection",
        "line": 317,
        "column": 0,
        "endLine": 317,
        "endColumn": 27,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ReplicationConnection.__init__",
        "line": 324,
        "column": 49,
        "endLine": 324,
        "endColumn": 52,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ReplicationConnection.__init__",
        "line": 324,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ReplicationConnection.__init__",
        "line": 324,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "refactor",
        "module": "_psycopg",
        "obj": "ReplicationConnection",
        "line": 317,
        "column": 0,
        "endLine": 317,
        "endColumn": 27,
        "path": "_psycopg.pyi",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ReplicationCursor",
        "line": 326,
        "column": 0,
        "endLine": 326,
        "endColumn": 23,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ReplicationCursor.__init__",
        "line": 330,
        "column": 4,
        "endLine": 330,
        "endColumn": 16,
        "path": "_psycopg.pyi",
        "symbol": "super-init-not-called",
        "message": "__init__ method from base class 'cursor' is not called",
        "message-id": "W0231"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ReplicationCursor.__init__",
        "line": 330,
        "column": 49,
        "endLine": 330,
        "endColumn": 52,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ReplicationCursor.__init__",
        "line": 330,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ReplicationCursor.__init__",
        "line": 330,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ReplicationCursor.consume_stream",
        "line": 331,
        "column": 4,
        "endLine": 331,
        "endColumn": 22,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ReplicationCursor.consume_stream",
        "line": 331,
        "column": 64,
        "endLine": 331,
        "endColumn": 67,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ReplicationCursor.consume_stream",
        "line": 331,
        "column": 29,
        "endLine": 331,
        "endColumn": 37,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'consumer'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ReplicationCursor.consume_stream",
        "line": 331,
        "column": 39,
        "endLine": 331,
        "endColumn": 57,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'keepalive_interval'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ReplicationCursor.read_message",
        "line": 332,
        "column": 4,
        "endLine": 332,
        "endColumn": 20,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ReplicationCursor.read_message",
        "line": 332,
        "column": 45,
        "endLine": 332,
        "endColumn": 48,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ReplicationCursor.read_message",
        "line": 332,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ReplicationCursor.read_message",
        "line": 332,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ReplicationCursor.send_feedback",
        "line": 333,
        "column": 4,
        "endLine": 333,
        "endColumn": 21,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "_psycopg",
        "obj": "ReplicationCursor.send_feedback",
        "line": 333,
        "column": 4,
        "endLine": 333,
        "endColumn": 21,
        "path": "_psycopg.pyi",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ReplicationCursor.send_feedback",
        "line": 333,
        "column": 96,
        "endLine": 333,
        "endColumn": 99,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ReplicationCursor.send_feedback",
        "line": 333,
        "column": 28,
        "endLine": 333,
        "endColumn": 37,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'write_lsn'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ReplicationCursor.send_feedback",
        "line": 333,
        "column": 43,
        "endLine": 333,
        "endColumn": 52,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'flush_lsn'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ReplicationCursor.send_feedback",
        "line": 333,
        "column": 58,
        "endLine": 333,
        "endColumn": 67,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'apply_lsn'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ReplicationCursor.send_feedback",
        "line": 333,
        "column": 73,
        "endLine": 333,
        "endColumn": 78,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'reply'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ReplicationCursor.send_feedback",
        "line": 333,
        "column": 84,
        "endLine": 333,
        "endColumn": 89,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'force'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ReplicationCursor.start_replication_expert",
        "line": 334,
        "column": 4,
        "endLine": 334,
        "endColumn": 32,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ReplicationCursor.start_replication_expert",
        "line": 334,
        "column": 82,
        "endLine": 334,
        "endColumn": 85,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ReplicationCursor.start_replication_expert",
        "line": 334,
        "column": 39,
        "endLine": 334,
        "endColumn": 46,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'command'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ReplicationCursor.start_replication_expert",
        "line": 334,
        "column": 48,
        "endLine": 334,
        "endColumn": 54,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'decode'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ReplicationCursor.start_replication_expert",
        "line": 334,
        "column": 60,
        "endLine": 334,
        "endColumn": 75,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'status_interval'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ReplicationMessage",
        "line": 336,
        "column": 0,
        "endLine": 336,
        "endColumn": 24,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "ReplicationMessage.__init__",
        "line": 343,
        "column": 49,
        "endLine": 343,
        "endColumn": 52,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ReplicationMessage.__init__",
        "line": 343,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "ReplicationMessage.__init__",
        "line": 343,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "refactor",
        "module": "_psycopg",
        "obj": "ReplicationMessage",
        "line": 336,
        "column": 0,
        "endLine": 336,
        "endColumn": 24,
        "path": "_psycopg.pyi",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "TransactionRollbackError",
        "line": 345,
        "column": 0,
        "endLine": 345,
        "endColumn": 30,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "TransactionRollbackError",
        "line": 345,
        "column": 59,
        "endLine": 345,
        "endColumn": 62,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "refactor",
        "module": "_psycopg",
        "obj": "TransactionRollbackError",
        "line": 345,
        "column": 0,
        "endLine": 345,
        "endColumn": 30,
        "path": "_psycopg.pyi",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Warning",
        "line": 346,
        "column": 0,
        "endLine": 346,
        "endColumn": 13,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Warning",
        "line": 346,
        "column": 26,
        "endLine": 346,
        "endColumn": 29,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Xid",
        "line": 348,
        "column": 0,
        "endLine": 348,
        "endColumn": 9,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Xid.__init__",
        "line": 355,
        "column": 49,
        "endLine": 355,
        "endColumn": 52,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Xid.__init__",
        "line": 355,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Xid.__init__",
        "line": 355,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Xid.from_string",
        "line": 356,
        "column": 4,
        "endLine": 356,
        "endColumn": 19,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Xid.from_string",
        "line": 356,
        "column": 44,
        "endLine": 356,
        "endColumn": 47,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Xid.from_string",
        "line": 356,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Xid.from_string",
        "line": 356,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Xid.__getitem__",
        "line": 357,
        "column": 36,
        "endLine": 357,
        "endColumn": 39,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Xid.__len__",
        "line": 358,
        "column": 23,
        "endLine": 358,
        "endColumn": 26,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "",
        "line": 360,
        "column": 0,
        "endLine": 360,
        "endColumn": 6,
        "path": "_psycopg.pyi",
        "symbol": "invalid-name",
        "message": "Type variable name \"_T_cur\" doesn't conform to predefined naming style ('^_{0,2}(?:[^\\\\W\\\\da-z_]+|(?:[^\\\\W\\\\da-z_]+[^\\\\WA-Z_]+)+T?(?<!Type))(?:_co(?:ntra)?)?$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection",
        "line": 362,
        "column": 0,
        "endLine": 362,
        "endColumn": 16,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection",
        "line": 362,
        "column": 0,
        "endLine": 362,
        "endColumn": 16,
        "path": "_psycopg.pyi",
        "symbol": "invalid-name",
        "message": "Class name \"connection\" doesn't conform to PascalCase naming style ('[^\\\\W\\\\da-z][^\\\\W_]+$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.async_",
        "line": 374,
        "column": 4,
        "endLine": 374,
        "endColumn": 14,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.async_",
        "line": 374,
        "column": 29,
        "endLine": 374,
        "endColumn": 32,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.binary_types",
        "line": 377,
        "column": 4,
        "endLine": 377,
        "endColumn": 20,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.binary_types",
        "line": 377,
        "column": 35,
        "endLine": 377,
        "endColumn": 38,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.closed",
        "line": 379,
        "column": 4,
        "endLine": 379,
        "endColumn": 14,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.closed",
        "line": 379,
        "column": 29,
        "endLine": 379,
        "endColumn": 32,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.dsn",
        "line": 382,
        "column": 4,
        "endLine": 382,
        "endColumn": 11,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.dsn",
        "line": 382,
        "column": 26,
        "endLine": 382,
        "endColumn": 29,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.encoding",
        "line": 384,
        "column": 4,
        "endLine": 384,
        "endColumn": 16,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.encoding",
        "line": 384,
        "column": 31,
        "endLine": 384,
        "endColumn": 34,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.info",
        "line": 386,
        "column": 4,
        "endLine": 386,
        "endColumn": 12,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.info",
        "line": 386,
        "column": 38,
        "endLine": 386,
        "endColumn": 41,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.isolation_level",
        "line": 388,
        "column": 4,
        "endLine": 388,
        "endColumn": 23,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.isolation_level",
        "line": 388,
        "column": 45,
        "endLine": 388,
        "endColumn": 48,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.isolation_level",
        "line": 390,
        "column": 74,
        "endLine": 390,
        "endColumn": 77,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.pgconn_ptr",
        "line": 394,
        "column": 4,
        "endLine": 394,
        "endColumn": 18,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.pgconn_ptr",
        "line": 394,
        "column": 40,
        "endLine": 394,
        "endColumn": 43,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.protocol_version",
        "line": 396,
        "column": 4,
        "endLine": 396,
        "endColumn": 24,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.protocol_version",
        "line": 396,
        "column": 39,
        "endLine": 396,
        "endColumn": 42,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.deferrable",
        "line": 398,
        "column": 4,
        "endLine": 398,
        "endColumn": 18,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.deferrable",
        "line": 398,
        "column": 41,
        "endLine": 398,
        "endColumn": 44,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.deferrable",
        "line": 400,
        "column": 77,
        "endLine": 400,
        "endColumn": 80,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.readonly",
        "line": 402,
        "column": 4,
        "endLine": 402,
        "endColumn": 16,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.readonly",
        "line": 402,
        "column": 39,
        "endLine": 402,
        "endColumn": 42,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.readonly",
        "line": 404,
        "column": 75,
        "endLine": 404,
        "endColumn": 78,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.server_version",
        "line": 406,
        "column": 4,
        "endLine": 406,
        "endColumn": 22,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.server_version",
        "line": 406,
        "column": 37,
        "endLine": 406,
        "endColumn": 40,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.status",
        "line": 408,
        "column": 4,
        "endLine": 408,
        "endColumn": 14,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.status",
        "line": 408,
        "column": 29,
        "endLine": 408,
        "endColumn": 32,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.string_types",
        "line": 410,
        "column": 4,
        "endLine": 410,
        "endColumn": 20,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.string_types",
        "line": 410,
        "column": 35,
        "endLine": 410,
        "endColumn": 38,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.__init__",
        "line": 413,
        "column": 64,
        "endLine": 413,
        "endColumn": 67,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "connection.__init__",
        "line": 413,
        "column": 23,
        "endLine": 413,
        "endColumn": 31,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'dsn'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "connection.__init__",
        "line": 413,
        "column": 36,
        "endLine": 413,
        "endColumn": 47,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'async_'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.cancel",
        "line": 414,
        "column": 4,
        "endLine": 414,
        "endColumn": 14,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.cancel",
        "line": 414,
        "column": 30,
        "endLine": 414,
        "endColumn": 33,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.close",
        "line": 415,
        "column": 4,
        "endLine": 415,
        "endColumn": 13,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.close",
        "line": 415,
        "column": 29,
        "endLine": 415,
        "endColumn": 32,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.commit",
        "line": 416,
        "column": 4,
        "endLine": 416,
        "endColumn": 14,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.commit",
        "line": 416,
        "column": 30,
        "endLine": 416,
        "endColumn": 33,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.fileno",
        "line": 432,
        "column": 4,
        "endLine": 432,
        "endColumn": 14,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.fileno",
        "line": 432,
        "column": 29,
        "endLine": 432,
        "endColumn": 32,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.get_backend_pid",
        "line": 433,
        "column": 4,
        "endLine": 433,
        "endColumn": 23,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.get_backend_pid",
        "line": 433,
        "column": 38,
        "endLine": 433,
        "endColumn": 41,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.get_dsn_parameters",
        "line": 434,
        "column": 4,
        "endLine": 434,
        "endColumn": 26,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.get_dsn_parameters",
        "line": 434,
        "column": 52,
        "endLine": 434,
        "endColumn": 55,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.get_native_connection",
        "line": 435,
        "column": 4,
        "endLine": 435,
        "endColumn": 29,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.get_native_connection",
        "line": 435,
        "column": 37,
        "endLine": 435,
        "endColumn": 40,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.get_parameter_status",
        "line": 436,
        "column": 4,
        "endLine": 436,
        "endColumn": 28,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.get_parameter_status",
        "line": 436,
        "column": 66,
        "endLine": 436,
        "endColumn": 69,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "connection.get_parameter_status",
        "line": 436,
        "column": 35,
        "endLine": 436,
        "endColumn": 49,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'parameter'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.get_transaction_status",
        "line": 437,
        "column": 4,
        "endLine": 437,
        "endColumn": 30,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.get_transaction_status",
        "line": 437,
        "column": 45,
        "endLine": 437,
        "endColumn": 48,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.isexecuting",
        "line": 438,
        "column": 4,
        "endLine": 438,
        "endColumn": 19,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.isexecuting",
        "line": 438,
        "column": 35,
        "endLine": 438,
        "endColumn": 38,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.lobject",
        "line": 439,
        "column": 4,
        "endLine": 439,
        "endColumn": 15,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "_psycopg",
        "obj": "connection.lobject",
        "line": 439,
        "column": 4,
        "endLine": 439,
        "endColumn": 15,
        "path": "_psycopg.pyi",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "connection.lobject",
        "line": 441,
        "column": 8,
        "endLine": 441,
        "endColumn": 16,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'oid'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "connection.lobject",
        "line": 442,
        "column": 8,
        "endLine": 442,
        "endColumn": 24,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'mode'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "connection.lobject",
        "line": 443,
        "column": 8,
        "endLine": 443,
        "endColumn": 20,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'new_oid'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "connection.lobject",
        "line": 444,
        "column": 8,
        "endLine": 444,
        "endColumn": 28,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'new_file'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "connection.lobject",
        "line": 445,
        "column": 8,
        "endLine": 445,
        "endColumn": 38,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'lobject_factory'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.poll",
        "line": 447,
        "column": 4,
        "endLine": 447,
        "endColumn": 12,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.poll",
        "line": 447,
        "column": 27,
        "endLine": 447,
        "endColumn": 30,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.reset",
        "line": 448,
        "column": 4,
        "endLine": 448,
        "endColumn": 13,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.reset",
        "line": 448,
        "column": 29,
        "endLine": 448,
        "endColumn": 32,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.rollback",
        "line": 449,
        "column": 4,
        "endLine": 449,
        "endColumn": 16,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.rollback",
        "line": 449,
        "column": 32,
        "endLine": 449,
        "endColumn": 35,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.set_client_encoding",
        "line": 450,
        "column": 4,
        "endLine": 450,
        "endColumn": 27,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.set_client_encoding",
        "line": 450,
        "column": 58,
        "endLine": 450,
        "endColumn": 61,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "connection.set_client_encoding",
        "line": 450,
        "column": 34,
        "endLine": 450,
        "endColumn": 47,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'encoding'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.set_isolation_level",
        "line": 451,
        "column": 4,
        "endLine": 451,
        "endColumn": 27,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.set_isolation_level",
        "line": 451,
        "column": 62,
        "endLine": 451,
        "endColumn": 65,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "connection.set_isolation_level",
        "line": 451,
        "column": 34,
        "endLine": 451,
        "endColumn": 51,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'level'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.set_session",
        "line": 452,
        "column": 4,
        "endLine": 452,
        "endColumn": 19,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "connection.set_session",
        "line": 454,
        "column": 8,
        "endLine": 454,
        "endColumn": 49,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'isolation_level'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "connection.set_session",
        "line": 455,
        "column": 8,
        "endLine": 455,
        "endColumn": 62,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'readonly'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "connection.set_session",
        "line": 456,
        "column": 8,
        "endLine": 456,
        "endColumn": 64,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'deferrable'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "connection.set_session",
        "line": 457,
        "column": 8,
        "endLine": 457,
        "endColumn": 24,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'autocommit'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.tpc_begin",
        "line": 459,
        "column": 4,
        "endLine": 459,
        "endColumn": 17,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.tpc_begin",
        "line": 459,
        "column": 57,
        "endLine": 459,
        "endColumn": 60,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "connection.tpc_begin",
        "line": 459,
        "column": 24,
        "endLine": 459,
        "endColumn": 46,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'xid'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.tpc_commit",
        "line": 460,
        "column": 4,
        "endLine": 460,
        "endColumn": 18,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.tpc_commit",
        "line": 460,
        "column": 66,
        "endLine": 460,
        "endColumn": 69,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.tpc_prepare",
        "line": 461,
        "column": 4,
        "endLine": 461,
        "endColumn": 19,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.tpc_prepare",
        "line": 461,
        "column": 35,
        "endLine": 461,
        "endColumn": 38,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.tpc_recover",
        "line": 462,
        "column": 4,
        "endLine": 462,
        "endColumn": 19,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.tpc_recover",
        "line": 462,
        "column": 40,
        "endLine": 462,
        "endColumn": 43,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.tpc_rollback",
        "line": 463,
        "column": 4,
        "endLine": 463,
        "endColumn": 20,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.tpc_rollback",
        "line": 463,
        "column": 68,
        "endLine": 463,
        "endColumn": 71,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.xid",
        "line": 464,
        "column": 4,
        "endLine": 464,
        "endColumn": 11,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.xid",
        "line": 464,
        "column": 51,
        "endLine": 464,
        "endColumn": 54,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "connection.xid",
        "line": 464,
        "column": 18,
        "endLine": 464,
        "endColumn": 27,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'format_id'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "connection.xid",
        "line": 464,
        "column": 29,
        "endLine": 464,
        "endColumn": 34,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'gtrid'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "connection.xid",
        "line": 464,
        "column": 36,
        "endLine": 464,
        "endColumn": 41,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'bqual'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.__enter__",
        "line": 465,
        "column": 39,
        "endLine": 465,
        "endColumn": 42,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "connection.__exit__",
        "line": 466,
        "column": 78,
        "endLine": 466,
        "endColumn": 81,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "refactor",
        "module": "_psycopg",
        "obj": "connection",
        "line": 362,
        "column": 0,
        "endLine": 362,
        "endColumn": 16,
        "path": "_psycopg.pyi",
        "symbol": "too-many-public-methods",
        "message": "Too many public methods (38/20)",
        "message-id": "R0904"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "lobject",
        "line": 468,
        "column": 0,
        "endLine": 468,
        "endColumn": 13,
        "path": "_psycopg.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "lobject",
        "line": 468,
        "column": 0,
        "endLine": 468,
        "endColumn": 13,
        "path": "_psycopg.pyi",
        "symbol": "invalid-name",
        "message": "Class name \"lobject\" doesn't conform to PascalCase naming style ('[^\\\\W\\\\da-z][^\\\\W_]+$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "lobject.__init__",
        "line": 472,
        "column": 49,
        "endLine": 472,
        "endColumn": 52,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "lobject.__init__",
        "line": 472,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "lobject.__init__",
        "line": 472,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "lobject.close",
        "line": 473,
        "column": 4,
        "endLine": 473,
        "endColumn": 13,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "lobject.close",
        "line": 473,
        "column": 21,
        "endLine": 473,
        "endColumn": 24,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "lobject.export",
        "line": 474,
        "column": 4,
        "endLine": 474,
        "endColumn": 14,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "lobject.export",
        "line": 474,
        "column": 32,
        "endLine": 474,
        "endColumn": 35,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "lobject.export",
        "line": 474,
        "column": 21,
        "endLine": 474,
        "endColumn": 29,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'filename'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "lobject.read",
        "line": 475,
        "column": 4,
        "endLine": 475,
        "endColumn": 12,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "lobject.read",
        "line": 475,
        "column": 30,
        "endLine": 475,
        "endColumn": 33,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "lobject.read",
        "line": 475,
        "column": 19,
        "endLine": 475,
        "endColumn": 23,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'size'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "lobject.seek",
        "line": 476,
        "column": 4,
        "endLine": 476,
        "endColumn": 12,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "lobject.seek",
        "line": 476,
        "column": 40,
        "endLine": 476,
        "endColumn": 43,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "lobject.seek",
        "line": 476,
        "column": 19,
        "endLine": 476,
        "endColumn": 25,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'offset'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "lobject.seek",
        "line": 476,
        "column": 27,
        "endLine": 476,
        "endColumn": 33,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'whence'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "lobject.tell",
        "line": 477,
        "column": 4,
        "endLine": 477,
        "endColumn": 12,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "lobject.tell",
        "line": 477,
        "column": 20,
        "endLine": 477,
        "endColumn": 23,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "lobject.truncate",
        "line": 478,
        "column": 4,
        "endLine": 478,
        "endColumn": 16,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "lobject.truncate",
        "line": 478,
        "column": 23,
        "endLine": 478,
        "endColumn": 26,
        "path": "_psycopg.pyi",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'len'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "lobject.truncate",
        "line": 478,
        "column": 33,
        "endLine": 478,
        "endColumn": 36,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "lobject.truncate",
        "line": 478,
        "column": 23,
        "endLine": 478,
        "endColumn": 26,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'len'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "lobject.unlink",
        "line": 479,
        "column": 4,
        "endLine": 479,
        "endColumn": 14,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "lobject.unlink",
        "line": 479,
        "column": 22,
        "endLine": 479,
        "endColumn": 25,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "lobject.write",
        "line": 480,
        "column": 4,
        "endLine": 480,
        "endColumn": 13,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "lobject.write",
        "line": 480,
        "column": 20,
        "endLine": 480,
        "endColumn": 23,
        "path": "_psycopg.pyi",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'str'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "lobject.write",
        "line": 480,
        "column": 26,
        "endLine": 480,
        "endColumn": 29,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "lobject.write",
        "line": 480,
        "column": 20,
        "endLine": 480,
        "endColumn": 23,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'str'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Date",
        "line": 482,
        "column": 0,
        "endLine": 482,
        "endColumn": 8,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Date",
        "line": 482,
        "column": 0,
        "endLine": 482,
        "endColumn": 8,
        "path": "_psycopg.pyi",
        "symbol": "invalid-name",
        "message": "Function name \"Date\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Date",
        "line": 482,
        "column": 28,
        "endLine": 482,
        "endColumn": 31,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Date",
        "line": 482,
        "column": 9,
        "endLine": 482,
        "endColumn": 13,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'year'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Date",
        "line": 482,
        "column": 15,
        "endLine": 482,
        "endColumn": 20,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'month'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Date",
        "line": 482,
        "column": 22,
        "endLine": 482,
        "endColumn": 25,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'day'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "DateFromPy",
        "line": 483,
        "column": 0,
        "endLine": 483,
        "endColumn": 14,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "DateFromPy",
        "line": 483,
        "column": 0,
        "endLine": 483,
        "endColumn": 14,
        "path": "_psycopg.pyi",
        "symbol": "invalid-name",
        "message": "Function name \"DateFromPy\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "DateFromPy",
        "line": 483,
        "column": 33,
        "endLine": 483,
        "endColumn": 36,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "DateFromPy",
        "line": 483,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "DateFromPy",
        "line": 483,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "DateFromTicks",
        "line": 484,
        "column": 0,
        "endLine": 484,
        "endColumn": 17,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "DateFromTicks",
        "line": 484,
        "column": 0,
        "endLine": 484,
        "endColumn": 17,
        "path": "_psycopg.pyi",
        "symbol": "invalid-name",
        "message": "Function name \"DateFromTicks\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "DateFromTicks",
        "line": 484,
        "column": 26,
        "endLine": 484,
        "endColumn": 29,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "DateFromTicks",
        "line": 484,
        "column": 18,
        "endLine": 484,
        "endColumn": 23,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'ticks'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "IntervalFromPy",
        "line": 485,
        "column": 0,
        "endLine": 485,
        "endColumn": 18,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "IntervalFromPy",
        "line": 485,
        "column": 0,
        "endLine": 485,
        "endColumn": 18,
        "path": "_psycopg.pyi",
        "symbol": "invalid-name",
        "message": "Function name \"IntervalFromPy\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "IntervalFromPy",
        "line": 485,
        "column": 37,
        "endLine": 485,
        "endColumn": 40,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "IntervalFromPy",
        "line": 485,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "IntervalFromPy",
        "line": 485,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Time",
        "line": 486,
        "column": 0,
        "endLine": 486,
        "endColumn": 8,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Time",
        "line": 486,
        "column": 0,
        "endLine": 486,
        "endColumn": 8,
        "path": "_psycopg.pyi",
        "symbol": "invalid-name",
        "message": "Function name \"Time\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Time",
        "line": 486,
        "column": 46,
        "endLine": 486,
        "endColumn": 49,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Time",
        "line": 486,
        "column": 9,
        "endLine": 486,
        "endColumn": 13,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'hour'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Time",
        "line": 486,
        "column": 15,
        "endLine": 486,
        "endColumn": 22,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'minutes'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Time",
        "line": 486,
        "column": 24,
        "endLine": 486,
        "endColumn": 31,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'seconds'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Time",
        "line": 486,
        "column": 33,
        "endLine": 486,
        "endColumn": 39,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'tzinfo'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "TimeFromPy",
        "line": 487,
        "column": 0,
        "endLine": 487,
        "endColumn": 14,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "TimeFromPy",
        "line": 487,
        "column": 0,
        "endLine": 487,
        "endColumn": 14,
        "path": "_psycopg.pyi",
        "symbol": "invalid-name",
        "message": "Function name \"TimeFromPy\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "TimeFromPy",
        "line": 487,
        "column": 33,
        "endLine": 487,
        "endColumn": 36,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "TimeFromPy",
        "line": 487,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "TimeFromPy",
        "line": 487,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "TimeFromTicks",
        "line": 488,
        "column": 0,
        "endLine": 488,
        "endColumn": 17,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "TimeFromTicks",
        "line": 488,
        "column": 0,
        "endLine": 488,
        "endColumn": 17,
        "path": "_psycopg.pyi",
        "symbol": "invalid-name",
        "message": "Function name \"TimeFromTicks\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "TimeFromTicks",
        "line": 488,
        "column": 26,
        "endLine": 488,
        "endColumn": 29,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "TimeFromTicks",
        "line": 488,
        "column": 18,
        "endLine": 488,
        "endColumn": 23,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'ticks'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Timestamp",
        "line": 489,
        "column": 0,
        "endLine": 489,
        "endColumn": 13,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Timestamp",
        "line": 489,
        "column": 0,
        "endLine": 489,
        "endColumn": 13,
        "path": "_psycopg.pyi",
        "symbol": "invalid-name",
        "message": "Function name \"Timestamp\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "_psycopg",
        "obj": "Timestamp",
        "line": 489,
        "column": 0,
        "endLine": 489,
        "endColumn": 13,
        "path": "_psycopg.pyi",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "Timestamp",
        "line": 489,
        "column": 69,
        "endLine": 489,
        "endColumn": 72,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Timestamp",
        "line": 489,
        "column": 14,
        "endLine": 489,
        "endColumn": 18,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'year'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Timestamp",
        "line": 489,
        "column": 20,
        "endLine": 489,
        "endColumn": 25,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'month'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Timestamp",
        "line": 489,
        "column": 27,
        "endLine": 489,
        "endColumn": 30,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'day'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Timestamp",
        "line": 489,
        "column": 32,
        "endLine": 489,
        "endColumn": 36,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'hour'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Timestamp",
        "line": 489,
        "column": 38,
        "endLine": 489,
        "endColumn": 45,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'minutes'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Timestamp",
        "line": 489,
        "column": 47,
        "endLine": 489,
        "endColumn": 54,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'seconds'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "Timestamp",
        "line": 489,
        "column": 56,
        "endLine": 489,
        "endColumn": 62,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'tzinfo'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "TimestampFromPy",
        "line": 490,
        "column": 0,
        "endLine": 490,
        "endColumn": 19,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "TimestampFromPy",
        "line": 490,
        "column": 0,
        "endLine": 490,
        "endColumn": 19,
        "path": "_psycopg.pyi",
        "symbol": "invalid-name",
        "message": "Function name \"TimestampFromPy\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "TimestampFromPy",
        "line": 490,
        "column": 38,
        "endLine": 490,
        "endColumn": 41,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "TimestampFromPy",
        "line": 490,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "TimestampFromPy",
        "line": 490,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "TimestampFromTicks",
        "line": 491,
        "column": 0,
        "endLine": 491,
        "endColumn": 22,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "TimestampFromTicks",
        "line": 491,
        "column": 0,
        "endLine": 491,
        "endColumn": 22,
        "path": "_psycopg.pyi",
        "symbol": "invalid-name",
        "message": "Function name \"TimestampFromTicks\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "TimestampFromTicks",
        "line": 491,
        "column": 31,
        "endLine": 491,
        "endColumn": 34,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "TimestampFromTicks",
        "line": 491,
        "column": 23,
        "endLine": 491,
        "endColumn": 28,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'ticks'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "_connect",
        "line": 492,
        "column": 31,
        "endLine": 492,
        "endColumn": 34,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "_connect",
        "line": 492,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "_connect",
        "line": 492,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "adapt",
        "line": 493,
        "column": 0,
        "endLine": 493,
        "endColumn": 9,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "adapt",
        "line": 493,
        "column": 28,
        "endLine": 493,
        "endColumn": 31,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "adapt",
        "line": 493,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "adapt",
        "line": 493,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "encrypt_password",
        "line": 494,
        "column": 0,
        "endLine": 494,
        "endColumn": 20,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "encrypt_password",
        "line": 494,
        "column": 39,
        "endLine": 494,
        "endColumn": 42,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "encrypt_password",
        "line": 494,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "encrypt_password",
        "line": 494,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "get_wait_callback",
        "line": 495,
        "column": 0,
        "endLine": 495,
        "endColumn": 21,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "get_wait_callback",
        "line": 495,
        "column": 40,
        "endLine": 495,
        "endColumn": 43,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "get_wait_callback",
        "line": 495,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "get_wait_callback",
        "line": 495,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "libpq_version",
        "line": 496,
        "column": 0,
        "endLine": 496,
        "endColumn": 17,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "libpq_version",
        "line": 496,
        "column": 36,
        "endLine": 496,
        "endColumn": 39,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "libpq_version",
        "line": 496,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "libpq_version",
        "line": 496,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "new_array_type",
        "line": 497,
        "column": 0,
        "endLine": 497,
        "endColumn": 18,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "new_array_type",
        "line": 497,
        "column": 41,
        "endLine": 497,
        "endColumn": 44,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "new_array_type",
        "line": 497,
        "column": 19,
        "endLine": 497,
        "endColumn": 23,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'oids'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "new_array_type",
        "line": 497,
        "column": 25,
        "endLine": 497,
        "endColumn": 29,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'name'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "new_array_type",
        "line": 497,
        "column": 31,
        "endLine": 497,
        "endColumn": 38,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'baseobj'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "new_type",
        "line": 498,
        "column": 0,
        "endLine": 498,
        "endColumn": 12,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "new_type",
        "line": 498,
        "column": 35,
        "endLine": 498,
        "endColumn": 38,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "new_type",
        "line": 498,
        "column": 13,
        "endLine": 498,
        "endColumn": 17,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'oids'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "new_type",
        "line": 498,
        "column": 19,
        "endLine": 498,
        "endColumn": 23,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'name'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "new_type",
        "line": 498,
        "column": 25,
        "endLine": 498,
        "endColumn": 32,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'castobj'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "parse_dsn",
        "line": 499,
        "column": 0,
        "endLine": 499,
        "endColumn": 13,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "parse_dsn",
        "line": 499,
        "column": 32,
        "endLine": 499,
        "endColumn": 35,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "parse_dsn",
        "line": 499,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "parse_dsn",
        "line": 499,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "quote_ident",
        "line": 500,
        "column": 0,
        "endLine": 500,
        "endColumn": 15,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "quote_ident",
        "line": 500,
        "column": 34,
        "endLine": 500,
        "endColumn": 37,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "quote_ident",
        "line": 500,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "quote_ident",
        "line": 500,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "register_type",
        "line": 501,
        "column": 0,
        "endLine": 501,
        "endColumn": 17,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "register_type",
        "line": 501,
        "column": 36,
        "endLine": 501,
        "endColumn": 39,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "register_type",
        "line": 501,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "_psycopg",
        "obj": "register_type",
        "line": 501,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "_psycopg.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "set_wait_callback",
        "line": 502,
        "column": 0,
        "endLine": 502,
        "endColumn": 21,
        "path": "_psycopg.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "set_wait_callback",
        "line": 502,
        "column": 30,
        "endLine": 502,
        "endColumn": 33,
        "path": "_psycopg.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "",
        "line": 2,
        "column": 0,
        "endLine": 2,
        "endColumn": 65,
        "path": "_psycopg.pyi",
        "symbol": "wrong-import-order",
        "message": "standard import \"from collections.abc import Callable, Iterable, Mapping, Sequence\" should be placed before \"from _typeshed import Self\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "",
        "line": 3,
        "column": 0,
        "endLine": 3,
        "endColumn": 31,
        "path": "_psycopg.pyi",
        "symbol": "wrong-import-order",
        "message": "standard import \"from types import TracebackType\" should be placed before \"from _typeshed import Self\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "_psycopg",
        "obj": "",
        "line": 4,
        "column": 0,
        "endLine": 4,
        "endColumn": 41,
        "path": "_psycopg.pyi",
        "symbol": "wrong-import-order",
        "message": "standard import \"from typing import Any, TypeVar, overload\" should be placed before \"from _typeshed import Self\"",
        "message-id": "C0411"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 96,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 96,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 96,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 0,
        "endLine": 98,
        "endColumn": 11,
        "path": "app/etl/ps_etl.py",
        "symbol": "pointless-statement",
        "message": "Statement seems to have no effect",
        "message-id": "W0104"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 96,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 96,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 96,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 96,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 96,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 96,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 96,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 96,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 96,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 96,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 115,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 96,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 96,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 115,
        "column": 4,
        "endLine": 115,
        "endColumn": 7,
        "path": "app/etl/ps_etl.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'sys'",
        "message-id": "E0602"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 97,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 15,
        "column": 0,
        "endLine": 15,
        "endColumn": 9,
        "path": "app/etl/ps_etl.py",
        "symbol": "unused-import",
        "message": "Unused import re",
        "message-id": "W0611"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 147,
        "column": 24,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "anomalous-backslash-in-string",
        "message": "Anomalous backslash in string: '\\s'. String constant might be missing an r prefix.",
        "message-id": "W1401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 147,
        "column": 16,
        "endLine": 147,
        "endColumn": 29,
        "path": "app/etl/ps_etl.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 'repl' in function call",
        "message-id": "E1120"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 147,
        "column": 16,
        "endLine": 147,
        "endColumn": 29,
        "path": "app/etl/ps_etl.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 'string' in function call",
        "message-id": "E1120"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 147,
        "column": 24,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "anomalous-backslash-in-string",
        "message": "Anomalous backslash in string: '\\s'. String constant might be missing an r prefix.",
        "message-id": "W1401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 147,
        "column": 16,
        "endLine": 147,
        "endColumn": 34,
        "path": "app/etl/ps_etl.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 'string' in function call",
        "message-id": "E1120"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 147,
        "column": 24,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "anomalous-backslash-in-string",
        "message": "Anomalous backslash in string: '\\s'. String constant might be missing an r prefix.",
        "message-id": "W1401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 175,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 176,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 175,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 177,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 114,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 114,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 114,
        "column": 4,
        "endLine": 114,
        "endColumn": 20,
        "path": "app/etl/ps_etl.py",
        "symbol": "pointless-statement",
        "message": "Statement seems to have no effect",
        "message-id": "W0104"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 114,
        "column": 4,
        "endLine": 114,
        "endColumn": 20,
        "path": "app/etl/ps_etl.py",
        "symbol": "undefined-variable",
        "message": "Undefined variable 'CONNECTION_ERROR'",
        "message-id": "E0602"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 114,
        "column": 24,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "invalid syntax (<unknown>, line 114)",
        "message-id": "E0001"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "fatal",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "astroid-error",
        "message": "/home/bot/AAMeineSachen/FL3XX/BRIGHT-reporting/app/etl/ps_etl.py: Fatal error while checking '/home/bot/AAMeineSachen/FL3XX/BRIGHT-reporting/app/etl/ps_etl.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/bot/.cache/pylint/pylint-crash-2022-07-18-10.txt'.",
        "message-id": "F0002"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 114,
        "column": 24,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "invalid syntax. Perhaps you forgot a comma? (<unknown>, line 114)",
        "message-id": "E0001"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 114,
        "column": 77,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "unterminated string literal (detected at line 114) (<unknown>, line 114)",
        "message-id": "E0001"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 114,
        "column": 74,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "unterminated string literal (detected at line 114) (<unknown>, line 114)",
        "message-id": "E0001"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 114,
        "column": 23,
        "endLine": 114,
        "endColumn": 71,
        "path": "app/etl/ps_etl.py",
        "symbol": "f-string-without-interpolation",
        "message": "Using an f-string that does not have any interpolated variables",
        "message-id": "W1309"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 114,
        "column": 73,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "f-string: expecting '}' (<unknown>, line 114)",
        "message-id": "E0001"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ~/anaconda3/envs/bright/lib/python3.10/logging/__init__.py
cwd: ~/anaconda3/envs/bright/lib/python3.10/logging
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ~/anaconda3/envs/bright/lib/python3.10/logging/__init__.py
cwd: ~/anaconda3/envs/bright/lib/python3.10/logging
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "logging.__init__",
        "obj": "",
        "line": 429,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "logging.__init__",
        "obj": "",
        "line": 450,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "logging.__init__",
        "obj": "",
        "line": 779,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "__init__.py",
        "symbol": "superfluous-parens",
        "message": "Unnecessary parens after 'return' keyword",
        "message-id": "C0325"
    },
    {
        "type": "convention",
        "module": "logging.__init__",
        "obj": "",
        "line": 796,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "__init__.py",
        "symbol": "superfluous-parens",
        "message": "Unnecessary parens after 'not' keyword",
        "message-id": "C0325"
    },
    {
        "type": "convention",
        "module": "logging.__init__",
        "obj": "",
        "line": 1633,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "__init__.py",
        "symbol": "superfluous-parens",
        "message": "Unnecessary parens after 'not' keyword",
        "message-id": "C0325"
    },
    {
        "type": "convention",
        "module": "logging.__init__",
        "obj": "",
        "line": 1692,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "__init__.py",
        "symbol": "superfluous-parens",
        "message": "Unnecessary parens after 'if' keyword",
        "message-id": "C0325"
    },
    {
        "type": "convention",
        "module": "logging.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "__init__.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (2252/1000)",
        "message-id": "C0302"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "",
        "line": 26,
        "column": 0,
        "endLine": 26,
        "endColumn": 75,
        "path": "__init__.py",
        "symbol": "multiple-imports",
        "message": "Multiple imports on one line (sys, os, time, io, re, traceback, warnings, weakref, collections.abc)",
        "message-id": "C0410"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "",
        "line": 63,
        "column": 0,
        "endLine": 63,
        "endColumn": 15,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Constant name \"raiseExceptions\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "",
        "line": 68,
        "column": 0,
        "endLine": 68,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Constant name \"logThreads\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "",
        "line": 73,
        "column": 0,
        "endLine": 73,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Constant name \"logMultiprocessing\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "",
        "line": 78,
        "column": 0,
        "endLine": 78,
        "endColumn": 12,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Constant name \"logProcesses\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "getLevelName",
        "line": 119,
        "column": 0,
        "endLine": 119,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"getLevelName\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "getLevelName",
        "line": 144,
        "column": 11,
        "endLine": 144,
        "endColumn": 21,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "addLevelName",
        "line": 146,
        "column": 0,
        "endLine": 146,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"addLevelName\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "addLevelName",
        "line": 146,
        "column": 24,
        "endLine": 146,
        "endColumn": 33,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Argument name \"levelName\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "<lambda>",
        "line": 160,
        "column": 19,
        "endLine": 160,
        "endColumn": 43,
        "path": "__init__.py",
        "symbol": "unnecessary-lambda-assignment",
        "message": "Lambda expression assigned to a variable. Define a function using the \"def\" keyword instead.",
        "message-id": "C3001"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "<lambda>",
        "line": 160,
        "column": 27,
        "endLine": 160,
        "endColumn": 40,
        "path": "__init__.py",
        "symbol": "protected-access",
        "message": "Access to a protected member _getframe of a client class",
        "message-id": "W0212"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "currentframe",
        "line": 166,
        "column": 15,
        "endLine": 166,
        "endColumn": 24,
        "path": "__init__.py",
        "symbol": "broad-except",
        "message": "Catching too general exception Exception",
        "message-id": "W0703"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "_checkLevel",
        "line": 193,
        "column": 0,
        "endLine": 193,
        "endColumn": 15,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"_checkLevel\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "_checkLevel",
        "line": 195,
        "column": 8,
        "endLine": 195,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "_checkLevel",
        "line": 198,
        "column": 29,
        "endLine": 198,
        "endColumn": 48,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "_checkLevel",
        "line": 199,
        "column": 8,
        "endLine": 199,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "_checkLevel",
        "line": 201,
        "column": 24,
        "endLine": 201,
        "endColumn": 68,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "_acquireLock",
        "line": 219,
        "column": 0,
        "endLine": 219,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"_acquireLock\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "_acquireLock",
        "line": 226,
        "column": 8,
        "endLine": 226,
        "endColumn": 23,
        "path": "__init__.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "_releaseLock",
        "line": 228,
        "column": 0,
        "endLine": 228,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"_releaseLock\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "_register_at_fork_reinit_lock",
        "line": 239,
        "column": 38,
        "endLine": 239,
        "endColumn": 46,
        "path": "__init__.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'instance'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "_after_at_fork_child_reinit_locks",
        "line": 256,
        "column": 12,
        "endLine": 256,
        "endColumn": 35,
        "path": "__init__.py",
        "symbol": "protected-access",
        "message": "Access to a protected member _at_fork_reinit of a client class",
        "message-id": "W0212"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "_after_at_fork_child_reinit_locks",
        "line": 260,
        "column": 8,
        "endLine": 260,
        "endColumn": 29,
        "path": "__init__.py",
        "symbol": "protected-access",
        "message": "Access to a protected member _at_fork_reinit of a client class",
        "message-id": "W0212"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LogRecord.__init__",
        "line": 326,
        "column": 8,
        "endLine": 326,
        "endColumn": 21,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"funcName\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LogRecord.__init__",
        "line": 329,
        "column": 8,
        "endLine": 329,
        "endColumn": 28,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"relativeCreated\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LogRecord.__init__",
        "line": 332,
        "column": 12,
        "endLine": 332,
        "endColumn": 27,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"threadName\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LogRecord.__init__",
        "line": 337,
        "column": 12,
        "endLine": 337,
        "endColumn": 28,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"processName\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "LogRecord",
        "line": 271,
        "column": 0,
        "endLine": 271,
        "endColumn": 15,
        "path": "__init__.py",
        "symbol": "useless-object-inheritance",
        "message": "Class 'LogRecord' inherits from object, can be safely removed from bases in python3",
        "message-id": "R0205"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "LogRecord",
        "line": 271,
        "column": 0,
        "endLine": 271,
        "endColumn": 15,
        "path": "__init__.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (20/7)",
        "message-id": "R0902"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "LogRecord.__init__",
        "line": 283,
        "column": 4,
        "endLine": 283,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (10/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LogRecord.__init__",
        "line": 288,
        "column": 8,
        "endLine": 288,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"ct\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LogRecord.__init__",
        "line": 340,
        "column": 12,
        "endLine": 340,
        "endColumn": 14,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"mp\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "LogRecord.__init__",
        "line": 348,
        "column": 23,
        "endLine": 348,
        "endColumn": 32,
        "path": "__init__.py",
        "symbol": "broad-except",
        "message": "Catching too general exception Exception",
        "message-id": "W0703"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "LogRecord.__init__",
        "line": 283,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "__init__.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LogRecord.__repr__",
        "line": 356,
        "column": 15,
        "endLine": 356,
        "endColumn": 50,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LogRecord.getMessage",
        "line": 359,
        "column": 4,
        "endLine": 359,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"getMessage\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "setLogRecordFactory",
        "line": 376,
        "column": 0,
        "endLine": 376,
        "endColumn": 23,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"setLogRecordFactory\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "setLogRecordFactory",
        "line": 383,
        "column": 4,
        "endLine": 383,
        "endColumn": 28,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Constant name \"_logRecordFactory\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "setLogRecordFactory",
        "line": 383,
        "column": 4,
        "endLine": 383,
        "endColumn": 28,
        "path": "__init__.py",
        "symbol": "global-statement",
        "message": "Using the global statement",
        "message-id": "W0603"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "getLogRecordFactory",
        "line": 386,
        "column": 0,
        "endLine": 386,
        "endColumn": 23,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"getLogRecordFactory\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "makeLogRecord",
        "line": 393,
        "column": 0,
        "endLine": 393,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"makeLogRecord\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "makeLogRecord",
        "line": 393,
        "column": 18,
        "endLine": 393,
        "endColumn": 22,
        "path": "__init__.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'dict'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "makeLogRecord",
        "line": 400,
        "column": 4,
        "endLine": 400,
        "endColumn": 6,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "PercentStyle",
        "line": 412,
        "column": 0,
        "endLine": 412,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "PercentStyle",
        "line": 412,
        "column": 0,
        "endLine": 412,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "useless-object-inheritance",
        "message": "Class 'PercentStyle' inherits from object, can be safely removed from bases in python3",
        "message-id": "R0205"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "PercentStyle.usesTime",
        "line": 423,
        "column": 4,
        "endLine": 423,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "PercentStyle.usesTime",
        "line": 423,
        "column": 4,
        "endLine": 423,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"usesTime\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "PercentStyle.validate",
        "line": 429,
        "column": 29,
        "endLine": 429,
        "endColumn": 65,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "PercentStyle.format",
        "line": 438,
        "column": 4,
        "endLine": 438,
        "endColumn": 14,
        "path": "__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "PercentStyle.format",
        "line": 441,
        "column": 8,
        "endLine": 442,
        "endColumn": 76,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"e\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "PercentStyle.format",
        "line": 442,
        "column": 12,
        "endLine": 442,
        "endColumn": 76,
        "path": "__init__.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'raise ValueError('Formatting field not found in record: %s' % e) from e'",
        "message-id": "W0707"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "PercentStyle.format",
        "line": 442,
        "column": 29,
        "endLine": 442,
        "endColumn": 71,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "StrFormatStyle",
        "line": 445,
        "column": 0,
        "endLine": 445,
        "endColumn": 20,
        "path": "__init__.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "StrFormatStyle.validate",
        "line": 467,
        "column": 41,
        "endLine": 467,
        "endColumn": 76,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "StrFormatStyle.validate",
        "line": 470,
        "column": 37,
        "endLine": 470,
        "endColumn": 61,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "StrFormatStyle.validate",
        "line": 472,
        "column": 37,
        "endLine": 472,
        "endColumn": 56,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "StrFormatStyle.validate",
        "line": 473,
        "column": 8,
        "endLine": 474,
        "endColumn": 54,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"e\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "StrFormatStyle.validate",
        "line": 474,
        "column": 12,
        "endLine": 474,
        "endColumn": 54,
        "path": "__init__.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'raise ValueError('invalid format: %s' % e) from e'",
        "message-id": "W0707"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "StrFormatStyle.validate",
        "line": 474,
        "column": 29,
        "endLine": 474,
        "endColumn": 49,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "StringTemplateStyle",
        "line": 479,
        "column": 0,
        "endLine": 479,
        "endColumn": 25,
        "path": "__init__.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "StringTemplateStyle.validate",
        "line": 495,
        "column": 12,
        "endLine": 495,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"m\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "StringTemplateStyle.validate",
        "line": 496,
        "column": 12,
        "endLine": 496,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"d\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "Formatter",
        "line": 522,
        "column": 0,
        "endLine": 522,
        "endColumn": 15,
        "path": "__init__.py",
        "symbol": "useless-object-inheritance",
        "message": "Class 'Formatter' inherits from object, can be safely removed from bases in python3",
        "message-id": "R0205"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.__init__",
        "line": 585,
        "column": 29,
        "endLine": 585,
        "endColumn": 55,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.formatTime",
        "line": 597,
        "column": 4,
        "endLine": 597,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"formatTime\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.formatTime",
        "line": 615,
        "column": 8,
        "endLine": 615,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"ct\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.formatTime",
        "line": 617,
        "column": 12,
        "endLine": 617,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.formatTime",
        "line": 619,
        "column": 12,
        "endLine": 619,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.formatTime",
        "line": 621,
        "column": 16,
        "endLine": 621,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.formatException",
        "line": 624,
        "column": 4,
        "endLine": 624,
        "endColumn": 23,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"formatException\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.formatException",
        "line": 624,
        "column": 30,
        "endLine": 624,
        "endColumn": 32,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Argument name \"ei\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.formatException",
        "line": 632,
        "column": 8,
        "endLine": 632,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"tb\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.formatException",
        "line": 637,
        "column": 8,
        "endLine": 637,
        "endColumn": 9,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.formatException",
        "line": 640,
        "column": 12,
        "endLine": 640,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.usesTime",
        "line": 643,
        "column": 4,
        "endLine": 643,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"usesTime\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.formatMessage",
        "line": 649,
        "column": 4,
        "endLine": 649,
        "endColumn": 21,
        "path": "__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.formatMessage",
        "line": 649,
        "column": 4,
        "endLine": 649,
        "endColumn": 21,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"formatMessage\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.formatStack",
        "line": 652,
        "column": 4,
        "endLine": 652,
        "endColumn": 19,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"formatStack\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.format",
        "line": 681,
        "column": 8,
        "endLine": 681,
        "endColumn": 9,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.format",
        "line": 689,
        "column": 16,
        "endLine": 689,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.format",
        "line": 690,
        "column": 12,
        "endLine": 690,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.format",
        "line": 693,
        "column": 16,
        "endLine": 693,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.format",
        "line": 694,
        "column": 12,
        "endLine": 694,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "BufferingFormatter",
        "line": 702,
        "column": 0,
        "endLine": 702,
        "endColumn": 24,
        "path": "__init__.py",
        "symbol": "useless-object-inheritance",
        "message": "Class 'BufferingFormatter' inherits from object, can be safely removed from bases in python3",
        "message-id": "R0205"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "BufferingFormatter.formatHeader",
        "line": 716,
        "column": 4,
        "endLine": 716,
        "endColumn": 20,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"formatHeader\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "BufferingFormatter.formatHeader",
        "line": 716,
        "column": 27,
        "endLine": 716,
        "endColumn": 34,
        "path": "__init__.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'records'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "BufferingFormatter.formatFooter",
        "line": 722,
        "column": 4,
        "endLine": 722,
        "endColumn": 20,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"formatFooter\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "BufferingFormatter.formatFooter",
        "line": 722,
        "column": 27,
        "endLine": 722,
        "endColumn": 34,
        "path": "__init__.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'records'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "BufferingFormatter.format",
        "line": 732,
        "column": 8,
        "endLine": 732,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "BufferingFormatter.format",
        "line": 734,
        "column": 12,
        "endLine": 734,
        "endColumn": 14,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "BufferingFormatter.format",
        "line": 736,
        "column": 16,
        "endLine": 736,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "BufferingFormatter.format",
        "line": 737,
        "column": 12,
        "endLine": 737,
        "endColumn": 14,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "Filter",
        "line": 744,
        "column": 0,
        "endLine": 744,
        "endColumn": 12,
        "path": "__init__.py",
        "symbol": "useless-object-inheritance",
        "message": "Class 'Filter' inherits from object, can be safely removed from bases in python3",
        "message-id": "R0205"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "Filter.filter",
        "line": 773,
        "column": 8,
        "endLine": 778,
        "endColumn": 24,
        "path": "__init__.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "Filter",
        "line": 744,
        "column": 0,
        "endLine": 744,
        "endColumn": 12,
        "path": "__init__.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "Filterer",
        "line": 781,
        "column": 0,
        "endLine": 781,
        "endColumn": 14,
        "path": "__init__.py",
        "symbol": "useless-object-inheritance",
        "message": "Class 'Filterer' inherits from object, can be safely removed from bases in python3",
        "message-id": "R0205"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Filterer.addFilter",
        "line": 792,
        "column": 4,
        "endLine": 792,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"addFilter\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "Filterer.addFilter",
        "line": 792,
        "column": 24,
        "endLine": 792,
        "endColumn": 30,
        "path": "__init__.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'filter'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Filterer.removeFilter",
        "line": 799,
        "column": 4,
        "endLine": 799,
        "endColumn": 20,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"removeFilter\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "Filterer.removeFilter",
        "line": 799,
        "column": 27,
        "endLine": 799,
        "endColumn": 33,
        "path": "__init__.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'filter'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Filterer.filter",
        "line": 818,
        "column": 8,
        "endLine": 818,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Filterer.filter",
        "line": 819,
        "column": 12,
        "endLine": 819,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"f\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Filterer.filter",
        "line": 825,
        "column": 16,
        "endLine": 825,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "_removeHandlerRef",
        "line": 836,
        "column": 0,
        "endLine": 836,
        "endColumn": 21,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"_removeHandlerRef\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "_removeHandlerRef",
        "line": 836,
        "column": 22,
        "endLine": 836,
        "endColumn": 24,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Argument name \"wr\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "_addHandlerRef",
        "line": 853,
        "column": 0,
        "endLine": 853,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"_addHandlerRef\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Handler.get_name",
        "line": 885,
        "column": 4,
        "endLine": 885,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Handler.set_name",
        "line": 888,
        "column": 4,
        "endLine": 888,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Handler.createLock",
        "line": 901,
        "column": 4,
        "endLine": 901,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"createLock\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "Handler._at_fork_reinit",
        "line": 909,
        "column": 8,
        "endLine": 909,
        "endColumn": 33,
        "path": "__init__.py",
        "symbol": "protected-access",
        "message": "Access to a protected member _at_fork_reinit of a client class",
        "message-id": "W0212"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "Handler.acquire",
        "line": 916,
        "column": 12,
        "endLine": 916,
        "endColumn": 31,
        "path": "__init__.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Handler.setLevel",
        "line": 925,
        "column": 4,
        "endLine": 925,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"setLevel\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Handler.handle",
        "line": 963,
        "column": 8,
        "endLine": 963,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Handler.setFormatter",
        "line": 972,
        "column": 4,
        "endLine": 972,
        "endColumn": 20,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"setFormatter\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "Handler.flush",
        "line": 985,
        "column": 8,
        "endLine": 985,
        "endColumn": 12,
        "path": "__init__.py",
        "symbol": "unnecessary-pass",
        "message": "Unnecessary pass statement",
        "message-id": "W0107"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Handler.handleError",
        "line": 1004,
        "column": 4,
        "endLine": 1004,
        "endColumn": 19,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"handleError\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Handler.handleError",
        "line": 1017,
        "column": 12,
        "endLine": 1017,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"t\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Handler.handleError",
        "line": 1017,
        "column": 15,
        "endLine": 1017,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"v\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Handler.handleError",
        "line": 1017,
        "column": 18,
        "endLine": 1017,
        "endColumn": 20,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"tb\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Handler.handleError",
        "line": 1032,
        "column": 37,
        "endLine": 1032,
        "endColumn": 69,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "Handler.handleError",
        "line": 1041,
        "column": 23,
        "endLine": 1041,
        "endColumn": 32,
        "path": "__init__.py",
        "symbol": "broad-except",
        "message": "Catching too general exception Exception",
        "message-id": "W0703"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Handler.handleError",
        "line": 1036,
        "column": 37,
        "endLine": 1037,
        "endColumn": 54,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Handler.__repr__",
        "line": 1053,
        "column": 15,
        "endLine": 1053,
        "endColumn": 26,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "StreamHandler.emit",
        "line": 1105,
        "column": 15,
        "endLine": 1105,
        "endColumn": 24,
        "path": "__init__.py",
        "symbol": "broad-except",
        "message": "Catching too general exception Exception",
        "message-id": "W0703"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "StreamHandler.setStream",
        "line": 1108,
        "column": 4,
        "endLine": 1108,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"setStream\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "StreamHandler.__repr__",
        "line": 1135,
        "column": 15,
        "endLine": 1135,
        "endColumn": 28,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "FileHandler.__init__",
        "line": 1150,
        "column": 8,
        "endLine": 1150,
        "endColumn": 25,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"baseFilename\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "FileHandler.__init__",
        "line": 1164,
        "column": 12,
        "endLine": 1164,
        "endColumn": 28,
        "path": "__init__.py",
        "symbol": "non-parent-init-called",
        "message": "__init__ method from a non direct base class 'Handler' is called",
        "message-id": "W0233"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "FileHandler.__init__",
        "line": 1142,
        "column": 4,
        "endLine": 1142,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "FileHandler.__repr__",
        "line": 1213,
        "column": 15,
        "endLine": 1213,
        "endColumn": 29,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "_StderrHandler.__init__",
        "line": 1226,
        "column": 8,
        "endLine": 1226,
        "endColumn": 24,
        "path": "__init__.py",
        "symbol": "non-parent-init-called",
        "message": "__init__ method from a non direct base class 'Handler' is called",
        "message-id": "W0233"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "_StderrHandler.__init__",
        "line": 1222,
        "column": 4,
        "endLine": 1222,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "super-init-not-called",
        "message": "__init__ method from base class 'StreamHandler' is not called",
        "message-id": "W0231"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "_StderrHandler.stream",
        "line": 1229,
        "column": 4,
        "endLine": 1229,
        "endColumn": 14,
        "path": "__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "PlaceHolder.__init__",
        "line": 1250,
        "column": 8,
        "endLine": 1250,
        "endColumn": 22,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"loggerMap\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "PlaceHolder",
        "line": 1240,
        "column": 0,
        "endLine": 1240,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "useless-object-inheritance",
        "message": "Class 'PlaceHolder' inherits from object, can be safely removed from bases in python3",
        "message-id": "R0205"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "PlaceHolder",
        "line": 1240,
        "column": 0,
        "endLine": 1240,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "setLoggerClass",
        "line": 1263,
        "column": 0,
        "endLine": 1263,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"setLoggerClass\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "setLoggerClass",
        "line": 1273,
        "column": 4,
        "endLine": 1273,
        "endColumn": 23,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Constant name \"_loggerClass\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "setLoggerClass",
        "line": 1273,
        "column": 4,
        "endLine": 1273,
        "endColumn": 23,
        "path": "__init__.py",
        "symbol": "global-statement",
        "message": "Using the global statement",
        "message-id": "W0603"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "getLoggerClass",
        "line": 1276,
        "column": 0,
        "endLine": 1276,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"getLoggerClass\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager.__init__",
        "line": 1293,
        "column": 8,
        "endLine": 1293,
        "endColumn": 36,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"emittedNoHandlerWarning\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager.__init__",
        "line": 1294,
        "column": 8,
        "endLine": 1294,
        "endColumn": 23,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"loggerDict\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager.__init__",
        "line": 1295,
        "column": 8,
        "endLine": 1295,
        "endColumn": 24,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"loggerClass\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager.__init__",
        "line": 1296,
        "column": 8,
        "endLine": 1296,
        "endColumn": 29,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"logRecordFactory\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "Manager",
        "line": 1282,
        "column": 0,
        "endLine": 1282,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "useless-object-inheritance",
        "message": "Class 'Manager' inherits from object, can be safely removed from bases in python3",
        "message-id": "R0205"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager.disable",
        "line": 1299,
        "column": 4,
        "endLine": 1299,
        "endColumn": 15,
        "path": "__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager.getLogger",
        "line": 1306,
        "column": 4,
        "endLine": 1306,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"getLogger\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager.getLogger",
        "line": 1317,
        "column": 8,
        "endLine": 1317,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager.getLogger",
        "line": 1323,
        "column": 16,
        "endLine": 1323,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager.getLogger",
        "line": 1325,
        "column": 20,
        "endLine": 1325,
        "endColumn": 22,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"ph\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager.getLogger",
        "line": 1326,
        "column": 20,
        "endLine": 1326,
        "endColumn": 22,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager.getLogger",
        "line": 1332,
        "column": 16,
        "endLine": 1332,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager.setLoggerClass",
        "line": 1340,
        "column": 4,
        "endLine": 1340,
        "endColumn": 22,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"setLoggerClass\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager.setLogRecordFactory",
        "line": 1350,
        "column": 4,
        "endLine": 1350,
        "endColumn": 27,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"setLogRecordFactory\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager._fixupParents",
        "line": 1357,
        "column": 4,
        "endLine": 1357,
        "endColumn": 21,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"_fixupParents\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager._fixupParents",
        "line": 1364,
        "column": 8,
        "endLine": 1364,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager._fixupParents",
        "line": 1372,
        "column": 20,
        "endLine": 1372,
        "endColumn": 22,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager._fixupParents",
        "line": 1378,
        "column": 12,
        "endLine": 1378,
        "endColumn": 14,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager._fixupChildren",
        "line": 1381,
        "column": 4,
        "endLine": 1381,
        "endColumn": 22,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"_fixupChildren\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager._fixupChildren",
        "line": 1381,
        "column": 29,
        "endLine": 1381,
        "endColumn": 31,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Argument name \"ph\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager._fixupChildren",
        "line": 1388,
        "column": 12,
        "endLine": 1388,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"c\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "Manager._clear_cache",
        "line": 1403,
        "column": 16,
        "endLine": 1403,
        "endColumn": 29,
        "path": "__init__.py",
        "symbol": "protected-access",
        "message": "Access to a protected member _cache of a client class",
        "message-id": "W0212"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "Manager._clear_cache",
        "line": 1404,
        "column": 8,
        "endLine": 1404,
        "endColumn": 24,
        "path": "__init__.py",
        "symbol": "protected-access",
        "message": "Access to a protected member _cache of a client class",
        "message-id": "W0212"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.callHandlers",
        "line": 1699,
        "column": 16,
        "endLine": 1699,
        "endColumn": 52,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"emittedNoHandlerWarning\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "Logger",
        "line": 1411,
        "column": 0,
        "endLine": 1411,
        "endColumn": 12,
        "path": "__init__.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (9/7)",
        "message-id": "R0902"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.setLevel",
        "line": 1439,
        "column": 4,
        "endLine": 1439,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"setLevel\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "Logger.setLevel",
        "line": 1444,
        "column": 8,
        "endLine": 1444,
        "endColumn": 33,
        "path": "__init__.py",
        "symbol": "protected-access",
        "message": "Access to a protected member _clear_cache of a client class",
        "message-id": "W0212"
    },
    {
        "type": "error",
        "module": "logging",
        "obj": "Logger.setLevel",
        "line": 1444,
        "column": 8,
        "endLine": 1444,
        "endColumn": 33,
        "path": "__init__.py",
        "symbol": "no-member",
        "message": "Instance of 'Logger' has no '_clear_cache' member",
        "message-id": "E1101"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.warn",
        "line": 1482,
        "column": 4,
        "endLine": 1482,
        "endColumn": 12,
        "path": "__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "Logger.log",
        "line": 1533,
        "column": 12,
        "endLine": 1536,
        "endColumn": 22,
        "path": "__init__.py",
        "symbol": "no-else-raise",
        "message": "Unnecessary \"else\" after \"raise\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1720"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.findCaller",
        "line": 1540,
        "column": 4,
        "endLine": 1540,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"findCaller\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.findCaller",
        "line": 1545,
        "column": 8,
        "endLine": 1545,
        "endColumn": 9,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"f\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.findCaller",
        "line": 1549,
        "column": 12,
        "endLine": 1549,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"f\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.findCaller",
        "line": 1552,
        "column": 12,
        "endLine": 1552,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"f\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.findCaller",
        "line": 1555,
        "column": 12,
        "endLine": 1555,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"f\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.findCaller",
        "line": 1556,
        "column": 8,
        "endLine": 1556,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.findCaller",
        "line": 1558,
        "column": 12,
        "endLine": 1558,
        "endColumn": 14,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"co\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.findCaller",
        "line": 1561,
        "column": 16,
        "endLine": 1561,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"f\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.findCaller",
        "line": 1572,
        "column": 12,
        "endLine": 1572,
        "endColumn": 14,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.makeRecord",
        "line": 1576,
        "column": 4,
        "endLine": 1576,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"makeRecord\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.makeRecord",
        "line": 1576,
        "column": 38,
        "endLine": 1576,
        "endColumn": 40,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Argument name \"fn\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "Logger.makeRecord",
        "line": 1576,
        "column": 4,
        "endLine": 1576,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (11/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.makeRecord",
        "line": 1582,
        "column": 8,
        "endLine": 1582,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.makeRecord",
        "line": 1587,
        "column": 35,
        "endLine": 1587,
        "endColumn": 73,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "Logger._log",
        "line": 1591,
        "column": 4,
        "endLine": 1591,
        "endColumn": 12,
        "path": "__init__.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger._log",
        "line": 1603,
        "column": 16,
        "endLine": 1603,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"fn\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger._log",
        "line": 1605,
        "column": 16,
        "endLine": 1605,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"fn\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger._log",
        "line": 1607,
        "column": 12,
        "endLine": 1607,
        "endColumn": 14,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"fn\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.addHandler",
        "line": 1627,
        "column": 4,
        "endLine": 1627,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"addHandler\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.removeHandler",
        "line": 1638,
        "column": 4,
        "endLine": 1638,
        "endColumn": 21,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"removeHandler\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.hasHandlers",
        "line": 1649,
        "column": 4,
        "endLine": 1649,
        "endColumn": 19,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"hasHandlers\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.hasHandlers",
        "line": 1659,
        "column": 8,
        "endLine": 1659,
        "endColumn": 9,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"c\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.hasHandlers",
        "line": 1660,
        "column": 8,
        "endLine": 1660,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.hasHandlers",
        "line": 1663,
        "column": 16,
        "endLine": 1663,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "Logger.hasHandlers",
        "line": 1665,
        "column": 12,
        "endLine": 1668,
        "endColumn": 28,
        "path": "__init__.py",
        "symbol": "no-else-break",
        "message": "Unnecessary \"else\" after \"break\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1723"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.hasHandlers",
        "line": 1668,
        "column": 16,
        "endLine": 1668,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"c\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.callHandlers",
        "line": 1671,
        "column": 4,
        "endLine": 1671,
        "endColumn": 20,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"callHandlers\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.callHandlers",
        "line": 1681,
        "column": 8,
        "endLine": 1681,
        "endColumn": 9,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"c\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.callHandlers",
        "line": 1689,
        "column": 16,
        "endLine": 1689,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"c\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.callHandlers",
        "line": 1691,
        "column": 16,
        "endLine": 1691,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"c\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.callHandlers",
        "line": 1697,
        "column": 33,
        "endLine": 1698,
        "endColumn": 44,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.getEffectiveLevel",
        "line": 1701,
        "column": 4,
        "endLine": 1701,
        "endColumn": 25,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"getEffectiveLevel\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.isEnabledFor",
        "line": 1715,
        "column": 4,
        "endLine": 1715,
        "endColumn": 20,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"isEnabledFor\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "logging",
        "obj": "Logger.isEnabledFor",
        "line": 1727,
        "column": 19,
        "endLine": 1727,
        "endColumn": 39,
        "path": "__init__.py",
        "symbol": "no-member",
        "message": "Instance of 'Logger' has no 'disable' member; maybe 'disabled'?",
        "message-id": "E1101"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.getChild",
        "line": 1737,
        "column": 4,
        "endLine": 1737,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"getChild\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "logging",
        "obj": "Logger.getChild",
        "line": 1754,
        "column": 15,
        "endLine": 1754,
        "endColumn": 37,
        "path": "__init__.py",
        "symbol": "no-member",
        "message": "Instance of 'Logger' has no 'getLogger' member",
        "message-id": "E1101"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.__repr__",
        "line": 1758,
        "column": 15,
        "endLine": 1758,
        "endColumn": 29,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.__reduce__",
        "line": 1764,
        "column": 12,
        "endLine": 1764,
        "endColumn": 25,
        "path": "__init__.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (pickle)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "Logger.callHandlers",
        "line": 1699,
        "column": 16,
        "endLine": 1699,
        "endColumn": 52,
        "path": "__init__.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'emittedNoHandlerWarning' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "disable",
        "line": 2155,
        "column": 4,
        "endLine": 2155,
        "endColumn": 24,
        "path": "__init__.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'disable' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "LoggerAdapter",
        "line": 1786,
        "column": 0,
        "endLine": 1786,
        "endColumn": 19,
        "path": "__init__.py",
        "symbol": "useless-object-inheritance",
        "message": "Class 'LoggerAdapter' inherits from object, can be safely removed from bases in python3",
        "message-id": "R0205"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LoggerAdapter.warn",
        "line": 1840,
        "column": 4,
        "endLine": 1840,
        "endColumn": 12,
        "path": "__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LoggerAdapter.isEnabledFor",
        "line": 1872,
        "column": 4,
        "endLine": 1872,
        "endColumn": 20,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"isEnabledFor\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LoggerAdapter.setLevel",
        "line": 1878,
        "column": 4,
        "endLine": 1878,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"setLevel\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LoggerAdapter.getEffectiveLevel",
        "line": 1884,
        "column": 4,
        "endLine": 1884,
        "endColumn": 25,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"getEffectiveLevel\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LoggerAdapter.hasHandlers",
        "line": 1890,
        "column": 4,
        "endLine": 1890,
        "endColumn": 19,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"hasHandlers\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "LoggerAdapter._log",
        "line": 1896,
        "column": 4,
        "endLine": 1896,
        "endColumn": 12,
        "path": "__init__.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "LoggerAdapter._log",
        "line": 1900,
        "column": 15,
        "endLine": 1900,
        "endColumn": 31,
        "path": "__init__.py",
        "symbol": "protected-access",
        "message": "Access to a protected member _log of a client class",
        "message-id": "W0212"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LoggerAdapter.manager",
        "line": 1910,
        "column": 4,
        "endLine": 1910,
        "endColumn": 15,
        "path": "__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LoggerAdapter.name",
        "line": 1918,
        "column": 4,
        "endLine": 1918,
        "endColumn": 12,
        "path": "__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LoggerAdapter.__repr__",
        "line": 1924,
        "column": 15,
        "endLine": 1924,
        "endColumn": 29,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "basicConfig",
        "line": 1934,
        "column": 0,
        "endLine": 1934,
        "endColumn": 15,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"basicConfig\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "basicConfig",
        "line": 2010,
        "column": 16,
        "endLine": 2010,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"h\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "basicConfig",
        "line": 2031,
        "column": 20,
        "endLine": 2031,
        "endColumn": 21,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"h\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "basicConfig",
        "line": 2035,
        "column": 20,
        "endLine": 2035,
        "endColumn": 21,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"h\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "basicConfig",
        "line": 2040,
        "column": 33,
        "endLine": 2040,
        "endColumn": 59,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "basicConfig",
        "line": 2042,
        "column": 12,
        "endLine": 2042,
        "endColumn": 14,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"fs\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "basicConfig",
        "line": 2044,
        "column": 16,
        "endLine": 2044,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"h\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "basicConfig",
        "line": 2053,
        "column": 33,
        "endLine": 2053,
        "endColumn": 63,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "basicConfig",
        "line": 1934,
        "column": 0,
        "endLine": 1934,
        "endColumn": 15,
        "path": "__init__.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (18/12)",
        "message-id": "R0912"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "getLogger",
        "line": 2062,
        "column": 0,
        "endLine": 2062,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"getLogger\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "warn",
        "line": 2116,
        "column": 0,
        "endLine": 2116,
        "endColumn": 8,
        "path": "__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "disable",
        "line": 2156,
        "column": 4,
        "endLine": 2156,
        "endColumn": 29,
        "path": "__init__.py",
        "symbol": "protected-access",
        "message": "Access to a protected member _clear_cache of a client class",
        "message-id": "W0212"
    },
    {
        "type": "error",
        "module": "logging",
        "obj": "disable",
        "line": 2156,
        "column": 4,
        "endLine": 2156,
        "endColumn": 29,
        "path": "__init__.py",
        "symbol": "no-member",
        "message": "Instance of 'RootLogger' has no '_clear_cache' member",
        "message-id": "E1101"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "shutdown",
        "line": 2158,
        "column": 13,
        "endLine": 2158,
        "endColumn": 24,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Argument name \"handlerList\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "shutdown",
        "line": 2158,
        "column": 0,
        "endLine": 2158,
        "endColumn": 12,
        "path": "__init__.py",
        "symbol": "dangerous-default-value",
        "message": "Dangerous default value _handlerList (builtins.list) as argument",
        "message-id": "W0102"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "shutdown",
        "line": 2165,
        "column": 8,
        "endLine": 2165,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"wr\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "shutdown",
        "line": 2183,
        "column": 8,
        "endLine": 2185,
        "endColumn": 21,
        "path": "__init__.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "shutdown",
        "line": 2169,
        "column": 12,
        "endLine": 2169,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"h\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "",
        "line": 2189,
        "column": 0,
        "endLine": 2189,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "wrong-import-position",
        "message": "Import \"import atexit\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "",
        "line": 2218,
        "column": 0,
        "endLine": 2218,
        "endColumn": 21,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Constant name \"_warnings_showwarning\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "_showwarning",
        "line": 2220,
        "column": 0,
        "endLine": 2220,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "_showwarning",
        "line": 2232,
        "column": 8,
        "endLine": 2232,
        "endColumn": 9,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "captureWarnings",
        "line": 2238,
        "column": 0,
        "endLine": 2238,
        "endColumn": 19,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"captureWarnings\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "captureWarnings",
        "line": 2244,
        "column": 4,
        "endLine": 2244,
        "endColumn": 32,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Constant name \"_warnings_showwarning\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "captureWarnings",
        "line": 2244,
        "column": 4,
        "endLine": 2244,
        "endColumn": 32,
        "path": "__init__.py",
        "symbol": "global-statement",
        "message": "Using the global statement",
        "message-id": "W0603"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "logging.__init__",
        "obj": "",
        "line": 429,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "logging.__init__",
        "obj": "",
        "line": 450,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "logging.__init__",
        "obj": "",
        "line": 779,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "__init__.py",
        "symbol": "superfluous-parens",
        "message": "Unnecessary parens after 'return' keyword",
        "message-id": "C0325"
    },
    {
        "type": "convention",
        "module": "logging.__init__",
        "obj": "",
        "line": 796,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "__init__.py",
        "symbol": "superfluous-parens",
        "message": "Unnecessary parens after 'not' keyword",
        "message-id": "C0325"
    },
    {
        "type": "convention",
        "module": "logging.__init__",
        "obj": "",
        "line": 1633,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "__init__.py",
        "symbol": "superfluous-parens",
        "message": "Unnecessary parens after 'not' keyword",
        "message-id": "C0325"
    },
    {
        "type": "convention",
        "module": "logging.__init__",
        "obj": "",
        "line": 1692,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "__init__.py",
        "symbol": "superfluous-parens",
        "message": "Unnecessary parens after 'if' keyword",
        "message-id": "C0325"
    },
    {
        "type": "convention",
        "module": "logging.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "__init__.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (2252/1000)",
        "message-id": "C0302"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "",
        "line": 26,
        "column": 0,
        "endLine": 26,
        "endColumn": 75,
        "path": "__init__.py",
        "symbol": "multiple-imports",
        "message": "Multiple imports on one line (sys, os, time, io, re, traceback, warnings, weakref, collections.abc)",
        "message-id": "C0410"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "",
        "line": 63,
        "column": 0,
        "endLine": 63,
        "endColumn": 15,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Constant name \"raiseExceptions\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "",
        "line": 68,
        "column": 0,
        "endLine": 68,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Constant name \"logThreads\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "",
        "line": 73,
        "column": 0,
        "endLine": 73,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Constant name \"logMultiprocessing\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "",
        "line": 78,
        "column": 0,
        "endLine": 78,
        "endColumn": 12,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Constant name \"logProcesses\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "getLevelName",
        "line": 119,
        "column": 0,
        "endLine": 119,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"getLevelName\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "getLevelName",
        "line": 144,
        "column": 11,
        "endLine": 144,
        "endColumn": 21,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "addLevelName",
        "line": 146,
        "column": 0,
        "endLine": 146,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"addLevelName\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "addLevelName",
        "line": 146,
        "column": 24,
        "endLine": 146,
        "endColumn": 33,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Argument name \"levelName\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "<lambda>",
        "line": 160,
        "column": 19,
        "endLine": 160,
        "endColumn": 43,
        "path": "__init__.py",
        "symbol": "unnecessary-lambda-assignment",
        "message": "Lambda expression assigned to a variable. Define a function using the \"def\" keyword instead.",
        "message-id": "C3001"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "<lambda>",
        "line": 160,
        "column": 27,
        "endLine": 160,
        "endColumn": 40,
        "path": "__init__.py",
        "symbol": "protected-access",
        "message": "Access to a protected member _getframe of a client class",
        "message-id": "W0212"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "currentframe",
        "line": 166,
        "column": 15,
        "endLine": 166,
        "endColumn": 24,
        "path": "__init__.py",
        "symbol": "broad-except",
        "message": "Catching too general exception Exception",
        "message-id": "W0703"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "_checkLevel",
        "line": 193,
        "column": 0,
        "endLine": 193,
        "endColumn": 15,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"_checkLevel\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "_checkLevel",
        "line": 195,
        "column": 8,
        "endLine": 195,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "_checkLevel",
        "line": 198,
        "column": 29,
        "endLine": 198,
        "endColumn": 48,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "_checkLevel",
        "line": 199,
        "column": 8,
        "endLine": 199,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "_checkLevel",
        "line": 201,
        "column": 24,
        "endLine": 201,
        "endColumn": 68,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "_acquireLock",
        "line": 219,
        "column": 0,
        "endLine": 219,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"_acquireLock\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "_acquireLock",
        "line": 226,
        "column": 8,
        "endLine": 226,
        "endColumn": 23,
        "path": "__init__.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "_releaseLock",
        "line": 228,
        "column": 0,
        "endLine": 228,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"_releaseLock\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "_register_at_fork_reinit_lock",
        "line": 239,
        "column": 38,
        "endLine": 239,
        "endColumn": 46,
        "path": "__init__.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'instance'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "_after_at_fork_child_reinit_locks",
        "line": 256,
        "column": 12,
        "endLine": 256,
        "endColumn": 35,
        "path": "__init__.py",
        "symbol": "protected-access",
        "message": "Access to a protected member _at_fork_reinit of a client class",
        "message-id": "W0212"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "_after_at_fork_child_reinit_locks",
        "line": 260,
        "column": 8,
        "endLine": 260,
        "endColumn": 29,
        "path": "__init__.py",
        "symbol": "protected-access",
        "message": "Access to a protected member _at_fork_reinit of a client class",
        "message-id": "W0212"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LogRecord.__init__",
        "line": 326,
        "column": 8,
        "endLine": 326,
        "endColumn": 21,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"funcName\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LogRecord.__init__",
        "line": 329,
        "column": 8,
        "endLine": 329,
        "endColumn": 28,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"relativeCreated\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LogRecord.__init__",
        "line": 332,
        "column": 12,
        "endLine": 332,
        "endColumn": 27,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"threadName\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LogRecord.__init__",
        "line": 337,
        "column": 12,
        "endLine": 337,
        "endColumn": 28,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"processName\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "LogRecord",
        "line": 271,
        "column": 0,
        "endLine": 271,
        "endColumn": 15,
        "path": "__init__.py",
        "symbol": "useless-object-inheritance",
        "message": "Class 'LogRecord' inherits from object, can be safely removed from bases in python3",
        "message-id": "R0205"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "LogRecord",
        "line": 271,
        "column": 0,
        "endLine": 271,
        "endColumn": 15,
        "path": "__init__.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (20/7)",
        "message-id": "R0902"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "LogRecord.__init__",
        "line": 283,
        "column": 4,
        "endLine": 283,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (10/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LogRecord.__init__",
        "line": 288,
        "column": 8,
        "endLine": 288,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"ct\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LogRecord.__init__",
        "line": 340,
        "column": 12,
        "endLine": 340,
        "endColumn": 14,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"mp\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "LogRecord.__init__",
        "line": 348,
        "column": 23,
        "endLine": 348,
        "endColumn": 32,
        "path": "__init__.py",
        "symbol": "broad-except",
        "message": "Catching too general exception Exception",
        "message-id": "W0703"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "LogRecord.__init__",
        "line": 283,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "__init__.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'kwargs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LogRecord.__repr__",
        "line": 356,
        "column": 15,
        "endLine": 356,
        "endColumn": 50,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LogRecord.getMessage",
        "line": 359,
        "column": 4,
        "endLine": 359,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"getMessage\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "setLogRecordFactory",
        "line": 376,
        "column": 0,
        "endLine": 376,
        "endColumn": 23,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"setLogRecordFactory\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "setLogRecordFactory",
        "line": 383,
        "column": 4,
        "endLine": 383,
        "endColumn": 28,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Constant name \"_logRecordFactory\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "setLogRecordFactory",
        "line": 383,
        "column": 4,
        "endLine": 383,
        "endColumn": 28,
        "path": "__init__.py",
        "symbol": "global-statement",
        "message": "Using the global statement",
        "message-id": "W0603"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "getLogRecordFactory",
        "line": 386,
        "column": 0,
        "endLine": 386,
        "endColumn": 23,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"getLogRecordFactory\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "makeLogRecord",
        "line": 393,
        "column": 0,
        "endLine": 393,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"makeLogRecord\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "makeLogRecord",
        "line": 393,
        "column": 18,
        "endLine": 393,
        "endColumn": 22,
        "path": "__init__.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'dict'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "makeLogRecord",
        "line": 400,
        "column": 4,
        "endLine": 400,
        "endColumn": 6,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "PercentStyle",
        "line": 412,
        "column": 0,
        "endLine": 412,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "PercentStyle",
        "line": 412,
        "column": 0,
        "endLine": 412,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "useless-object-inheritance",
        "message": "Class 'PercentStyle' inherits from object, can be safely removed from bases in python3",
        "message-id": "R0205"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "PercentStyle.usesTime",
        "line": 423,
        "column": 4,
        "endLine": 423,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "PercentStyle.usesTime",
        "line": 423,
        "column": 4,
        "endLine": 423,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"usesTime\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "PercentStyle.validate",
        "line": 429,
        "column": 29,
        "endLine": 429,
        "endColumn": 65,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "PercentStyle.format",
        "line": 438,
        "column": 4,
        "endLine": 438,
        "endColumn": 14,
        "path": "__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "PercentStyle.format",
        "line": 441,
        "column": 8,
        "endLine": 442,
        "endColumn": 76,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"e\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "PercentStyle.format",
        "line": 442,
        "column": 12,
        "endLine": 442,
        "endColumn": 76,
        "path": "__init__.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'raise ValueError('Formatting field not found in record: %s' % e) from e'",
        "message-id": "W0707"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "PercentStyle.format",
        "line": 442,
        "column": 29,
        "endLine": 442,
        "endColumn": 71,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "StrFormatStyle",
        "line": 445,
        "column": 0,
        "endLine": 445,
        "endColumn": 20,
        "path": "__init__.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "StrFormatStyle.validate",
        "line": 467,
        "column": 41,
        "endLine": 467,
        "endColumn": 76,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "StrFormatStyle.validate",
        "line": 470,
        "column": 37,
        "endLine": 470,
        "endColumn": 61,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "StrFormatStyle.validate",
        "line": 472,
        "column": 37,
        "endLine": 472,
        "endColumn": 56,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "StrFormatStyle.validate",
        "line": 473,
        "column": 8,
        "endLine": 474,
        "endColumn": 54,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"e\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "StrFormatStyle.validate",
        "line": 474,
        "column": 12,
        "endLine": 474,
        "endColumn": 54,
        "path": "__init__.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'raise ValueError('invalid format: %s' % e) from e'",
        "message-id": "W0707"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "StrFormatStyle.validate",
        "line": 474,
        "column": 29,
        "endLine": 474,
        "endColumn": 49,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "StringTemplateStyle",
        "line": 479,
        "column": 0,
        "endLine": 479,
        "endColumn": 25,
        "path": "__init__.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "StringTemplateStyle.validate",
        "line": 495,
        "column": 12,
        "endLine": 495,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"m\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "StringTemplateStyle.validate",
        "line": 496,
        "column": 12,
        "endLine": 496,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"d\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "Formatter",
        "line": 522,
        "column": 0,
        "endLine": 522,
        "endColumn": 15,
        "path": "__init__.py",
        "symbol": "useless-object-inheritance",
        "message": "Class 'Formatter' inherits from object, can be safely removed from bases in python3",
        "message-id": "R0205"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.__init__",
        "line": 585,
        "column": 29,
        "endLine": 585,
        "endColumn": 55,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.formatTime",
        "line": 597,
        "column": 4,
        "endLine": 597,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"formatTime\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.formatTime",
        "line": 615,
        "column": 8,
        "endLine": 615,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"ct\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.formatTime",
        "line": 617,
        "column": 12,
        "endLine": 617,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.formatTime",
        "line": 619,
        "column": 12,
        "endLine": 619,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.formatTime",
        "line": 621,
        "column": 16,
        "endLine": 621,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.formatException",
        "line": 624,
        "column": 4,
        "endLine": 624,
        "endColumn": 23,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"formatException\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.formatException",
        "line": 624,
        "column": 30,
        "endLine": 624,
        "endColumn": 32,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Argument name \"ei\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.formatException",
        "line": 632,
        "column": 8,
        "endLine": 632,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"tb\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.formatException",
        "line": 637,
        "column": 8,
        "endLine": 637,
        "endColumn": 9,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.formatException",
        "line": 640,
        "column": 12,
        "endLine": 640,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.usesTime",
        "line": 643,
        "column": 4,
        "endLine": 643,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"usesTime\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.formatMessage",
        "line": 649,
        "column": 4,
        "endLine": 649,
        "endColumn": 21,
        "path": "__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.formatMessage",
        "line": 649,
        "column": 4,
        "endLine": 649,
        "endColumn": 21,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"formatMessage\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.formatStack",
        "line": 652,
        "column": 4,
        "endLine": 652,
        "endColumn": 19,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"formatStack\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.format",
        "line": 681,
        "column": 8,
        "endLine": 681,
        "endColumn": 9,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.format",
        "line": 689,
        "column": 16,
        "endLine": 689,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.format",
        "line": 690,
        "column": 12,
        "endLine": 690,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.format",
        "line": 693,
        "column": 16,
        "endLine": 693,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Formatter.format",
        "line": 694,
        "column": 12,
        "endLine": 694,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "BufferingFormatter",
        "line": 702,
        "column": 0,
        "endLine": 702,
        "endColumn": 24,
        "path": "__init__.py",
        "symbol": "useless-object-inheritance",
        "message": "Class 'BufferingFormatter' inherits from object, can be safely removed from bases in python3",
        "message-id": "R0205"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "BufferingFormatter.formatHeader",
        "line": 716,
        "column": 4,
        "endLine": 716,
        "endColumn": 20,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"formatHeader\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "BufferingFormatter.formatHeader",
        "line": 716,
        "column": 27,
        "endLine": 716,
        "endColumn": 34,
        "path": "__init__.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'records'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "BufferingFormatter.formatFooter",
        "line": 722,
        "column": 4,
        "endLine": 722,
        "endColumn": 20,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"formatFooter\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "BufferingFormatter.formatFooter",
        "line": 722,
        "column": 27,
        "endLine": 722,
        "endColumn": 34,
        "path": "__init__.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'records'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "BufferingFormatter.format",
        "line": 732,
        "column": 8,
        "endLine": 732,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "BufferingFormatter.format",
        "line": 734,
        "column": 12,
        "endLine": 734,
        "endColumn": 14,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "BufferingFormatter.format",
        "line": 736,
        "column": 16,
        "endLine": 736,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "BufferingFormatter.format",
        "line": 737,
        "column": 12,
        "endLine": 737,
        "endColumn": 14,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "Filter",
        "line": 744,
        "column": 0,
        "endLine": 744,
        "endColumn": 12,
        "path": "__init__.py",
        "symbol": "useless-object-inheritance",
        "message": "Class 'Filter' inherits from object, can be safely removed from bases in python3",
        "message-id": "R0205"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "Filter.filter",
        "line": 773,
        "column": 8,
        "endLine": 778,
        "endColumn": 24,
        "path": "__init__.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "Filter",
        "line": 744,
        "column": 0,
        "endLine": 744,
        "endColumn": 12,
        "path": "__init__.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "Filterer",
        "line": 781,
        "column": 0,
        "endLine": 781,
        "endColumn": 14,
        "path": "__init__.py",
        "symbol": "useless-object-inheritance",
        "message": "Class 'Filterer' inherits from object, can be safely removed from bases in python3",
        "message-id": "R0205"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Filterer.addFilter",
        "line": 792,
        "column": 4,
        "endLine": 792,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"addFilter\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "Filterer.addFilter",
        "line": 792,
        "column": 24,
        "endLine": 792,
        "endColumn": 30,
        "path": "__init__.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'filter'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Filterer.removeFilter",
        "line": 799,
        "column": 4,
        "endLine": 799,
        "endColumn": 20,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"removeFilter\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "Filterer.removeFilter",
        "line": 799,
        "column": 27,
        "endLine": 799,
        "endColumn": 33,
        "path": "__init__.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'filter'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Filterer.filter",
        "line": 818,
        "column": 8,
        "endLine": 818,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Filterer.filter",
        "line": 819,
        "column": 12,
        "endLine": 819,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"f\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Filterer.filter",
        "line": 825,
        "column": 16,
        "endLine": 825,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "_removeHandlerRef",
        "line": 836,
        "column": 0,
        "endLine": 836,
        "endColumn": 21,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"_removeHandlerRef\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "_removeHandlerRef",
        "line": 836,
        "column": 22,
        "endLine": 836,
        "endColumn": 24,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Argument name \"wr\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "_addHandlerRef",
        "line": 853,
        "column": 0,
        "endLine": 853,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"_addHandlerRef\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Handler.get_name",
        "line": 885,
        "column": 4,
        "endLine": 885,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Handler.set_name",
        "line": 888,
        "column": 4,
        "endLine": 888,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Handler.createLock",
        "line": 901,
        "column": 4,
        "endLine": 901,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"createLock\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "Handler._at_fork_reinit",
        "line": 909,
        "column": 8,
        "endLine": 909,
        "endColumn": 33,
        "path": "__init__.py",
        "symbol": "protected-access",
        "message": "Access to a protected member _at_fork_reinit of a client class",
        "message-id": "W0212"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "Handler.acquire",
        "line": 916,
        "column": 12,
        "endLine": 916,
        "endColumn": 31,
        "path": "__init__.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Handler.setLevel",
        "line": 925,
        "column": 4,
        "endLine": 925,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"setLevel\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Handler.handle",
        "line": 963,
        "column": 8,
        "endLine": 963,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Handler.setFormatter",
        "line": 972,
        "column": 4,
        "endLine": 972,
        "endColumn": 20,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"setFormatter\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "Handler.flush",
        "line": 985,
        "column": 8,
        "endLine": 985,
        "endColumn": 12,
        "path": "__init__.py",
        "symbol": "unnecessary-pass",
        "message": "Unnecessary pass statement",
        "message-id": "W0107"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Handler.handleError",
        "line": 1004,
        "column": 4,
        "endLine": 1004,
        "endColumn": 19,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"handleError\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Handler.handleError",
        "line": 1017,
        "column": 12,
        "endLine": 1017,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"t\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Handler.handleError",
        "line": 1017,
        "column": 15,
        "endLine": 1017,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"v\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Handler.handleError",
        "line": 1017,
        "column": 18,
        "endLine": 1017,
        "endColumn": 20,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"tb\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Handler.handleError",
        "line": 1032,
        "column": 37,
        "endLine": 1032,
        "endColumn": 69,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "Handler.handleError",
        "line": 1041,
        "column": 23,
        "endLine": 1041,
        "endColumn": 32,
        "path": "__init__.py",
        "symbol": "broad-except",
        "message": "Catching too general exception Exception",
        "message-id": "W0703"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Handler.handleError",
        "line": 1036,
        "column": 37,
        "endLine": 1037,
        "endColumn": 54,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Handler.__repr__",
        "line": 1053,
        "column": 15,
        "endLine": 1053,
        "endColumn": 26,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "StreamHandler.emit",
        "line": 1105,
        "column": 15,
        "endLine": 1105,
        "endColumn": 24,
        "path": "__init__.py",
        "symbol": "broad-except",
        "message": "Catching too general exception Exception",
        "message-id": "W0703"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "StreamHandler.setStream",
        "line": 1108,
        "column": 4,
        "endLine": 1108,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"setStream\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "StreamHandler.__repr__",
        "line": 1135,
        "column": 15,
        "endLine": 1135,
        "endColumn": 28,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "FileHandler.__init__",
        "line": 1150,
        "column": 8,
        "endLine": 1150,
        "endColumn": 25,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"baseFilename\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "FileHandler.__init__",
        "line": 1164,
        "column": 12,
        "endLine": 1164,
        "endColumn": 28,
        "path": "__init__.py",
        "symbol": "non-parent-init-called",
        "message": "__init__ method from a non direct base class 'Handler' is called",
        "message-id": "W0233"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "FileHandler.__init__",
        "line": 1142,
        "column": 4,
        "endLine": 1142,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "FileHandler.__repr__",
        "line": 1213,
        "column": 15,
        "endLine": 1213,
        "endColumn": 29,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "_StderrHandler.__init__",
        "line": 1226,
        "column": 8,
        "endLine": 1226,
        "endColumn": 24,
        "path": "__init__.py",
        "symbol": "non-parent-init-called",
        "message": "__init__ method from a non direct base class 'Handler' is called",
        "message-id": "W0233"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "_StderrHandler.__init__",
        "line": 1222,
        "column": 4,
        "endLine": 1222,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "super-init-not-called",
        "message": "__init__ method from base class 'StreamHandler' is not called",
        "message-id": "W0231"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "_StderrHandler.stream",
        "line": 1229,
        "column": 4,
        "endLine": 1229,
        "endColumn": 14,
        "path": "__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "PlaceHolder.__init__",
        "line": 1250,
        "column": 8,
        "endLine": 1250,
        "endColumn": 22,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"loggerMap\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "PlaceHolder",
        "line": 1240,
        "column": 0,
        "endLine": 1240,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "useless-object-inheritance",
        "message": "Class 'PlaceHolder' inherits from object, can be safely removed from bases in python3",
        "message-id": "R0205"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "PlaceHolder",
        "line": 1240,
        "column": 0,
        "endLine": 1240,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "setLoggerClass",
        "line": 1263,
        "column": 0,
        "endLine": 1263,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"setLoggerClass\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "setLoggerClass",
        "line": 1273,
        "column": 4,
        "endLine": 1273,
        "endColumn": 23,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Constant name \"_loggerClass\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "setLoggerClass",
        "line": 1273,
        "column": 4,
        "endLine": 1273,
        "endColumn": 23,
        "path": "__init__.py",
        "symbol": "global-statement",
        "message": "Using the global statement",
        "message-id": "W0603"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "getLoggerClass",
        "line": 1276,
        "column": 0,
        "endLine": 1276,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"getLoggerClass\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager.__init__",
        "line": 1293,
        "column": 8,
        "endLine": 1293,
        "endColumn": 36,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"emittedNoHandlerWarning\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager.__init__",
        "line": 1294,
        "column": 8,
        "endLine": 1294,
        "endColumn": 23,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"loggerDict\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager.__init__",
        "line": 1295,
        "column": 8,
        "endLine": 1295,
        "endColumn": 24,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"loggerClass\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager.__init__",
        "line": 1296,
        "column": 8,
        "endLine": 1296,
        "endColumn": 29,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"logRecordFactory\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "Manager",
        "line": 1282,
        "column": 0,
        "endLine": 1282,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "useless-object-inheritance",
        "message": "Class 'Manager' inherits from object, can be safely removed from bases in python3",
        "message-id": "R0205"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager.disable",
        "line": 1299,
        "column": 4,
        "endLine": 1299,
        "endColumn": 15,
        "path": "__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager.getLogger",
        "line": 1306,
        "column": 4,
        "endLine": 1306,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"getLogger\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager.getLogger",
        "line": 1317,
        "column": 8,
        "endLine": 1317,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager.getLogger",
        "line": 1323,
        "column": 16,
        "endLine": 1323,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager.getLogger",
        "line": 1325,
        "column": 20,
        "endLine": 1325,
        "endColumn": 22,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"ph\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager.getLogger",
        "line": 1326,
        "column": 20,
        "endLine": 1326,
        "endColumn": 22,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager.getLogger",
        "line": 1332,
        "column": 16,
        "endLine": 1332,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager.setLoggerClass",
        "line": 1340,
        "column": 4,
        "endLine": 1340,
        "endColumn": 22,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"setLoggerClass\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager.setLogRecordFactory",
        "line": 1350,
        "column": 4,
        "endLine": 1350,
        "endColumn": 27,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"setLogRecordFactory\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager._fixupParents",
        "line": 1357,
        "column": 4,
        "endLine": 1357,
        "endColumn": 21,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"_fixupParents\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager._fixupParents",
        "line": 1364,
        "column": 8,
        "endLine": 1364,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager._fixupParents",
        "line": 1372,
        "column": 20,
        "endLine": 1372,
        "endColumn": 22,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager._fixupParents",
        "line": 1378,
        "column": 12,
        "endLine": 1378,
        "endColumn": 14,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager._fixupChildren",
        "line": 1381,
        "column": 4,
        "endLine": 1381,
        "endColumn": 22,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"_fixupChildren\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager._fixupChildren",
        "line": 1381,
        "column": 29,
        "endLine": 1381,
        "endColumn": 31,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Argument name \"ph\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Manager._fixupChildren",
        "line": 1388,
        "column": 12,
        "endLine": 1388,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"c\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "Manager._clear_cache",
        "line": 1403,
        "column": 16,
        "endLine": 1403,
        "endColumn": 29,
        "path": "__init__.py",
        "symbol": "protected-access",
        "message": "Access to a protected member _cache of a client class",
        "message-id": "W0212"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "Manager._clear_cache",
        "line": 1404,
        "column": 8,
        "endLine": 1404,
        "endColumn": 24,
        "path": "__init__.py",
        "symbol": "protected-access",
        "message": "Access to a protected member _cache of a client class",
        "message-id": "W0212"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.callHandlers",
        "line": 1699,
        "column": 16,
        "endLine": 1699,
        "endColumn": 52,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"emittedNoHandlerWarning\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "Logger",
        "line": 1411,
        "column": 0,
        "endLine": 1411,
        "endColumn": 12,
        "path": "__init__.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (9/7)",
        "message-id": "R0902"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.setLevel",
        "line": 1439,
        "column": 4,
        "endLine": 1439,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"setLevel\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "Logger.setLevel",
        "line": 1444,
        "column": 8,
        "endLine": 1444,
        "endColumn": 33,
        "path": "__init__.py",
        "symbol": "protected-access",
        "message": "Access to a protected member _clear_cache of a client class",
        "message-id": "W0212"
    },
    {
        "type": "error",
        "module": "logging",
        "obj": "Logger.setLevel",
        "line": 1444,
        "column": 8,
        "endLine": 1444,
        "endColumn": 33,
        "path": "__init__.py",
        "symbol": "no-member",
        "message": "Instance of 'Logger' has no '_clear_cache' member",
        "message-id": "E1101"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.warn",
        "line": 1482,
        "column": 4,
        "endLine": 1482,
        "endColumn": 12,
        "path": "__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "Logger.log",
        "line": 1533,
        "column": 12,
        "endLine": 1536,
        "endColumn": 22,
        "path": "__init__.py",
        "symbol": "no-else-raise",
        "message": "Unnecessary \"else\" after \"raise\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1720"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.findCaller",
        "line": 1540,
        "column": 4,
        "endLine": 1540,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"findCaller\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.findCaller",
        "line": 1545,
        "column": 8,
        "endLine": 1545,
        "endColumn": 9,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"f\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.findCaller",
        "line": 1549,
        "column": 12,
        "endLine": 1549,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"f\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.findCaller",
        "line": 1552,
        "column": 12,
        "endLine": 1552,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"f\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.findCaller",
        "line": 1555,
        "column": 12,
        "endLine": 1555,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"f\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.findCaller",
        "line": 1556,
        "column": 8,
        "endLine": 1556,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.findCaller",
        "line": 1558,
        "column": 12,
        "endLine": 1558,
        "endColumn": 14,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"co\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.findCaller",
        "line": 1561,
        "column": 16,
        "endLine": 1561,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"f\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.findCaller",
        "line": 1572,
        "column": 12,
        "endLine": 1572,
        "endColumn": 14,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.makeRecord",
        "line": 1576,
        "column": 4,
        "endLine": 1576,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"makeRecord\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.makeRecord",
        "line": 1576,
        "column": 38,
        "endLine": 1576,
        "endColumn": 40,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Argument name \"fn\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "Logger.makeRecord",
        "line": 1576,
        "column": 4,
        "endLine": 1576,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (11/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.makeRecord",
        "line": 1582,
        "column": 8,
        "endLine": 1582,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.makeRecord",
        "line": 1587,
        "column": 35,
        "endLine": 1587,
        "endColumn": 73,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "Logger._log",
        "line": 1591,
        "column": 4,
        "endLine": 1591,
        "endColumn": 12,
        "path": "__init__.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger._log",
        "line": 1603,
        "column": 16,
        "endLine": 1603,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"fn\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger._log",
        "line": 1605,
        "column": 16,
        "endLine": 1605,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"fn\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger._log",
        "line": 1607,
        "column": 12,
        "endLine": 1607,
        "endColumn": 14,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"fn\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.addHandler",
        "line": 1627,
        "column": 4,
        "endLine": 1627,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"addHandler\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.removeHandler",
        "line": 1638,
        "column": 4,
        "endLine": 1638,
        "endColumn": 21,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"removeHandler\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.hasHandlers",
        "line": 1649,
        "column": 4,
        "endLine": 1649,
        "endColumn": 19,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"hasHandlers\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.hasHandlers",
        "line": 1659,
        "column": 8,
        "endLine": 1659,
        "endColumn": 9,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"c\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.hasHandlers",
        "line": 1660,
        "column": 8,
        "endLine": 1660,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.hasHandlers",
        "line": 1663,
        "column": 16,
        "endLine": 1663,
        "endColumn": 18,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"rv\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "Logger.hasHandlers",
        "line": 1665,
        "column": 12,
        "endLine": 1668,
        "endColumn": 28,
        "path": "__init__.py",
        "symbol": "no-else-break",
        "message": "Unnecessary \"else\" after \"break\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1723"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.hasHandlers",
        "line": 1668,
        "column": 16,
        "endLine": 1668,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"c\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.callHandlers",
        "line": 1671,
        "column": 4,
        "endLine": 1671,
        "endColumn": 20,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"callHandlers\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.callHandlers",
        "line": 1681,
        "column": 8,
        "endLine": 1681,
        "endColumn": 9,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"c\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.callHandlers",
        "line": 1689,
        "column": 16,
        "endLine": 1689,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"c\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.callHandlers",
        "line": 1691,
        "column": 16,
        "endLine": 1691,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"c\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.callHandlers",
        "line": 1697,
        "column": 33,
        "endLine": 1698,
        "endColumn": 44,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.getEffectiveLevel",
        "line": 1701,
        "column": 4,
        "endLine": 1701,
        "endColumn": 25,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"getEffectiveLevel\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.isEnabledFor",
        "line": 1715,
        "column": 4,
        "endLine": 1715,
        "endColumn": 20,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"isEnabledFor\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "logging",
        "obj": "Logger.isEnabledFor",
        "line": 1727,
        "column": 19,
        "endLine": 1727,
        "endColumn": 39,
        "path": "__init__.py",
        "symbol": "no-member",
        "message": "Instance of 'Logger' has no 'disable' member; maybe 'disabled'?",
        "message-id": "E1101"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.getChild",
        "line": 1737,
        "column": 4,
        "endLine": 1737,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"getChild\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "logging",
        "obj": "Logger.getChild",
        "line": 1754,
        "column": 15,
        "endLine": 1754,
        "endColumn": 37,
        "path": "__init__.py",
        "symbol": "no-member",
        "message": "Instance of 'Logger' has no 'getLogger' member",
        "message-id": "E1101"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.__repr__",
        "line": 1758,
        "column": 15,
        "endLine": 1758,
        "endColumn": 29,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "Logger.__reduce__",
        "line": 1764,
        "column": 12,
        "endLine": 1764,
        "endColumn": 25,
        "path": "__init__.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (pickle)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "Logger.callHandlers",
        "line": 1699,
        "column": 16,
        "endLine": 1699,
        "endColumn": 52,
        "path": "__init__.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'emittedNoHandlerWarning' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "disable",
        "line": 2155,
        "column": 4,
        "endLine": 2155,
        "endColumn": 24,
        "path": "__init__.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'disable' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "LoggerAdapter",
        "line": 1786,
        "column": 0,
        "endLine": 1786,
        "endColumn": 19,
        "path": "__init__.py",
        "symbol": "useless-object-inheritance",
        "message": "Class 'LoggerAdapter' inherits from object, can be safely removed from bases in python3",
        "message-id": "R0205"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LoggerAdapter.warn",
        "line": 1840,
        "column": 4,
        "endLine": 1840,
        "endColumn": 12,
        "path": "__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LoggerAdapter.isEnabledFor",
        "line": 1872,
        "column": 4,
        "endLine": 1872,
        "endColumn": 20,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"isEnabledFor\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LoggerAdapter.setLevel",
        "line": 1878,
        "column": 4,
        "endLine": 1878,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"setLevel\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LoggerAdapter.getEffectiveLevel",
        "line": 1884,
        "column": 4,
        "endLine": 1884,
        "endColumn": 25,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"getEffectiveLevel\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LoggerAdapter.hasHandlers",
        "line": 1890,
        "column": 4,
        "endLine": 1890,
        "endColumn": 19,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Method name \"hasHandlers\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "LoggerAdapter._log",
        "line": 1896,
        "column": 4,
        "endLine": 1896,
        "endColumn": 12,
        "path": "__init__.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "LoggerAdapter._log",
        "line": 1900,
        "column": 15,
        "endLine": 1900,
        "endColumn": 31,
        "path": "__init__.py",
        "symbol": "protected-access",
        "message": "Access to a protected member _log of a client class",
        "message-id": "W0212"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LoggerAdapter.manager",
        "line": 1910,
        "column": 4,
        "endLine": 1910,
        "endColumn": 15,
        "path": "__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LoggerAdapter.name",
        "line": 1918,
        "column": 4,
        "endLine": 1918,
        "endColumn": 12,
        "path": "__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "LoggerAdapter.__repr__",
        "line": 1924,
        "column": 15,
        "endLine": 1924,
        "endColumn": 29,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "basicConfig",
        "line": 1934,
        "column": 0,
        "endLine": 1934,
        "endColumn": 15,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"basicConfig\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "basicConfig",
        "line": 2010,
        "column": 16,
        "endLine": 2010,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"h\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "basicConfig",
        "line": 2031,
        "column": 20,
        "endLine": 2031,
        "endColumn": 21,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"h\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "basicConfig",
        "line": 2035,
        "column": 20,
        "endLine": 2035,
        "endColumn": 21,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"h\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "basicConfig",
        "line": 2040,
        "column": 33,
        "endLine": 2040,
        "endColumn": 59,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "basicConfig",
        "line": 2042,
        "column": 12,
        "endLine": 2042,
        "endColumn": 14,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"fs\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "basicConfig",
        "line": 2044,
        "column": 16,
        "endLine": 2044,
        "endColumn": 17,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"h\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "basicConfig",
        "line": 2053,
        "column": 33,
        "endLine": 2053,
        "endColumn": 63,
        "path": "__init__.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "basicConfig",
        "line": 1934,
        "column": 0,
        "endLine": 1934,
        "endColumn": 15,
        "path": "__init__.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (18/12)",
        "message-id": "R0912"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "getLogger",
        "line": 2062,
        "column": 0,
        "endLine": 2062,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"getLogger\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "warn",
        "line": 2116,
        "column": 0,
        "endLine": 2116,
        "endColumn": 8,
        "path": "__init__.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "disable",
        "line": 2156,
        "column": 4,
        "endLine": 2156,
        "endColumn": 29,
        "path": "__init__.py",
        "symbol": "protected-access",
        "message": "Access to a protected member _clear_cache of a client class",
        "message-id": "W0212"
    },
    {
        "type": "error",
        "module": "logging",
        "obj": "disable",
        "line": 2156,
        "column": 4,
        "endLine": 2156,
        "endColumn": 29,
        "path": "__init__.py",
        "symbol": "no-member",
        "message": "Instance of 'RootLogger' has no '_clear_cache' member",
        "message-id": "E1101"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "shutdown",
        "line": 2158,
        "column": 13,
        "endLine": 2158,
        "endColumn": 24,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Argument name \"handlerList\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "shutdown",
        "line": 2158,
        "column": 0,
        "endLine": 2158,
        "endColumn": 12,
        "path": "__init__.py",
        "symbol": "dangerous-default-value",
        "message": "Dangerous default value _handlerList (builtins.list) as argument",
        "message-id": "W0102"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "shutdown",
        "line": 2165,
        "column": 8,
        "endLine": 2165,
        "endColumn": 10,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"wr\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "shutdown",
        "line": 2183,
        "column": 8,
        "endLine": 2185,
        "endColumn": 21,
        "path": "__init__.py",
        "symbol": "bare-except",
        "message": "No exception type(s) specified",
        "message-id": "W0702"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "shutdown",
        "line": 2169,
        "column": 12,
        "endLine": 2169,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"h\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "",
        "line": 2189,
        "column": 0,
        "endLine": 2189,
        "endColumn": 13,
        "path": "__init__.py",
        "symbol": "wrong-import-position",
        "message": "Import \"import atexit\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "",
        "line": 2218,
        "column": 0,
        "endLine": 2218,
        "endColumn": 21,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Constant name \"_warnings_showwarning\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "logging",
        "obj": "_showwarning",
        "line": 2220,
        "column": 0,
        "endLine": 2220,
        "endColumn": 16,
        "path": "__init__.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "_showwarning",
        "line": 2232,
        "column": 8,
        "endLine": 2232,
        "endColumn": 9,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "captureWarnings",
        "line": 2238,
        "column": 0,
        "endLine": 2238,
        "endColumn": 19,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"captureWarnings\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "logging",
        "obj": "captureWarnings",
        "line": 2244,
        "column": 4,
        "endLine": 2244,
        "endColumn": 32,
        "path": "__init__.py",
        "symbol": "invalid-name",
        "message": "Constant name \"_warnings_showwarning\" doesn't conform to UPPER_CASE naming style ('([^\\\\W\\\\da-z][^\\\\Wa-z]*|__.*__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "logging",
        "obj": "captureWarnings",
        "line": 2244,
        "column": 4,
        "endLine": 2244,
        "endColumn": 32,
        "path": "__init__.py",
        "symbol": "global-statement",
        "message": "Using the global statement",
        "message-id": "W0603"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 115,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 115,
        "column": 91,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "unterminated string literal (detected at line 115) (<unknown>, line 115)",
        "message-id": "E0001"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 143,
        "column": 12,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "syntax-error",
        "message": "unexpected indent (<unknown>, line 143)",
        "message-id": "E0001"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 116,
        "column": 17,
        "endLine": 116,
        "endColumn": 25,
        "path": "app/etl/ps_etl.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 'pattern' in function call",
        "message-id": "E1120"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 116,
        "column": 17,
        "endLine": 116,
        "endColumn": 25,
        "path": "app/etl/ps_etl.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 'repl' in function call",
        "message-id": "E1120"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 116,
        "column": 17,
        "endLine": 116,
        "endColumn": 25,
        "path": "app/etl/ps_etl.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 'string' in function call",
        "message-id": "E1120"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 116,
        "column": 17,
        "endLine": 116,
        "endColumn": 27,
        "path": "app/etl/ps_etl.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 'repl' in function call",
        "message-id": "E1120"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 116,
        "column": 17,
        "endLine": 116,
        "endColumn": 27,
        "path": "app/etl/ps_etl.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 'string' in function call",
        "message-id": "E1120"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 116,
        "column": 25,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "anomalous-backslash-in-string",
        "message": "Anomalous backslash in string: '\\s'. String constant might be missing an r prefix.",
        "message-id": "W1401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 116,
        "column": 17,
        "endLine": 116,
        "endColumn": 29,
        "path": "app/etl/ps_etl.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 'repl' in function call",
        "message-id": "E1120"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 116,
        "column": 17,
        "endLine": 116,
        "endColumn": 29,
        "path": "app/etl/ps_etl.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 'string' in function call",
        "message-id": "E1120"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 116,
        "column": 25,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "anomalous-backslash-in-string",
        "message": "Anomalous backslash in string: '\\s'. String constant might be missing an r prefix.",
        "message-id": "W1401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 116,
        "column": 17,
        "endLine": 116,
        "endColumn": 30,
        "path": "app/etl/ps_etl.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 'repl' in function call",
        "message-id": "E1120"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 116,
        "column": 17,
        "endLine": 116,
        "endColumn": 30,
        "path": "app/etl/ps_etl.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 'string' in function call",
        "message-id": "E1120"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 116,
        "column": 25,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "anomalous-backslash-in-string",
        "message": "Anomalous backslash in string: '\\s'. String constant might be missing an r prefix.",
        "message-id": "W1401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 116,
        "column": 17,
        "endLine": 116,
        "endColumn": 32,
        "path": "app/etl/ps_etl.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 'repl' in function call",
        "message-id": "E1120"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 116,
        "column": 17,
        "endLine": 116,
        "endColumn": 32,
        "path": "app/etl/ps_etl.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 'string' in function call",
        "message-id": "E1120"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 116,
        "column": 25,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "anomalous-backslash-in-string",
        "message": "Anomalous backslash in string: '\\s'. String constant might be missing an r prefix.",
        "message-id": "W1401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 116,
        "column": 17,
        "endLine": 116,
        "endColumn": 35,
        "path": "app/etl/ps_etl.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 'string' in function call",
        "message-id": "E1120"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 116,
        "column": 25,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "anomalous-backslash-in-string",
        "message": "Anomalous backslash in string: '\\s'. String constant might be missing an r prefix.",
        "message-id": "W1401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 116,
        "column": 17,
        "endLine": 116,
        "endColumn": 37,
        "path": "app/etl/ps_etl.py",
        "symbol": "no-value-for-parameter",
        "message": "No value for argument 'string' in function call",
        "message-id": "E1120"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 116,
        "column": 25,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "anomalous-backslash-in-string",
        "message": "Anomalous backslash in string: '\\s'. String constant might be missing an r prefix.",
        "message-id": "W1401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "warning",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 98,
        "column": 1,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "fixme",
        "message": "TODO Catch exception where connection times out when ran locally",
        "message-id": "W0511"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py -m yapf --diff ./app/etl/ps_etl.py
cwd: ./app/etl
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py -c "import yapf"
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/printEnvVariables.py
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py -c "import yapf"

Formatting with yapf failed.
You could either install the 'yapf' formatter, turn it off or use another formatter.
Error: Module 'yapf' not installed.
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py -c "import pip"
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py -c "import yapf"
> ~/anaconda3/bin/conda info --json
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py -m yapf --diff ./app/etl/ps_etl.py
cwd: ./app/etl
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py -m yapf --diff ./app/etl/ps_etl.py
cwd: ./app/etl
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py -m yapf --diff ./app/etl/ps_etl.py
cwd: ./app/etl
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py -m black --diff --quiet ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py -m black --diff --quiet ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py -m black --diff --quiet ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py -m black --diff --quiet ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py -m black --diff --quiet ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py -m black --diff --quiet ./app/etl/ps_etl.py.c8dbb65201c1838cd0dc6cf3e8cefdf1.tmp
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ~/.vscode/extensions/ms-python.vscode-pylance-2022.7.30/dist/typeshed-fallback/stdlib/time.pyi
cwd: ~/.vscode/extensions/ms-python.vscode-pylance-2022.7.30/dist/typeshed-fallback/stdlib
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "time",
        "obj": "",
        "line": 42,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "time.pyi",
        "symbol": "line-too-long",
        "message": "Line too long (129/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "",
        "line": 61,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "time.pyi",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "",
        "line": 90,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "time.pyi",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "time.pyi",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "error",
        "module": "time",
        "obj": "",
        "line": 2,
        "column": 0,
        "endLine": 2,
        "endColumn": 31,
        "path": "time.pyi",
        "symbol": "no-name-in-module",
        "message": "No name 'structseq' in module '_typeshed'",
        "message-id": "E0611"
    },
    {
        "type": "refactor",
        "module": "time",
        "obj": "",
        "line": 16,
        "column": 7,
        "endLine": 16,
        "endColumn": 87,
        "path": "time.pyi",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with \"in\" to \"sys.platform not in ('linux', 'win32', 'darwin')\"",
        "message-id": "R1714"
    },
    {
        "type": "refactor",
        "module": "time",
        "obj": "",
        "line": 26,
        "column": 7,
        "endLine": 26,
        "endColumn": 59,
        "path": "time.pyi",
        "symbol": "consider-using-in",
        "message": "Consider merging these comparisons with \"in\" to \"sys.platform not in ('linux', 'darwin')\"",
        "message-id": "R1714"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time",
        "line": 40,
        "column": 0,
        "endLine": 40,
        "endColumn": 17,
        "path": "time.pyi",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time",
        "line": 40,
        "column": 0,
        "endLine": 40,
        "endColumn": 17,
        "path": "time.pyi",
        "symbol": "invalid-name",
        "message": "Class name \"struct_time\" doesn't conform to PascalCase naming style ('[^\\\\W\\\\da-z][^\\\\W_]+$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_year",
        "line": 44,
        "column": 4,
        "endLine": 44,
        "endColumn": 15,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_year",
        "line": 44,
        "column": 30,
        "endLine": 44,
        "endColumn": 33,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_mon",
        "line": 46,
        "column": 4,
        "endLine": 46,
        "endColumn": 14,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_mon",
        "line": 46,
        "column": 29,
        "endLine": 46,
        "endColumn": 32,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_mday",
        "line": 48,
        "column": 4,
        "endLine": 48,
        "endColumn": 15,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_mday",
        "line": 48,
        "column": 30,
        "endLine": 48,
        "endColumn": 33,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_hour",
        "line": 50,
        "column": 4,
        "endLine": 50,
        "endColumn": 15,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_hour",
        "line": 50,
        "column": 30,
        "endLine": 50,
        "endColumn": 33,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_min",
        "line": 52,
        "column": 4,
        "endLine": 52,
        "endColumn": 14,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_min",
        "line": 52,
        "column": 29,
        "endLine": 52,
        "endColumn": 32,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_sec",
        "line": 54,
        "column": 4,
        "endLine": 54,
        "endColumn": 14,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_sec",
        "line": 54,
        "column": 29,
        "endLine": 54,
        "endColumn": 32,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_wday",
        "line": 56,
        "column": 4,
        "endLine": 56,
        "endColumn": 15,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_wday",
        "line": 56,
        "column": 30,
        "endLine": 56,
        "endColumn": 33,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_yday",
        "line": 58,
        "column": 4,
        "endLine": 58,
        "endColumn": 15,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_yday",
        "line": 58,
        "column": 30,
        "endLine": 58,
        "endColumn": 33,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_isdst",
        "line": 60,
        "column": 4,
        "endLine": 60,
        "endColumn": 16,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_isdst",
        "line": 60,
        "column": 31,
        "endLine": 60,
        "endColumn": 34,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_zone",
        "line": 63,
        "column": 4,
        "endLine": 63,
        "endColumn": 15,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_zone",
        "line": 63,
        "column": 30,
        "endLine": 63,
        "endColumn": 33,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_gmtoff",
        "line": 65,
        "column": 4,
        "endLine": 65,
        "endColumn": 17,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "struct_time.tm_gmtoff",
        "line": 65,
        "column": 32,
        "endLine": 65,
        "endColumn": 35,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "asctime",
        "line": 67,
        "column": 0,
        "endLine": 67,
        "endColumn": 11,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "asctime",
        "line": 67,
        "column": 12,
        "endLine": 67,
        "endColumn": 39,
        "path": "time.pyi",
        "symbol": "invalid-name",
        "message": "Argument name \"t\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "asctime",
        "line": 67,
        "column": 55,
        "endLine": 67,
        "endColumn": 58,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "asctime",
        "line": 67,
        "column": 12,
        "endLine": 67,
        "endColumn": 39,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 't'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "clock",
        "line": 70,
        "column": 4,
        "endLine": 70,
        "endColumn": 13,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "clock",
        "line": 70,
        "column": 26,
        "endLine": 70,
        "endColumn": 29,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "ctime",
        "line": 72,
        "column": 0,
        "endLine": 72,
        "endColumn": 9,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "ctime",
        "line": 72,
        "column": 44,
        "endLine": 72,
        "endColumn": 47,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "ctime",
        "line": 72,
        "column": 10,
        "endLine": 72,
        "endColumn": 28,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'secs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "gmtime",
        "line": 73,
        "column": 0,
        "endLine": 73,
        "endColumn": 10,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "gmtime",
        "line": 73,
        "column": 53,
        "endLine": 73,
        "endColumn": 56,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "gmtime",
        "line": 73,
        "column": 11,
        "endLine": 73,
        "endColumn": 29,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'secs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "localtime",
        "line": 74,
        "column": 0,
        "endLine": 74,
        "endColumn": 13,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "localtime",
        "line": 74,
        "column": 56,
        "endLine": 74,
        "endColumn": 59,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "localtime",
        "line": 74,
        "column": 14,
        "endLine": 74,
        "endColumn": 32,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'secs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "mktime",
        "line": 75,
        "column": 0,
        "endLine": 75,
        "endColumn": 10,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "mktime",
        "line": 75,
        "column": 11,
        "endLine": 75,
        "endColumn": 38,
        "path": "time.pyi",
        "symbol": "invalid-name",
        "message": "Argument name \"t\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "mktime",
        "line": 75,
        "column": 50,
        "endLine": 75,
        "endColumn": 53,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "mktime",
        "line": 75,
        "column": 11,
        "endLine": 75,
        "endColumn": 38,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 't'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "sleep",
        "line": 76,
        "column": 0,
        "endLine": 76,
        "endColumn": 9,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "sleep",
        "line": 76,
        "column": 32,
        "endLine": 76,
        "endColumn": 35,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "sleep",
        "line": 76,
        "column": 10,
        "endLine": 76,
        "endColumn": 21,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'secs'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "strftime",
        "line": 77,
        "column": 0,
        "endLine": 77,
        "endColumn": 12,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "strftime",
        "line": 77,
        "column": 26,
        "endLine": 77,
        "endColumn": 53,
        "path": "time.pyi",
        "symbol": "invalid-name",
        "message": "Argument name \"t\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "strftime",
        "line": 77,
        "column": 13,
        "endLine": 77,
        "endColumn": 24,
        "path": "time.pyi",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'format'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "strftime",
        "line": 77,
        "column": 69,
        "endLine": 77,
        "endColumn": 72,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "strftime",
        "line": 77,
        "column": 13,
        "endLine": 77,
        "endColumn": 24,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'format'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "strftime",
        "line": 77,
        "column": 26,
        "endLine": 77,
        "endColumn": 53,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 't'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "strptime",
        "line": 78,
        "column": 0,
        "endLine": 78,
        "endColumn": 12,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "strptime",
        "line": 78,
        "column": 26,
        "endLine": 78,
        "endColumn": 37,
        "path": "time.pyi",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'format'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "strptime",
        "line": 78,
        "column": 61,
        "endLine": 78,
        "endColumn": 64,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "strptime",
        "line": 78,
        "column": 13,
        "endLine": 78,
        "endColumn": 24,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'string'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "strptime",
        "line": 78,
        "column": 26,
        "endLine": 78,
        "endColumn": 37,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'format'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "time",
        "line": 79,
        "column": 0,
        "endLine": 79,
        "endColumn": 8,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "time",
        "line": 79,
        "column": 21,
        "endLine": 79,
        "endColumn": 24,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "tzset",
        "line": 82,
        "column": 4,
        "endLine": 82,
        "endColumn": 13,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "tzset",
        "line": 82,
        "column": 25,
        "endLine": 82,
        "endColumn": 28,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "refactor",
        "module": "time",
        "obj": "_ClockInfo",
        "line": 84,
        "column": 0,
        "endLine": 84,
        "endColumn": 16,
        "path": "time.pyi",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "get_clock_info",
        "line": 90,
        "column": 0,
        "endLine": 90,
        "endColumn": 18,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "get_clock_info",
        "line": 90,
        "column": 117,
        "endLine": 90,
        "endColumn": 120,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "get_clock_info",
        "line": 90,
        "column": 19,
        "endLine": 90,
        "endColumn": 100,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'name'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "monotonic",
        "line": 91,
        "column": 0,
        "endLine": 91,
        "endColumn": 13,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "monotonic",
        "line": 91,
        "column": 26,
        "endLine": 91,
        "endColumn": 29,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "perf_counter",
        "line": 92,
        "column": 0,
        "endLine": 92,
        "endColumn": 16,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "perf_counter",
        "line": 92,
        "column": 29,
        "endLine": 92,
        "endColumn": 32,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "process_time",
        "line": 93,
        "column": 0,
        "endLine": 93,
        "endColumn": 16,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "process_time",
        "line": 93,
        "column": 29,
        "endLine": 93,
        "endColumn": 32,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "clock_getres",
        "line": 96,
        "column": 4,
        "endLine": 96,
        "endColumn": 20,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "clock_getres",
        "line": 96,
        "column": 44,
        "endLine": 96,
        "endColumn": 47,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "clock_getres",
        "line": 96,
        "column": 21,
        "endLine": 96,
        "endColumn": 32,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'clk_id'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "clock_gettime",
        "line": 97,
        "column": 4,
        "endLine": 97,
        "endColumn": 21,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "clock_gettime",
        "line": 97,
        "column": 45,
        "endLine": 97,
        "endColumn": 48,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "clock_gettime",
        "line": 97,
        "column": 22,
        "endLine": 97,
        "endColumn": 33,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'clk_id'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "clock_settime",
        "line": 98,
        "column": 4,
        "endLine": 98,
        "endColumn": 21,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "clock_settime",
        "line": 98,
        "column": 35,
        "endLine": 98,
        "endColumn": 46,
        "path": "time.pyi",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'time' from outer scope (line 79)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "clock_settime",
        "line": 98,
        "column": 57,
        "endLine": 98,
        "endColumn": 60,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "clock_settime",
        "line": 98,
        "column": 22,
        "endLine": 98,
        "endColumn": 33,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'clk_id'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "clock_settime",
        "line": 98,
        "column": 35,
        "endLine": 98,
        "endColumn": 46,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'time'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "clock_gettime_ns",
        "line": 102,
        "column": 8,
        "endLine": 102,
        "endColumn": 28,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "clock_gettime_ns",
        "line": 102,
        "column": 52,
        "endLine": 102,
        "endColumn": 55,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "clock_gettime_ns",
        "line": 102,
        "column": 29,
        "endLine": 102,
        "endColumn": 42,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'clock_id'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "clock_settime_ns",
        "line": 103,
        "column": 8,
        "endLine": 103,
        "endColumn": 28,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "clock_settime_ns",
        "line": 103,
        "column": 44,
        "endLine": 103,
        "endColumn": 53,
        "path": "time.pyi",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'time' from outer scope (line 79)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "clock_settime_ns",
        "line": 103,
        "column": 63,
        "endLine": 103,
        "endColumn": 66,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "clock_settime_ns",
        "line": 103,
        "column": 29,
        "endLine": 103,
        "endColumn": 42,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'clock_id'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "clock_settime_ns",
        "line": 103,
        "column": 44,
        "endLine": 103,
        "endColumn": 53,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'time'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "pthread_getcpuclockid",
        "line": 106,
        "column": 8,
        "endLine": 106,
        "endColumn": 33,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "pthread_getcpuclockid",
        "line": 106,
        "column": 58,
        "endLine": 106,
        "endColumn": 61,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "warning",
        "module": "time",
        "obj": "pthread_getcpuclockid",
        "line": 106,
        "column": 34,
        "endLine": 106,
        "endColumn": 48,
        "path": "time.pyi",
        "symbol": "unused-argument",
        "message": "Unused argument 'thread_id'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "monotonic_ns",
        "line": 108,
        "column": 4,
        "endLine": 108,
        "endColumn": 20,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "monotonic_ns",
        "line": 108,
        "column": 31,
        "endLine": 108,
        "endColumn": 34,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "perf_counter_ns",
        "line": 109,
        "column": 4,
        "endLine": 109,
        "endColumn": 23,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "perf_counter_ns",
        "line": 109,
        "column": 34,
        "endLine": 109,
        "endColumn": 37,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "process_time_ns",
        "line": 110,
        "column": 4,
        "endLine": 110,
        "endColumn": 23,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "process_time_ns",
        "line": 110,
        "column": 34,
        "endLine": 110,
        "endColumn": 37,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "time_ns",
        "line": 111,
        "column": 4,
        "endLine": 111,
        "endColumn": 15,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "time_ns",
        "line": 111,
        "column": 26,
        "endLine": 111,
        "endColumn": 29,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "thread_time",
        "line": 112,
        "column": 4,
        "endLine": 112,
        "endColumn": 19,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "thread_time",
        "line": 112,
        "column": 32,
        "endLine": 112,
        "endColumn": 35,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "thread_time_ns",
        "line": 113,
        "column": 4,
        "endLine": 113,
        "endColumn": 22,
        "path": "time.pyi",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "thread_time_ns",
        "line": 113,
        "column": 33,
        "endLine": 113,
        "endColumn": 36,
        "path": "time.pyi",
        "symbol": "multiple-statements",
        "message": "More than one statement on a single line",
        "message-id": "C0321"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "",
        "line": 3,
        "column": 0,
        "endLine": 3,
        "endColumn": 32,
        "path": "time.pyi",
        "symbol": "wrong-import-order",
        "message": "standard import \"from typing import Any, Protocol\" should be placed before \"from _typeshed import structseq\"",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "time",
        "obj": "",
        "line": 4,
        "column": 0,
        "endLine": 4,
        "endColumn": 62,
        "path": "time.pyi",
        "symbol": "wrong-import-order",
        "message": "third party import \"from typing_extensions import Final, Literal, TypeAlias, final\" should be placed before \"from _typeshed import structseq\"",
        "message-id": "C0411"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 184,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py -m black --diff --quiet ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 188,
        "column": 54,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 23,
        "column": 0,
        "endLine": 23,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 24,
        "column": 0,
        "endLine": 24,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 23,
        "column": 0,
        "endLine": 23,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 24,
        "column": 0,
        "endLine": 24,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 24,
        "column": 0,
        "endLine": 24,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 25,
        "column": 0,
        "endLine": 25,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 24,
        "column": 0,
        "endLine": 24,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 25,
        "column": 0,
        "endLine": 25,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 24,
        "column": 0,
        "endLine": 24,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 25,
        "column": 0,
        "endLine": 25,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 25,
        "column": 0,
        "endLine": 25,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 26,
        "column": 0,
        "endLine": 26,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 13,
        "column": 50,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 26,
        "column": 0,
        "endLine": 26,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 26,
        "column": 0,
        "endLine": 26,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 26,
        "column": 0,
        "endLine": 26,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 26,
        "column": 0,
        "endLine": 26,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py -m black --diff --quiet ./app/etl/ps_etl.py.c8dbb65201c1838cd0dc6cf3e8cefdf1.tmp
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 26,
        "column": 0,
        "endLine": 26,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 14,
        "column": 3,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 26,
        "column": 0,
        "endLine": 26,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 28,
        "column": 0,
        "endLine": 28,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 28,
        "column": 0,
        "endLine": 28,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py -m black --diff --quiet ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 28,
        "column": 0,
        "endLine": 28,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 30,
        "column": 0,
        "endLine": 30,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 15,
        "column": 56,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 30,
        "column": 0,
        "endLine": 30,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py -m black --diff --quiet ./app/etl/ps_etl.py.c8dbb65201c1838cd0dc6cf3e8cefdf1.tmp
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 30,
        "column": 0,
        "endLine": 30,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 17,
        "column": 58,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 30,
        "column": 0,
        "endLine": 30,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 30,
        "column": 0,
        "endLine": 30,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 30,
        "column": 0,
        "endLine": 30,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 30,
        "column": 0,
        "endLine": 30,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 30,
        "column": 0,
        "endLine": 30,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 30,
        "column": 0,
        "endLine": 30,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 30,
        "column": 0,
        "endLine": 30,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 18,
        "column": 24,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 30,
        "column": 0,
        "endLine": 30,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 31,
        "column": 0,
        "endLine": 31,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 18,
        "column": 28,
        "endLine": null,
        "endColumn": null,
        "path": "app/etl/ps_etl.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 30,
        "column": 0,
        "endLine": 30,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 31,
        "column": 0,
        "endLine": 31,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 30,
        "column": 0,
        "endLine": 30,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 31,
        "column": 0,
        "endLine": 31,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py -m black --diff --quiet ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 32,
        "column": 0,
        "endLine": 32,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 33,
        "column": 0,
        "endLine": 33,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 32,
        "column": 0,
        "endLine": 32,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 33,
        "column": 0,
        "endLine": 33,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ~/AAMeineSachen/Upwork/RTOD_Sam/Code/inference.py
cwd: ~/AAMeineSachen/Upwork/RTOD_Sam/Code
##########Linting Output - pylint##########

[
    {
        "type": "convention",
        "module": "inference",
        "obj": "",
        "line": 52,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "inference.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "inference",
        "obj": "",
        "line": 111,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "inference.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "inference",
        "obj": "",
        "line": 157,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "inference.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "warning",
        "module": "inference",
        "obj": "",
        "line": 188,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "inference.py",
        "symbol": "unnecessary-semicolon",
        "message": "Unnecessary semicolon",
        "message-id": "W0301"
    },
    {
        "type": "warning",
        "module": "inference",
        "obj": "",
        "line": 189,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "inference.py",
        "symbol": "unnecessary-semicolon",
        "message": "Unnecessary semicolon",
        "message-id": "W0301"
    },
    {
        "type": "warning",
        "module": "inference",
        "obj": "",
        "line": 190,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "inference.py",
        "symbol": "unnecessary-semicolon",
        "message": "Unnecessary semicolon",
        "message-id": "W0301"
    },
    {
        "type": "convention",
        "module": "inference",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "inference.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "error",
        "module": "inference",
        "obj": "",
        "line": 2,
        "column": 0,
        "endLine": 2,
        "endColumn": 10,
        "path": "inference.py",
        "symbol": "import-error",
        "message": "Unable to import 'cv2'",
        "message-id": "E0401"
    },
    {
        "type": "warning",
        "module": "inference",
        "obj": "",
        "line": 4,
        "column": 0,
        "endLine": 4,
        "endColumn": 21,
        "path": "inference.py",
        "symbol": "wildcard-import",
        "message": "Wildcard import tkinter",
        "message-id": "W0401"
    },
    {
        "type": "error",
        "module": "inference",
        "obj": "",
        "line": 5,
        "column": 0,
        "endLine": 5,
        "endColumn": 21,
        "path": "inference.py",
        "symbol": "import-error",
        "message": "Unable to import 'PIL'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "inference",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": 6,
        "endColumn": 21,
        "path": "inference.py",
        "symbol": "import-error",
        "message": "Unable to import 'tqdm'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "inference",
        "obj": "",
        "line": 8,
        "column": 0,
        "endLine": 8,
        "endColumn": 17,
        "path": "inference.py",
        "symbol": "import-error",
        "message": "Unable to import 'matplotlib'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "inference",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 10,
        "endColumn": 36,
        "path": "inference.py",
        "symbol": "import-error",
        "message": "Unable to import 'matplotlib'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "inference",
        "obj": "",
        "line": 12,
        "column": 0,
        "endLine": 12,
        "endColumn": 23,
        "path": "inference.py",
        "symbol": "import-error",
        "message": "Unable to import 'tensorflow'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "inference",
        "obj": "",
        "line": 14,
        "column": 0,
        "endLine": 14,
        "endColumn": 49,
        "path": "inference.py",
        "symbol": "import-error",
        "message": "Unable to import 'object_detection.utils'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "inference",
        "obj": "",
        "line": 15,
        "column": 0,
        "endLine": 15,
        "endColumn": 46,
        "path": "inference.py",
        "symbol": "import-error",
        "message": "Unable to import 'object_detection.utils'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "inference",
        "obj": "",
        "line": 16,
        "column": 0,
        "endLine": 16,
        "endColumn": 67,
        "path": "inference.py",
        "symbol": "import-error",
        "message": "Unable to import 'object_detection.utils'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "inference",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 17,
        "endColumn": 51,
        "path": "inference.py",
        "symbol": "import-error",
        "message": "Unable to import 'object_detection.builders'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "inference",
        "obj": "inference_with_plot",
        "line": 90,
        "column": 0,
        "endLine": 90,
        "endColumn": 23,
        "path": "inference.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "inference",
        "obj": "inference_with_plot",
        "line": 91,
        "column": 10,
        "endLine": 91,
        "endColumn": 40,
        "path": "inference.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be a f-string",
        "message-id": "C0209"
    },
    {
        "type": "convention",
        "module": "inference",
        "obj": "nms",
        "line": 171,
        "column": 4,
        "endLine": 173,
        "endColumn": 32,
        "path": "inference.py",
        "symbol": "consider-using-enumerate",
        "message": "Consider using enumerate instead of iterating with range and len",
        "message-id": "C0200"
    },
    {
        "type": "convention",
        "module": "inference",
        "obj": "intersection",
        "line": 190,
        "column": 4,
        "endLine": 190,
        "endColumn": 15,
        "path": "inference.py",
        "symbol": "invalid-name",
        "message": "Variable name \"overlapArea\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "inference",
        "obj": "inference_as_raw_output",
        "line": 202,
        "column": 0,
        "endLine": 202,
        "endColumn": 27,
        "path": "inference.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "inference",
        "obj": "inference_as_raw_output",
        "line": 202,
        "column": 0,
        "endLine": 202,
        "endColumn": 27,
        "path": "inference.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "inference",
        "obj": "inference_as_raw_output",
        "line": 202,
        "column": 0,
        "endLine": 202,
        "endColumn": 27,
        "path": "inference.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (33/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "inference",
        "obj": "inference_as_raw_output",
        "line": 263,
        "column": 25,
        "endLine": 263,
        "endColumn": 31,
        "path": "inference.py",
        "symbol": "use-list-literal",
        "message": "Consider using [] instead of list()",
        "message-id": "R1734"
    },
    {
        "type": "warning",
        "module": "inference",
        "obj": "inference_as_raw_output",
        "line": 266,
        "column": 17,
        "endLine": 266,
        "endColumn": 38,
        "path": "inference.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "inference",
        "obj": "inference_as_raw_output",
        "line": 268,
        "column": 20,
        "endLine": 268,
        "endColumn": 21,
        "path": "inference.py",
        "symbol": "invalid-name",
        "message": "Variable name \"b\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "inference",
        "obj": "inference_as_raw_output",
        "line": 268,
        "column": 23,
        "endLine": 268,
        "endColumn": 24,
        "path": "inference.py",
        "symbol": "invalid-name",
        "message": "Variable name \"s\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "inference",
        "obj": "inference_as_raw_output",
        "line": 268,
        "column": 26,
        "endLine": 268,
        "endColumn": 27,
        "path": "inference.py",
        "symbol": "invalid-name",
        "message": "Variable name \"c\" doesn't conform to snake_case naming style ('([^\\\\W\\\\dA-Z][^\\\\WA-Z]{2,}|_[^\\\\WA-Z]*|__[^\\\\WA-Z\\\\d_][^\\\\WA-Z]+__)$' pattern)",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "inference",
        "obj": "",
        "line": 4,
        "column": 0,
        "endLine": 4,
        "endColumn": 21,
        "path": "inference.py",
        "symbol": "wrong-import-order",
        "message": "standard import \"from tkinter import *\" should be placed before \"import cv2\"",
        "message-id": "C0411"
    },
    {
        "type": "warning",
        "module": "inference",
        "obj": "",
        "line": 2,
        "column": 0,
        "endLine": 2,
        "endColumn": 10,
        "path": "inference.py",
        "symbol": "unused-import",
        "message": "Unused import cv2",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "inference",
        "obj": "",
        "line": 8,
        "column": 0,
        "endLine": 8,
        "endColumn": 17,
        "path": "inference.py",
        "symbol": "unused-import",
        "message": "Unused import matplotlib",
        "message-id": "W0611"
    },
    {
        "type": "warning",
        "module": "inference",
        "obj": "",
        "line": 4,
        "column": 0,
        "endLine": 4,
        "endColumn": 21,
        "path": "inference.py",
        "symbol": "unused-wildcard-import",
        "message": "Unused import(s) enum, sys, types, TclError, re, wantobjects, TkVersion, TclVersion, READABLE, WRITABLE, EXCEPTION, EventType, Event, NoDefaultRoot, Variable, StringVar, IntVar, DoubleVar, BooleanVar, mainloop, getint, getdouble, getboolean, Misc, CallWrapper, XView, YView, Wm, Tk, Tcl, Pack, Place, Grid, BaseWidget, Widget, Toplevel, Button, Canvas, Checkbutton, Entry, Frame, Label, Listbox, Menu, Menubutton, Message, Radiobutton, Scale, Scrollbar, Text, OptionMenu, PhotoImage, BitmapImage, image_names, image_types, Spinbox, LabelFrame, PanedWindow, NO, FALSE, OFF, YES, TRUE, ON, N, S, W, E, NW, SW, NE, SE, NS, EW, NSEW, CENTER, NONE, X, Y, BOTH, LEFT, TOP, RIGHT, BOTTOM, RAISED, SUNKEN, FLAT, RIDGE, GROOVE, SOLID, HORIZONTAL, VERTICAL, NUMERIC, CHAR, WORD, BASELINE, INSIDE, OUTSIDE, SEL, SEL_FIRST, SEL_LAST, END, INSERT, CURRENT, ANCHOR, ALL, NORMAL, DISABLED, ACTIVE, HIDDEN, CASCADE, CHECKBUTTON, COMMAND, RADIOBUTTON, SEPARATOR, SINGLE, BROWSE, MULTIPLE, EXTENDED, DOTBOX, UNDERLINE, PIESLICE, CHORD, ARC, FIRST, LAST, BUTT, PROJECTING, ROUND, BEVEL, MITER, MOVETO, SCROLL, UNITS and PAGES from wildcard import of tkinter",
        "message-id": "W0614"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 32,
        "column": 0,
        "endLine": 32,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 33,
        "column": 0,
        "endLine": 33,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
##########Linting Output - pylint##########

[
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 32,
        "column": 0,
        "endLine": 32,
        "endColumn": 68,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.helpers'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "app.etl.ps_etl",
        "obj": "",
        "line": 33,
        "column": 0,
        "endLine": 33,
        "endColumn": 53,
        "path": "app/etl/ps_etl.py",
        "symbol": "import-error",
        "message": "Unable to import 'helpers.read_config'",
        "message-id": "E0401"
    }
]
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py -m black --diff --quiet ./app/etl/ps_etl.py
cwd: .
> ~/anaconda3/bin/conda run -n bright --no-capture-output python ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/get_output_via_markers.py ~/.vscode/extensions/ms-python.python-2022.10.1/pythonFiles/linter.py -m pylint --max-line-length=100 --enable=F,E,W --include-naming-hint=yes ./app/etl/ps_etl.py
cwd: .
